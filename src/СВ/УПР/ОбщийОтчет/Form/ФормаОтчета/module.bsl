Процедура КнопкаСформироватьНажатие(Кнопка)
	ВыводитьДоставку = Истина;
	
	ФормируемТехнику = Ложь;
	ЭтоТДИсток = Ложь;
	
	Для Каждого стр из Организации Цикл 
		Если стр.Значение.Наименование = "ООО ""ДСМ""" Тогда 
			ФормируемТехнику = Истина;
		КонецЕсли;
		Если стр.Значение.Наименование = "ООО ""ТД""АБЗ Исток""" Тогда 
			ЭтоТДИсток = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	КонтрагентАБЗИсток = Справочники.Контрагенты.НайтиПоНаименованию("АБЗ Исток");
	
	ВФильтреПоПоставщикамЕстьАБЗИсток = Ложь;
	Для Каждого стр из ВыбПоставщик Цикл 
		Если стр.Значение.Наименование = "АБЗ Исток" Тогда 
			ВФильтреПоПоставщикамЕстьАБЗИсток = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ФормируемТехнику И Организации.Количество() > 1 Тогда 
		Предупреждение("Отчет по технике можно формировать только по организации ДСМ");
		Возврат;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ФиксацияСлева = 0;
	Если ФормируемТехнику Тогда 
		Макет = ПолучитьМакет("МакетТехника");
	ИначеЕсли ФормаДляПокупателя Тогда 	
		Если ЭтоТДИсток Тогда 
			Макет = ПолучитьМакет("ФормаДляПокупателяТДИсток");
			ФиксацияСлева = 5;
		Иначе 
			Макет = ПолучитьМакет("ФормаДляПокупателя");
			ФиксацияСлева = 5;
		КонецЕсли;
	Иначе 
		Если ЭтоТДИсток Тогда 
			Макет = ПолучитьМакет("МакетТДИсток");
			ФиксацияСлева = 5;
		Иначе 
			Макет = ПолучитьМакет("Макет");
			ФиксацияСлева = 5;
		КонецЕсли;
	КонецЕсли;
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтог             = Макет.ПолучитьОбласть("СтрокаИтог");
	
	ОбластьМакетаШапка.Параметры.НачДата = Формат(НачДата,"ДФ=dd.MM.yyyy" );
	ОбластьМакетаШапка.Параметры.КонДата = Формат(КонДата,"ДФ=dd.MM.yyyy" );
	//	ОбластьМакетаШапка.Параметры.Контрагент = Контрагент;
	ОбластьМакетаШапка.Параметры.ТипНоменклатуры = ТипНоменклатуры;
	
	//ищем итоги по оплате доставок
	ГруппаДоставка = Справочники.Контрагенты.НайтиПоКоду("О00000820");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(РасходныйКассовыйОрдер.СуммаДокумента) КАК Сумма,
	|	РасходныйКассовыйОрдер.Контрагент КАК Контрагент,
	|	ВЫБОР
	|		КОГДА РасходныйКассовыйОрдер.ВыдачаЗаОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйКассовыйОрдер.Организация
	|		ИНАЧЕ РасходныйКассовыйОрдер.ВыдачаЗаОрганизация
	|	КОНЕЦ КАК Организация
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Дата МЕЖДУ &НачДата И &КонДата
	|	И ВЫБОР
	|			КОГДА РасходныйКассовыйОрдер.ВыдачаЗаОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА РасходныйКассовыйОрдер.Организация
	|			ИНАЧЕ РасходныйКассовыйОрдер.ВыдачаЗаОрганизация
	|		КОНЕЦ В (&Организация)
	|	И РасходныйКассовыйОрдер.Проведен = ИСТИНА
	|	И РасходныйКассовыйОрдер.Контрагент В ИЕРАРХИИ(&ГруппаДоставка)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйКассовыйОрдер.Контрагент,
	|	ВЫБОР
	|		КОГДА РасходныйКассовыйОрдер.ВыдачаЗаОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйКассовыйОрдер.Организация
	|		ИНАЧЕ РасходныйКассовыйОрдер.ВыдачаЗаОрганизация
	|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("НачДата", РасчетыПоДоставкеС);
	Запрос.УстановитьПараметр("КонДата", ТекущаяДата()+1);
	Запрос.УстановитьПараметр("Организация", Организации);
	Запрос.УстановитьПараметр("ГруппаДоставка", ГруппаДоставка);
	ТаблицаОплатДоставок = Запрос.Выполнить().Выгрузить();
	
	//ищем итоги по премиям
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(РасходныйКассовыйОрдер.СуммаДокумента) КАК Сумма,
	|	РасходныйКассовыйОрдер.СубконтоДт2 КАК Контрагент,
	|ВЫБОР
	|		КОГДА РасходныйКассовыйОрдер.ВыдачаЗаОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйКассовыйОрдер.Организация
	|		ИНАЧЕ РасходныйКассовыйОрдер.ВыдачаЗаОрганизация
	|	КОНЕЦ КАК Организация
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Дата МЕЖДУ &НачДата И &КонДата
	|	И ВЫБОР
	|			КОГДА РасходныйКассовыйОрдер.ВыдачаЗаОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА РасходныйКассовыйОрдер.Организация
	|			ИНАЧЕ РасходныйКассовыйОрдер.ВыдачаЗаОрганизация
	|		КОНЕЦ В (&Организация)
	|	И РасходныйКассовыйОрдер.СчетУчетаРасчетовСКонтрагентом = &Счет
	|	И РасходныйКассовыйОрдер.Проведен = ИСТИНА
	|	И РасходныйКассовыйОрдер.СубконтоДт2 <> &NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйКассовыйОрдер.СубконтоДт2,
	|	ВЫБОР
	|		КОГДА РасходныйКассовыйОрдер.ВыдачаЗаОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйКассовыйОрдер.Организация
	|		ИНАЧЕ РасходныйКассовыйОрдер.ВыдачаЗаОрганизация
	|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("НачДата", ОстаткиПо62счетуКорректныНаДату);
	Запрос.УстановитьПараметр("КонДата", ТекущаяДата()+1);
	
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02"));
	Запрос.УстановитьПараметр("Организация", Организации);
	Запрос.УстановитьПараметр("NULL", Неопределено);
	
	ТаблицаВыдачиПремий  = Запрос.Выполнить().Выгрузить();
	
	//ищем текущий остаток по 62 счету 
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	Если НеВыводитьЧастноеЛицо Тогда 
		Запрос.Текст = "
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|Контрагенты.Ссылка
		|ПОМЕСТИТЬ КонтрагентыБезЧЛ
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	НЕ Контрагенты.Наименование ПОДОБНО &ЧЛ
		|;
		|";
	КонецЕсли;
	Если ВыводитьЧастноеЛицо Тогда 
		Запрос.Текст = "
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|Контрагенты.Ссылка
		|ПОМЕСТИТЬ КонтрагентыБезЧЛ
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	 Контрагенты.Наименование ПОДОБНО &ЧЛ
		|;
		|";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+"
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокКт
	|		ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстатокДт
	|	КОНЕЦ КАК НачальныйОстаток,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокКт
	|		ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстатокДт
	|	КОНЕЦ КАК СуммаОстатокКт,
	|	ХозрасчетныйОстатки.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ТекДата, Счет В ИЕРАРХИИ (&Сч62), , ) КАК ХозрасчетныйОстатки";
	
	Если НеВыводитьЧастноеЛицо или ВыводитьЧастноеЛицо Тогда 
		Запрос.Текст = Запрос.Текст + "
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыБезЧЛ КАК КонтрагентыБезЧЛ
		|ПО ХозрасчетныйОстатки.Субконто1 = КонтрагентыБезЧЛ.Ссылка
		|";
		Запрос.УстановитьПараметр("ЧЛ", "%Частное лицо%");
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+"
	|ГДЕ
	|	ХозрасчетныйОстатки.Организация В(&Организация)";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата()+1);
	
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	Запрос.УстановитьПараметр("Организация", Организации);
	ТаблицаПоступленийПоКонтрагентам  = Запрос.Выполнить().Выгрузить();
	
	ТаблицаПоступленийПоКонтрагентам.Колонки.Добавить("Отгрузки", Новый ОписаниеТипов("Число"));
	
	//Ищем поступления дс за период
	Запрос.Текст = "";
	Если НеВыводитьЧастноеЛицо Тогда 
		Запрос.Текст = "
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|Контрагенты.Ссылка
		|ПОМЕСТИТЬ КонтрагентыБезЧЛ
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	НЕ Контрагенты.Наименование ПОДОБНО &ЧЛ
		|;
		|";
	КонецЕсли;
	Если ВыводитьЧастноеЛицо Тогда 
		Запрос.Текст = "
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|Контрагенты.Ссылка
		|ПОМЕСТИТЬ КонтрагентыБезЧЛ
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	 Контрагенты.Наименование ПОДОБНО &ЧЛ
		|;
		|";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+"
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК Сумма,
	|	ХозрасчетныйОбороты.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачДата, &КонДата, , Счет В ИЕРАРХИИ (&Сч62), , , , ) КАК ХозрасчетныйОбороты";
	
	Если НеВыводитьЧастноеЛицо или ВыводитьЧастноеЛицо Тогда 
		Запрос.Текст = Запрос.Текст + "
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыБезЧЛ КАК КонтрагентыБезЧЛ
		|ПО ХозрасчетныйОбороты.Субконто1 = КонтрагентыБезЧЛ.Ссылка
		|";
		Запрос.УстановитьПараметр("ЧЛ", "%Частное лицо%");
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+"
	|ГДЕ
	|	ХозрасчетныйОбороты.Организация В(&Организация)";
	
	Запрос.УстановитьПараметр("НачДата", НачДата);
	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
	Запрос.УстановитьПараметр("Организация", Организации);
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	ТаблицаПоступленийДСПоКонтрагентам  = Запрос.Выполнить().Выгрузить();
	
	ТаблицаПоступленийПоКонтрагентамДляДебиторовИКредиторов = ТаблицаПоступленийПоКонтрагентам.СкопироватьКолонки();
	
	//Ищем текущий остаток по поставщикам 
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 Поставщик,
	|	ХозрасчетныйОстатки.СуммаОстатокДт Сумма,
	|	ХозрасчетныйОстатки.СуммаОстатокДт СуммаДляИтога,
	|	ХозрасчетныйОстатки.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ТекДата, Счет В ИЕРАРХИИ (&Сч60), , ) КАК ХозрасчетныйОстатки";
	
	Запрос.Текст = Запрос.Текст+"
	|ГДЕ
	|	ХозрасчетныйОстатки.Организация В(&Организация)";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата()+1);
	
	Запрос.УстановитьПараметр("Сч60", ПланыСчетов.Хозрасчетный.НайтиПоКоду("60"));
	Запрос.УстановитьПараметр("Организация", Организации);
	ТаблицаПоступленийПоПоставщикам = Запрос.Выполнить().Выгрузить();
	
	Если ФормируемТехнику Тогда 
		//ищем остаток по поставщику. Если сумма по кредиту 60 - долг ДСМ, 
		//если поставщик нам должен остаток по Дебету
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
		|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
		|		ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстатокКт
		|	КОНЕЦ КАК СуммаОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ТекДата, Счет В ИЕРАРХИИ (&Сч60), , ) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ХозрасчетныйОстатки.Организация В (&Организация)";
		
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата()+1);
		Запрос.УстановитьПараметр("Сч60", ПланыСчетов.Хозрасчетный.НайтиПоКоду("60"));
		Запрос.УстановитьПараметр("Организация", Организации);
		ТаблицаПоступленийПоПоставщикам  = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	//ищем остаток д/с по контрагентам на дату формирования отчета
	Если НачалоДня(НачДата) > НачалоДня(ОстаткиПо62счетуКорректныНаДату) Тогда 
		Запрос = Новый Запрос;
		
		Если ФормируемТехнику Тогда 
			Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ
			|	РеализацияТехникиУслуги.Ссылка.Покупатель КАК Покупатель,
			|	СУММА(РеализацияТехникиУслуги.СуммаПродажи) КАК ПродалиСумма,
			|	РеализацияТехникиУслуги.Ссылка.Поставщик КАК Поставщик,
			|	СУММА(РеализацияТехникиУслуги.СуммаПокупки) КАК КупилиСумма
			|ИЗ
			|	Документ.РеализацияТехники.Услуги КАК РеализацияТехникиУслуги
			|ГДЕ
			|	РеализацияТехникиУслуги.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
			|	И РеализацияТехникиУслуги.Ссылка.Организация В (&Организация)
			|	И НЕ РеализацияТехникиУслуги.Ссылка.ПометкаУдаления";
			
			Если ЗначениеЗаполнено(Контрагент) Тогда 
				Запрос.Текст = Запрос.Текст + "
				|И РеализацияТехникиУслуги.Ссылка.Покупатель = &Контрагент";
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст + "		
			|СГРУППИРОВАТЬ ПО
			|	РеализацияТехникиУслуги.Ссылка.Покупатель,
			|	РеализацияТехникиУслуги.Ссылка.Поставщик
			|
			|УПОРЯДОЧИТЬ ПО
			|	Покупатель,
			|	Поставщик";
			
			
			Запрос.УстановитьПараметр("НачДата", НачалоДня(ОстаткиПо62счетуКорректныНаДату));
			Запрос.УстановитьПараметр("КонДата", КонецДня(НачалоДня(НачДата)-1));
			Запрос.УстановитьПараметр("Организация", Организации);
			
			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл 
				Покупатель = Результат.Покупатель;
				
				ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Найти(Покупатель,"Субконто1");
				Если ТекСтрТЗ <> Неопределено Тогда 
					ТекСтрТЗ.СуммаОстатокКт = ТекСтрТЗ.СуммаОстатокКт - Результат.ПродалиСумма;
				Иначе 
					ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Добавить();
					ТекСтрТЗ.Субконто1 = Результат.Покупатель;
					ТекСтрТЗ.СуммаОстатокКт = -Результат.ПродалиСумма;
				КонецЕсли;	
				ТекСтрТЗ.Отгрузки = ТекСтрТЗ.Отгрузки + Результат.ПродалиСумма; 
				
				Поставщик = Результат.Поставщик;
				ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Найти(Поставщик,"Субконто1");
				Если ТекСтрТЗ <> Неопределено Тогда 
					ТекСтрТЗ.СуммаОстатокДт = ТекСтрТЗ.СуммаОстатокДт - Результат.КупилиСумма;
				Иначе 
					ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Добавить();
					ТекСтрТЗ.Субконто1 = Результат.Покупатель;
					ТекСтрТЗ.СуммаОстатокДт = -Результат.КупилиСумма;
				КонецЕсли;	
			КонецЦикла;
		Иначе 
			Запрос.Текст = "";
			Если НеВыводитьЧастноеЛицо Тогда 
				Запрос.Текст = "
				|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|Контрагенты.Ссылка
				|ПОМЕСТИТЬ КонтрагентыБезЧЛ
				|ИЗ
				|	Справочник.Контрагенты КАК Контрагенты
				|ГДЕ
				|	НЕ Контрагенты.Наименование ПОДОБНО &ЧЛ
				|;
				|";
			КонецЕсли;
			Если ВыводитьЧастноеЛицо Тогда 
				Запрос.Текст = "
				|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|Контрагенты.Ссылка
				|ПОМЕСТИТЬ КонтрагентыБезЧЛ
				|ИЗ
				|	Справочник.Контрагенты КАК Контрагенты
				|ГДЕ
				|	 Контрагенты.Наименование ПОДОБНО &ЧЛ
				|;
				|";
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
			|	РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
			|	РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
			|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
			|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК ПродалиКоличество,
			|		ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
			|	СУММА(РеализацияТоваровУслугТовары.КоличествоФакт) КАК КупилиКоличество,
			|	СУММА(ВЫБОР
			|			КОГДА РеализацияТоваровУслугТовары.Ссылка.Сумма = 0
			|				ТОГДА 0
			|			ИНАЧЕ 1
			|		КОНЕЦ) КАК КоличествоДоставка,
			|
			|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма - ЕСТЬNULL(ЦеныЗаПеревозкуПоТССрезПоследних.ЦенаЗаЕдиницу, 0)) КАК ПростойСумма,
			|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма) КАК ОбщаяСуммаДоставки,
			|	СУММА(РеализацияТоваровУслугТовары.Ссылка.СуммаПродажиДоставка) КАК СуммаПродажиДоставка,
			|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Премия) КАК Премия,
			|	СУММА(ВЫБОР
			|	КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0
			|		ТОГДА 0
			|	ИНАЧЕ РеализацияТоваровУслугТовары.Количество
			|КОНЕЦ) КАК ПродалиКоличествоПоЦенамРегистра,
			|СУММА(РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма) КАК ПродалиОбщаяСумма,
			|РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство.КонтрагентДоставка КАК КонтрагентДоставка,
			|	РеализацияТоваровУслугТовары.Ссылка.Поставщик КАК Поставщик,
			|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика КАК ЦенаПоставщика
			|ИЗ
			|Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПроверкеДокументов КАК СведенияОПроверкеДокументов
			|	ПО РеализацияТоваровУслугТовары.Ссылка = СведенияОПроверкеДокументов.Документ
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонДата, ТипЦен = &ЦенаПоставки) КАК ЦеныНоменклатурыСрезПоследних
			|	ПО РеализацияТоваровУслугТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонДата, ТипЦен = &ЦенаПродажи) КАК ЦеныНоменклатурыСрезПоследних1
			|	ПО РеализацияТоваровУслугТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних1.Номенклатура
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныЗаПеревозкуПоТС.СрезПоследних(&КонДата, ) КАК ЦеныЗаПеревозкуПоТССрезПоследних
			|	ПО РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство = ЦеныЗаПеревозкуПоТССрезПоследних.ТС";
			
			Если НеВыводитьЧастноеЛицо или ВыводитьЧастноеЛицо Тогда 
				Запрос.Текст = Запрос.Текст + "
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыБезЧЛ КАК КонтрагентыБезЧЛ
				|ПО РеализацияТоваровУслугТовары.Ссылка.Контрагент = КонтрагентыБезЧЛ.Ссылка
				|";
			КонецЕсли;
			
			Запрос.Текст =  Запрос.Текст + 	"
			|ГДЕ
			|	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
			|	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0 ИЛИ ЕСТЬNULL(РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет, ЛОЖЬ) = ИСТИНА)
			|	И РеализацияТоваровУслугТовары.Ссылка.Организация В(&Организация)";
			
			Если ЗначениеЗаполнено(Контрагент) Тогда 
				Запрос.Текст = Запрос.Текст + "
				|И РеализацияТоваровУслугТовары.Ссылка.Контрагент = &Контрагент";
			КонецЕсли;
			
			Если ВыводитьТолькоПроверенные Тогда 
				Запрос.Текст = Запрос.Текст + "
				|И ЕСТЬNULL(СведенияОПроверкеДокументов.Проверен, ЛОЖЬ) = ИСТИНА";
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст + "
			|СГРУППИРОВАТЬ ПО
			|	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
			|	РеализацияТоваровУслугТовары.Ссылка.Организация,
			|	РеализацияТоваровУслугТовары.Номенклатура,
			|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ),
			|	РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0),
			|	РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство.КонтрагентДоставка,
			|	РеализацияТоваровУслугТовары.Ссылка.Поставщик,
			|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Контрагент,
			|Номенклатура
			|ИТОГИ ПО
			|ОБЩИЕ";
			
			Запрос.УстановитьПараметр("НачДата", НачалоДня(ОстаткиПо62счетуКорректныНаДату));
			Запрос.УстановитьПараметр("КонДата", КонецДня(НачалоДня(НачДата)-1));
			Запрос.УстановитьПараметр("Контрагент", Контрагент);
			Запрос.УстановитьПараметр("Организация", Организации);
			Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
			Запрос.УстановитьПараметр("ЦенаПоставки", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"));
			Запрос.УстановитьПараметр("ЦенаПродажи", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"));
			Запрос.УстановитьПараметр("ЧЛ", "%Частное лицо%");
			
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Запрос.УстановитьПараметр("Корректировка", "%Корректировка%");
			Запрос.УстановитьПараметр("ВыводитьДоставку", ВыводитьДоставку);
			
			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл 
				Если ЗначениеЗаполнено(результат.дата) Тогда 
					
					ДатаПолученияЦены = Результат.Дата;
					фКонтрагент = Результат.Контрагент;
					фНоменклатура = Результат.Номенклатура;
					
					ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("Номенклатура,Контрагент,Организация", фНоменклатура, фКонтрагент,Результат.Организация)).Цена;
					
					Если ЦенаПродажи = 0 Тогда
						ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
						Новый Структура("Номенклатура,Контрагент,Организация", фНоменклатура, фКонтрагент,Справочники.Организации.ПустаяСсылка())).Цена;
					КонецЕсли;
					
					Если ЦенаПродажи = 0 Тогда 
						ЦенаПродажи  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
						Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"),фНоменклатура)).Цена;
					КонецЕсли;
					
					ПродалиСумма = Результат.ПродалиОбщаяСумма+Результат.ПродалиКоличествоПоЦенамРегистра*ЦенаПродажи + Результат.СуммаПродажиДоставка;
					
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Организация", Результат.Организация);
					ПараметрыОтбора.Вставить("Субконто1", Результат.Контрагент);
					
					НайденныеСтроки = ТаблицаПоступленийПоКонтрагентам.НайтиСтроки(ПараметрыОтбора);
					Если НайденныеСтроки.Количество() = 0 Тогда 
						ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Добавить();
						ТекСтрТЗ.Организация = Результат.Организация;
						ТекСтрТЗ.Субконто1 = Результат.Контрагент;
						ТекСтрТЗ.СуммаОстатокКт = -ПродалиСумма;
					Иначе 
						Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
							ТекСтрТЗ.СуммаОстатокКт = ТекСтрТЗ.СуммаОстатокКт - ПродалиСумма;
						КонецЦикла;
					КонецЕсли;
					
					ТекСтрТЗ.Отгрузки = ТекСтрТЗ.Отгрузки + ПродалиСумма; 
					
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Организация", Результат.Организация);
					ПараметрыОтбора.Вставить("Контрагент", Результат.Контрагент);
					
					НайденныеСтроки = ТаблицаВыдачиПремий.НайтиСтроки(ПараметрыОтбора);
					Если НайденныеСтроки.Количество() = 0 Тогда 
						ТекСтрТЗ = ТаблицаВыдачиПремий.Добавить();
						ТекСтрТЗ.Организация = Результат.Организация;
						ТекСтрТЗ.Контрагент = Результат.Контрагент;
						ТекСтрТЗ.Сумма = -Результат.Премия;
					Иначе 
						Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
							ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - Результат.Премия;
						КонецЦикла;
					КонецЕсли;
					
					Цена = Результат.ЦенаПоставщика;				
					Если Цена = 0 Тогда 
						Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
						Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"),фНоменклатура)).Цена;
					КонецЕсли;
					
					фПоставщик = ?(ЗначениеЗаполнено(Результат.Поставщик),Результат.Поставщик,КонтрагентАБЗИсток);
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Организация", Результат.Организация);
					ПараметрыОтбора.Вставить("Поставщик", фПоставщик);
					
					НайденныеСтроки = ТаблицаПоступленийПоПоставщикам.НайтиСтроки(ПараметрыОтбора);
					Если НайденныеСтроки.Количество() = 0 Тогда 
						ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Добавить();
						ТекСтрТЗ.Организация = Результат.Организация;
						ТекСтрТЗ.Поставщик = фПоставщик;
						ТекСтрТЗ.Сумма = -Цена*Результат.КупилиКоличество;
						ТекСтрТЗ.СуммаДляИтога = -Цена*Результат.КупилиКоличество;
					Иначе 
						Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
							ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - Цена*Результат.КупилиКоличество;
							ТекСтрТЗ.СуммаДляИтога = ТекСтрТЗ.СуммаДляИтога - Цена*Результат.КупилиКоличество;
						КонецЦикла;
					КонецЕсли;
					
					Если Результат.Дата >= РасчетыПоДоставкеС Тогда 
						
						ПараметрыОтбора = Новый Структура;
						ПараметрыОтбора.Вставить("Организация", Результат.Организация);
						ПараметрыОтбора.Вставить("Контрагент", Результат.КонтрагентДоставка);
						
						НайденныеСтроки = ТаблицаОплатДоставок.НайтиСтроки(ПараметрыОтбора);
						Если НайденныеСтроки.Количество() = 0 Тогда 
							ТекСтрТЗ = ТаблицаОплатДоставок.Добавить();
							ТекСтрТЗ.Организация = Результат.Организация;
							ТекСтрТЗ.Контрагент = Результат.КонтрагентДоставка;
							ТекСтрТЗ.Сумма = -Результат.ОбщаяСуммаДоставки;
						Иначе 
							Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
								ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - Результат.ОбщаяСуммаДоставки; 
							КонецЦикла;	
						КонецЕсли;		
						
						//ТекСтрТЗ = ТаблицаОплатДоставок.Найти(Результат.КонтрагентДоставка,"Контрагент");
						//	Если ТекСтрТЗ <> Неопределено Тогда 
						//		ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - Результат.ОбщаяСуммаДоставки;
						//	Иначе 
						//		ТекСтрТЗ = ТаблицаОплатДоставок.Добавить();
						//		ТекСтрТЗ.Контрагент = Результат.КонтрагентДоставка;
						//		ТекСтрТЗ.Сумма = -Результат.ОбщаяСуммаДоставки;
						//	КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;		
	
	// ищем итоги отгрузки
	
	ИтКупилиКоличество = 0;
	ИтКупилиСумма = 0;
	ИтКупилиДолг = 0;
	//ИтКупилиСальдо = 0;
	ИтКоличествоДоставка = 0;
	ИтПростойСумма = 0;
	ИтОбщаяСуммаДоставки = 0;
	ИтПродалиДоставка = 0;
	ИтПродалиКоличество = 0;
	ИтПродалиСумма = 0;
	ИтПремия = 0;
	ИтПрибыль = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	
	Если ФормируемТехнику Тогда 
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РеализацияТехникиУслуги.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТехникиУслуги.Услуга КАК Номенклатура,
		|	РеализацияТехникиУслуги.Ссылка.Организация,
		|	СУММА(РеализацияТехникиУслуги.КоличествоПокупки) КАК КупилиКоличество,
		|	СУММА(РеализацияТехникиУслуги.КоличествоПродажи) КАК ПродалиКоличество,
		|	РеализацияТехникиУслуги.Ссылка.Покупатель КАК Контрагент,
		|	РеализацияТехникиУслуги.ЦенаПродажи КАК ЦенаПродажи,
		|	СУММА(РеализацияТехникиУслуги.СуммаПродажи) КАК ПродалиСумма,
		|	РеализацияТехникиУслуги.Ссылка.Поставщик КАК Организация,
		|	РеализацияТехникиУслуги.ЦенаПокупки КАК Цена,
		|	СУММА(РеализацияТехникиУслуги.СуммаПокупки) КАК КупилиСумма,
		|	СУММА(РеализацияТехникиУслуги.СуммаПродажи - РеализацияТехникиУслуги.СуммаПокупки) КАК Прибыль
		|ИЗ
		|	Документ.РеализацияТехники.Услуги КАК РеализацияТехникиУслуги
		|ГДЕ
		|	РеализацияТехникиУслуги.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И НЕ РеализацияТехникиУслуги.Ссылка.ПометкаУдаления
		|	И РеализацияТехникиУслуги.Ссылка.Организация В (&Организация)";
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И РеализацияТехникиУслуги.Ссылка.Покупатель = &Контрагент";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "		
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТехникиУслуги.Ссылка.Покупатель,
		|	РеализацияТехникиУслуги.Ссылка.Организация,
		|	НАЧАЛОПЕРИОДА(РеализацияТехникиУслуги.Ссылка.Дата, ДЕНЬ),
		|	РеализацияТехникиУслуги.Ссылка.Поставщик,
		|	РеализацияТехникиУслуги.Услуга,
		|	РеализацияТехникиУслуги.ЦенаПокупки,
		|	РеализацияТехникиУслуги.ЦенаПродажи
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Контрагент,
		|	Организация
		|ИТОГИ ПО
		|	ОБЩИЕ";
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Организация", Организации);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			
			Если ЗначениеЗаполнено(результат.дата) Тогда 
				ИтКупилиКоличество = ИтКупилиКоличество + Результат.КупилиКоличество;
				ИтКупилиСумма = ИтКупилиСумма + Результат.КупилиСумма;
				ИтПродалиКоличество = ИтПродалиКоличество + Результат.ПродалиКоличество;
				ИтПродалиСумма = ИтПродалиСумма + Результат.ПродалиСумма;
				ИтПрибыль = ИтПрибыль + Результат.Прибыль;
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Если НеВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = "
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|Контрагенты.Ссылка
			|ПОМЕСТИТЬ КонтрагентыБезЧЛ
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	НЕ Контрагенты.Наименование ПОДОБНО &ЧЛ
			|;
			|";
		КонецЕсли;
		Если ВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = "
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|Контрагенты.Ссылка
			|ПОМЕСТИТЬ КонтрагентыБезЧЛ
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	 Контрагенты.Наименование ПОДОБНО &ЧЛ
			|;
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
		|РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|СУММА(РеализацияТоваровУслугТовары.Количество) КАК ПродалиКоличество,
		|СУММА(РеализацияТоваровУслугТовары.КоличествоФакт) КАК КупилиКоличество,
		|СУММА(ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Ссылка.Сумма = 0
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ) КАК КоличествоДоставка,
		|СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма - ЕСТЬNULL(ЦеныЗаПеревозкуПоТССрезПоследних.ЦенаЗаЕдиницу, 0)) КАК ПростойСумма,
		|СУММА(РеализацияТоваровУслугТовары.Ссылка.Премия) КАК Премия,
		|СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма) КАК ОбщаяСуммаДоставки,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.СуммаПродажиДоставка) КАК СуммаПродажиДоставка,
		|СУММА(ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0
		|			ТОГДА 0
		|		ИНАЧЕ РеализацияТоваровУслугТовары.Количество
		|	КОНЕЦ) КАК ПродалиКоличествоПоЦенамРегистра,
		|СУММА(РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма) КАК ПродалиОбщаяСумма,
		|	РеализацияТоваровУслугТовары.Ссылка.Поставщик КАК Поставщик,
		|РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика КАК ЦенаПоставщика";
		
		Если ВыводитьКаждуюОтгрузкуОтдельно Тогда 
			Запрос.Текст = Запрос.Текст + "
			|,РеализацияТоваровУслугТовары.Ссылка
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПроверкеДокументов КАК СведенияОПроверкеДокументов
		|		ПО РеализацияТоваровУслугТовары.Ссылка = СведенияОПроверкеДокументов.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныЗаПеревозкуПоТС.СрезПоследних(&КонДата, ) КАК ЦеныЗаПеревозкуПоТССрезПоследних
		|		ПО РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство = ЦеныЗаПеревозкуПоТССрезПоследних.ТС";
		
		Если НеВыводитьЧастноеЛицо ИЛИ ВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = Запрос.Текст + "
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыБезЧЛ КАК КонтрагентыБезЧЛ
			|ПО РеализацияТоваровУслугТовары.Ссылка.Контрагент = КонтрагентыБезЧЛ.Ссылка
			|";
		КонецЕсли;
		
		Запрос.Текст =  Запрос.Текст + 	"
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0 ИЛИ ЕСТЬNULL(РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет, ЛОЖЬ) = ИСТИНА)
		|	И РеализацияТоваровУслугТовары.Ссылка.Организация В(&Организация)";
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И РеализацияТоваровУслугТовары.Ссылка.Контрагент = &Контрагент";
		КонецЕсли;
		
		Если ВыводитьТолькоПроверенные Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И ЕСТЬNULL(СведенияОПроверкеДокументов.Проверен, ЛОЖЬ) = ИСТИНА";
		КонецЕсли;
		
		Если ВыбПоставщик.Количество() > 0 Тогда 
			Если ВФильтреПоПоставщикамЕстьАБЗИсток Тогда 
				Запрос.Текст = Запрос.Текст + "
				|И (РеализацияТоваровУслугТовары.Ссылка.Поставщик = Значение(Справочник.Контрагенты.ПустаяСсылка)
				|ИЛИ РеализацияТоваровУслугТовары.Ссылка.Поставщик В (&ВыбПоставщик))";
			Иначе 
				Запрос.Текст = Запрос.Текст + "
				|И РеализацияТоваровУслугТовары.Ссылка.Поставщик В (&ВыбПоставщик)";
			КонецЕсли;
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|СГРУППИРОВАТЬ ПО
		|РеализацияТоваровУслугТовары.Ссылка.Контрагент,
		|РеализацияТоваровУслугТовары.Ссылка.Организация,
		|РеализацияТоваровУслугТовары.Номенклатура,
		|НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ),
		|РеализацияТоваровУслугТовары.Ссылка.Поставщик,
		|РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика";
		Если ВыводитьКаждуюОтгрузкуОтдельно Тогда 
			Запрос.Текст = Запрос.Текст + "
			|,РеализацияТоваровУслугТовары.Ссылка
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Контрагент,
		|Номенклатура
		|ИТОГИ ПО
		|ОБЩИЕ";
		
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Организация", Организации);
		Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
		Запрос.УстановитьПараметр("ЧЛ", "%Частное лицо%");
		Запрос.УстановитьПараметр("ЦенаПоставки", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"));
		Запрос.УстановитьПараметр("ЦенаПродажи", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"));
		
		Запрос.УстановитьПараметр("Корректировка", "%Корректировка%");
		Запрос.УстановитьПараметр("ВыводитьДоставку", ВыводитьДоставку);
		Запрос.УстановитьПараметр("ВыбПоставщик", ВыбПоставщик);
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			Если ЗначениеЗаполнено(результат.дата) Тогда 
				Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда 
					Если  Результат.Номенклатура.ТипНоменклатуры <> ТипНоменклатуры Тогда 
						Продолжить;
					КонецЕсли;
				КонецЕсли; 
				
				ДатаПолученияЦены = Результат.Дата;
				фКонтрагент = Результат.Контрагент;
				фНоменклатура = Результат.Номенклатура;
				фПоставщик = Результат.Поставщик;
				
				Цена = Результат.ЦенаПоставщика;				
				Если Цена = 0 Тогда 
					Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"),фНоменклатура)).Цена;
				КонецЕсли;
				
				ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
				Новый Структура("Номенклатура,Контрагент,Организация", фНоменклатура, фКонтрагент,Результат.Организация)).Цена;
				
				Если ЦенаПродажи = 0 Тогда
					ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("Номенклатура,Контрагент,Организация", фНоменклатура, фКонтрагент,Справочники.Организации.ПустаяСсылка())).Цена;
				КонецЕсли;
				
				Если ЦенаПродажи = 0 Тогда 
					ЦенаПродажи  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"),фНоменклатура)).Цена;
				КонецЕсли;
				
				ПродалиСумма = Результат.ПродалиОбщаяСумма+Результат.ПродалиКоличествоПоЦенамРегистра*ЦенаПродажи + Результат.СуммаПродажиДоставка;
				
				УчитыватьВИтоговойСтроке = Истина;
				Если ЗначениеЗаполнено(Машина) И ВыводитьКаждуюОтгрузкуОтдельно Тогда 
					Если Машина <> Результат.Ссылка.ТранспортноеСредство Тогда 
						УчитыватьВИтоговойСтроке = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				Если ВыводитьТолькоСДоcтавкой И Результат.КоличествоДоставка = 0 Тогда 
					УчитыватьВИтоговойСтроке = Ложь;
				КонецЕсли;	
				
				Если УчитыватьВИтоговойСтроке Тогда 
					ИтКоличествоДоставка = ИтКоличествоДоставка + Результат.КоличествоДоставка;
					ИтПростойСумма = ИтПростойСумма + Результат.ПростойСумма;
					ИтОбщаяСуммаДоставки = ИтОбщаяСуммаДоставки + Результат.ОбщаяСуммаДоставки;
					ИтПродалиДоставка = ИтПродалиДоставка + Результат.СуммаПродажиДоставка;
					ИтПремия = ИтПремия + Результат.Премия;
					ИтКупилиКоличество = ИтКупилиКоличество + Результат.КупилиКоличество;
					ИтКупилиСумма = ИтКупилиСумма + Цена*Результат.КупилиКоличество;
					
					ИтПродалиКоличество = ИтПродалиКоличество + Результат.ПродалиКоличество;
					ИтПродалиСумма = ИтПродалиСумма + ПродалиСумма;
					ИтПрибыль = ИтПрибыль + ПродалиСумма - Цена*Результат.КупилиКоличество - Результат.ОбщаяСуммаДоставки - Результат.Премия;
				КонецЕсли;
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Организация", Результат.Организация);
				ПараметрыОтбора.Вставить("Поставщик", фПоставщик);
				
				НайденныеСтроки = ТаблицаПоступленийПоПоставщикам.НайтиСтроки(ПараметрыОтбора);
				Если НайденныеСтроки.Количество() = 0 Тогда 
					ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Добавить();
					ТекСтрТЗ.Организация = Результат.Организация;
					ТекСтрТЗ.Поставщик = фПоставщик;
					ТекСтрТЗ.Сумма = 0;
					ТекСтрТЗ.СуммаДляИтога = -Цена*Результат.КупилиКоличество;
				Иначе 
					Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
						ТекСтрТЗ.СуммаДляИтога = ТекСтрТЗ.СуммаДляИтога - Цена*Результат.КупилиКоличество;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого ТекПоставщик из  ВыбПоставщик Цикл 
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Поставщик", ТекПоставщик.Значение);
			НайденныеСтроки = ТаблицаПоступленийПоПоставщикам.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда 
				Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
					ИтКупилиДолг = ИтКупилиДолг + ?(ТекСтрТЗ.СуммаДляИтога < 0, -ТекСтрТЗ.СуммаДляИтога, 0); 			
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//ищем отгрузки
	
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	
	Если ФормируемТехнику Тогда 
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РеализацияТехникиУслуги.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТехникиУслуги.Услуга КАК Номенклатура,
		|	СУММА(РеализацияТехникиУслуги.КоличествоПокупки) КАК КупилиКоличество,
		|	СУММА(РеализацияТехникиУслуги.КоличествоПродажи) КАК ПродалиКоличество,
		|	РеализацияТехникиУслуги.Ссылка.Покупатель КАК Контрагент,
		|	РеализацияТехникиУслуги.ЦенаПродажи КАК ЦенаПродажи,
		|	СУММА(РеализацияТехникиУслуги.СуммаПродажи) КАК ПродалиСумма,
		|	РеализацияТехникиУслуги.Ссылка.Поставщик КАК Организация,
		|	РеализацияТехникиУслуги.ЦенаПокупки КАК Цена,
		|	СУММА(РеализацияТехникиУслуги.СуммаПокупки) КАК КупилиСумма,
		|	СУММА(РеализацияТехникиУслуги.СуммаПродажи - РеализацияТехникиУслуги.СуммаПокупки) КАК Прибыль,
		|	РеализацияТехникиУслуги.Ссылка.Проведен
		|ИЗ
		|	Документ.РеализацияТехники.Услуги КАК РеализацияТехникиУслуги
		|ГДЕ
		|	РеализацияТехникиУслуги.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И НЕ РеализацияТехникиУслуги.Ссылка.ПометкаУдаления
		|	И РеализацияТехникиУслуги.Ссылка.Организация В (&Организация)";
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И РеализацияТехникиУслуги.Ссылка.Покупатель = &Контрагент";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "		
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТехникиУслуги.Ссылка.Покупатель,
		|	НАЧАЛОПЕРИОДА(РеализацияТехникиУслуги.Ссылка.Дата, ДЕНЬ),
		|	РеализацияТехникиУслуги.Ссылка.Поставщик,
		|	РеализацияТехникиУслуги.Услуга,
		|	РеализацияТехникиУслуги.ЦенаПокупки,
		|	РеализацияТехникиУслуги.ЦенаПродажи,
		|	РеализацияТехникиУслуги.Ссылка.Проведен
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Контрагент,
		|	Организация
		|ИТОГИ ПО
		|	ОБЩИЕ";
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Организация", Организации);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			ОбластьМакетаСтрока.Параметры.Заполнить(Результат);
			ОбластьМакетаСтрока.Параметры["Долг"] = 0;
			ОбластьМакетаСтрока.Параметры["Расчет"] = 0;
			ОбластьМакетаСтрока.Параметры["Сальдо"] = 0;
			ОбластьМакетаСтрока.Параметры["ДолгКупили"] = 0;
			ОбластьМакетаСтрока.Параметры["РасчетКупили"] = 0;
			ОбластьМакетаСтрока.Параметры["СальдоКупили"] = 0;
			
			Если ЗначениеЗаполнено(результат.дата) Тогда 
				фКонтрагент = Результат.Контрагент;
				фНоменклатура = Результат.Номенклатура;
				
				Если Дата(Результат.Дата) >= ОстаткиПо62счетуКорректныНаДату Тогда 
					ПродалиСумма = Результат.ПродалиСумма;
					
					ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Найти(Результат.Контрагент,"Субконто1");
					Если ТекСтрТЗ <> Неопределено Тогда 
						Если ТекСтрТЗ.СуммаОстатокКт >=0 Тогда 
							Если ТекСтрТЗ.СуммаОстатокКт <= ПродалиСумма Тогда 
								ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма - ТекСтрТЗ.СуммаОстатокКт;
								ОбластьМакетаСтрока.Параметры["Расчет"] =  ТекСтрТЗ.СуммаОстатокКт;
							Иначе 
								ОбластьМакетаСтрока.Параметры["Долг"] = 0;
								ОбластьМакетаСтрока.Параметры["Расчет"] = ПродалиСумма;
							КонецЕсли;
						Иначе
							ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма;
						КонецЕсли;
						ТекСтрТЗ.СуммаОстатокКт = ТекСтрТЗ.СуммаОстатокКт - ПродалиСумма;
					Иначе 
						ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Добавить();
						ТекСтрТЗ.Субконто1 = Результат.Контрагент;
						ТекСтрТЗ.СуммаОстатокКт = -ПродалиСумма;
						ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма;
					КонецЕсли;
					ТекСтрТЗ.Отгрузки = ТекСтрТЗ.Отгрузки + ПродалиСумма; 
					ОбластьМакетаСтрока.Параметры["Сальдо"] = ТекСтрТЗ.СуммаОстатокКт;
					
					ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентамДляДебиторовИКредиторов.Добавить();
					ТекСтрТЗ.Субконто1 = Результат.Контрагент;
					ТекСтрТЗ.Отгрузки = ПродалиСумма;
					
					КупилиСумма = Результат.КупилиСумма;
					ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Найти(Результат.Организация,"Субконто1");
					Если ТекСтрТЗ <> Неопределено Тогда 
						Если ТекСтрТЗ.СуммаОстатокДт >=0 Тогда 
							Если ТекСтрТЗ.СуммаОстатокДт <= КупилиСумма Тогда 
								ОбластьМакетаСтрока.Параметры["ДолгКупили"] = КупилиСумма - ТекСтрТЗ.СуммаОстатокДт;
								ОбластьМакетаСтрока.Параметры["РасчетКупили"] =  ТекСтрТЗ.СуммаОстатокДт;
							Иначе 
								ОбластьМакетаСтрока.Параметры["ДолгКупили"] = 0;
								ОбластьМакетаСтрока.Параметры["РасчетКупили"] = КупилиСумма;
							КонецЕсли;
						Иначе
							ОбластьМакетаСтрока.Параметры["ДолгКупили"] = КупилиСумма;
						КонецЕсли;
						ТекСтрТЗ.СуммаОстатокДт = ТекСтрТЗ.СуммаОстатокДт - КупилиСумма;
					Иначе 
						ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Добавить();
						ТекСтрТЗ.Субконто1 = Результат.Организация;
						ТекСтрТЗ.СуммаОстатокДт = -КупилиСумма;
						ОбластьМакетаСтрока.Параметры["ДолгКупили"] = КупилиСумма;
					КонецЕсли;	
					ОбластьМакетаСтрока.Параметры["СальдоКупили"] = ТекСтрТЗ.СуммаОстатокДт;
				КонецЕсли;
				Если Результат.Проведен Тогда 
					ОбластьМакетаСтрока.Параметры["Состояние"] = "Завершено";
				Иначе 
					ОбластьМакетаСтрока.Параметры["Состояние"] = "В работе";
				КонецЕсли;
				Если ЗначениеЗаполнено(Номенклатура) Тогда 
					Если  Результат.Номенклатура = Номенклатура Тогда 
						ВыводитьСтроку = Истина;
						
						Если ВыводитьТолькоДолжников Тогда 
							Если ОбластьМакетаСтрока.Параметры["Сальдо"] >= 0 Тогда 
								ВыводитьСтроку = Ложь;
							КонецЕсли;
						КонецЕсли;
						
						Если ВыводитьТолькоДолжниковПоставщики Тогда 
							Если ОбластьМакетаСтрока.Параметры["КупилиСальдо"] >= 0 Тогда 
								ВыводитьСтроку = Ложь;
							КонецЕсли;
						КонецЕсли;
						
						Если ВыводитьСтроку Тогда  
							ТабДокумент.Вывести(ОбластьМакетаСтрока);
						КонецЕсли;
					КонецЕсли;
				Иначе 
					ВыводитьСтроку = Истина;
					
					Если ВыводитьТолькоДолжников Тогда 
						Если ОбластьМакетаСтрока.Параметры["Сальдо"] >= 0 Тогда 
							ВыводитьСтроку = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если ВыводитьТолькоДолжниковПоставщики Тогда 
						Если ОбластьМакетаСтрока.Параметры["КупилиСальдо"] >= 0 Тогда 
							ВыводитьСтроку = Ложь;
						КонецЕсли;
					КонецЕсли;
					
					Если ВыводитьСтроку Тогда  
						ТабДокумент.Вывести(ОбластьМакетаСтрока);
					КонецЕсли;
				КонецЕсли;
			Иначе 
				Если НЕ ВыводитьТолькоДолжников И НЕ ВыводитьТолькоДолжниковПоставщики Тогда 
					ОбластьМакетаИтог.Параметры["ИтКупилиКоличество"] = ИтКупилиКоличество;
					ОбластьМакетаИтог.Параметры["ИтКупилиСумма"] = ИтКупилиСумма;
					ОбластьМакетаИтог.Параметры["ИтПродалиКоличество"] = ИтПродалиКоличество;
					ОбластьМакетаИтог.Параметры["ИтПродалиСумма"] = ИтПродалиСумма;
					ОбластьМакетаИтог.Параметры["ИтПрибыль"] = ИтПрибыль;
				КонецЕсли;
				ТабДокумент.Вывести(ОбластьМакетаИтог);
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Если НеВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = "
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|Контрагенты.Ссылка
			|ПОМЕСТИТЬ КонтрагентыБезЧЛ
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	НЕ Контрагенты.Наименование ПОДОБНО &ЧЛ
			|;
			|";
		КонецЕсли;
		Если ВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = "
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|Контрагенты.Ссылка
			|ПОМЕСТИТЬ КонтрагентыБезЧЛ
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			| Контрагенты.Наименование ПОДОБНО &ЧЛ
			|;
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
		|	РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК ПродалиКоличество,
		|	СУММА(РеализацияТоваровУслугТовары.КоличествоФакт) КАК КупилиКоличество,
		|	СУММА(ВЫБОР
		|			КОГДА РеализацияТоваровУслугТовары.Ссылка.Сумма = 0
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК КоличествоДоставка,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма - ЕСТЬNULL(ЦеныЗаПеревозкуПоТССрезПоследних.ЦенаЗаЕдиницу, 0)) КАК ПростойСумма,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Премия) КАК Премия,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма) КАК ОбщаяСуммаДоставки,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.СуммаПродажиДоставка) КАК СуммаПродажиДоставка,
		|	СУММА(ВЫБОР
		|			КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0
		|				ТОГДА 0
		|			ИНАЧЕ РеализацияТоваровУслугТовары.Количество
		|		КОНЕЦ) КАК ПродалиКоличествоПоЦенамРегистра,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма) КАК ПродалиОбщаяСумма,
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика КАК ЦенаПоставщика,
		|	РеализацияТоваровУслугТовары.Ссылка.Поставщик КАК Поставщик,
		|	РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство.КонтрагентДоставка КАК КонтрагентДоставка";
		
		Если ВыводитьКаждуюОтгрузкуОтдельно Тогда 
			Запрос.Текст = Запрос.Текст + "
			|,РеализацияТоваровУслугТовары.Ссылка
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПроверкеДокументов КАК СведенияОПроверкеДокументов
		|		ПО РеализацияТоваровУслугТовары.Ссылка = СведенияОПроверкеДокументов.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныЗаПеревозкуПоТС.СрезПоследних(&КонДата, ) КАК ЦеныЗаПеревозкуПоТССрезПоследних
		|		ПО РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство = ЦеныЗаПеревозкуПоТССрезПоследних.ТС";
		
		Если НеВыводитьЧастноеЛицо Или ВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = Запрос.Текст + "
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыБезЧЛ КАК КонтрагентыБезЧЛ
			|ПО РеализацияТоваровУслугТовары.Ссылка.Контрагент = КонтрагентыБезЧЛ.Ссылка
			|";
		КонецЕсли;
		
		Запрос.Текст =  Запрос.Текст + 	"
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0 ИЛИ ЕСТЬNULL(РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет, ЛОЖЬ) = ИСТИНА)
		|	И РеализацияТоваровУслугТовары.Ссылка.Организация В (&Организация)";
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И РеализацияТоваровУслугТовары.Ссылка.Контрагент = &Контрагент";
		КонецЕсли;
		
		Если ВыводитьТолькоПроверенные Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И ЕСТЬNULL(СведенияОПроверкеДокументов.Проверен, ЛОЖЬ) = ИСТИНА";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|СГРУППИРОВАТЬ ПО
		|РеализацияТоваровУслугТовары.Ссылка.Контрагент,
		|	РеализацияТоваровУслугТовары.Ссылка.Организация,
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ),
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика,
		|	РеализацияТоваровУслугТовары.Ссылка.Поставщик,
		|	РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство.КонтрагентДоставка";
		
		Если ВыводитьКаждуюОтгрузкуОтдельно Тогда 
			Запрос.Текст = Запрос.Текст + "
			|,РеализацияТоваровУслугТовары.Ссылка
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Контрагент,
		|Номенклатура
		|ИТОГИ ПО
		|ОБЩИЕ";
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Организация", Организации);
		Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
		Запрос.УстановитьПараметр("ЧЛ", "%Частное лицо%");
		Запрос.УстановитьПараметр("ЦенаПоставки", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"));
		Запрос.УстановитьПараметр("ЦенаПродажи", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"));
		
		Запрос.УстановитьПараметр("Корректировка", "%Корректировка%");
		Запрос.УстановитьПараметр("ВыводитьДоставку", ВыводитьДоставку);
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			ОбластьМакетаСтрока.Параметры.Заполнить(Результат);
			Попытка
				ОбластьМакетаСтрока.Параметры["Долг"] = 0;
				ОбластьМакетаСтрока.Параметры["Расчет"] = 0;
				ОбластьМакетаСтрока.Параметры["Сальдо"] = 0;
				ОбластьМакетаСтрока.Параметры["ПремияДолг"] = 0;
				ОбластьМакетаСтрока.Параметры["ПремияРасчет"] = 0;
				ОбластьМакетаСтрока.Параметры["ПремияСальдо"] = 0;
				ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = 0;
				ОбластьМакетаСтрока.Параметры["ДоставкаРасчет"] = 0;
				ОбластьМакетаСтрока.Параметры["ДоставкаСальдо"] = 0;
				ОбластьМакетаСтрока.Параметры["КупилиДолг"] = 0;
				ОбластьМакетаСтрока.Параметры["КупилиРасчет"] = 0;
				ОбластьМакетаСтрока.Параметры["КупилиСальдо"] = 0;
			Исключение
			КонецПопытки;
			
			Если ЗначениеЗаполнено(результат.дата) Тогда 
				ДатаПолученияЦены = Результат.Дата;
				фКонтрагент = Результат.Контрагент;
				фНоменклатура = Результат.Номенклатура;
				Цена = Результат.ЦенаПоставщика;
				Если  Цена = 0  Тогда 
					Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"),фНоменклатура)).Цена;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Результат.Поставщик) Тогда
					ОбластьМакетаСтрока.Параметры["Организация"] = Результат.ПОставщик;
				Иначе
					ОбластьМакетаСтрока.Параметры["Организация"] = "АБЗ-Исток";
				КонецЕсли;
				
				ОбластьМакетаСтрока.Параметры["ОрганизацияОтчет"] = Результат.Организация;
				
				ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
				Новый Структура("Номенклатура,Контрагент,Организация", фНоменклатура, фКонтрагент,Результат.Организация)).Цена;
				
				Если ЦенаПродажи = 0 Тогда
					ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("Номенклатура,Контрагент,Организация", фНоменклатура, фКонтрагент,Справочники.Организации.ПустаяСсылка())).Цена;
				КонецЕсли;
				
				Если ЦенаПродажи = 0 Тогда 
					ЦенаПродажи  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"),фНоменклатура)).Цена;
				КонецЕсли;
				
				ПродалиСумма = Результат.ПродалиОбщаяСумма+Результат.ПродалиКоличествоПоЦенамРегистра*ЦенаПродажи + Результат.СуммаПродажиДоставка;
				
				Если Не ФормаДляПокупателя тогда
					ОбластьМакетаСтрока.Параметры["Цена"] = Цена;
					ОбластьМакетаСтрока.Параметры["КупилиСумма"] = Цена*Результат.КупилиКоличество;
					ОбластьМакетаСтрока.Параметры["Прибыль"] = ПродалиСумма - Цена*Результат.КупилиКоличество - Результат.ОбщаяСуммаДоставки - Результат.Премия;
				КонецЕсли;
				
				Если ЭтоТДИсток Тогда  
					ОбластьМакетаСтрока.Параметры["ПродалиДоставка"] = Результат.СуммаПродажиДоставка;
					Если ВыводитьКаждуюОтгрузкуОтдельно Тогда 
						ОбластьМакетаСтрока.Параметры["Машина"] = Результат.Ссылка.ТранспортноеСредство; 
					КонецЕсли;
				КонецЕсли;
				
				ОбластьМакетаСтрока.Параметры["ЦенаПродажи"] = Окр(?(Результат.ПродалиКоличество =0,0,(ПродалиСумма-Результат.СуммаПродажиДоставка)/Результат.ПродалиКоличество),2,РежимОкругления.Окр15как20);
				ОбластьМакетаСтрока.Параметры["ПродалиСумма"] = ПродалиСумма;
				ОбластьМакетаСтрока.Параметры["ОрганизацияОтчет"] = Результат.Организация;
				
				Если Дата(Результат.Дата) >= ОстаткиПо62счетуКорректныНаДату Тогда 
					//ПродалиСумма = Результат.ПродалиСумма;
					
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Организация", Результат.Организация);
					ПараметрыОтбора.Вставить("Субконто1", Результат.Контрагент);
					
					НайденныеСтроки = ТаблицаПоступленийПоКонтрагентам.НайтиСтроки(ПараметрыОтбора);
					Если НайденныеСтроки.Количество() = 0 Тогда 
						ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Добавить();
						ТекСтрТЗ.Организация = Результат.Организация;
						ТекСтрТЗ.Субконто1 = Результат.Контрагент;
						ТекСтрТЗ.СуммаОстатокКт = -ПродалиСумма;
						ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма;
					Иначе 
						Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
							Если ТекСтрТЗ.СуммаОстатокКт >=0 Тогда 
								Если ТекСтрТЗ.СуммаОстатокКт <= ПродалиСумма Тогда 
									ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма - ТекСтрТЗ.СуммаОстатокКт;
									ОбластьМакетаСтрока.Параметры["Расчет"] =  ТекСтрТЗ.СуммаОстатокКт;
								Иначе 
									ОбластьМакетаСтрока.Параметры["Долг"] = 0;
									ОбластьМакетаСтрока.Параметры["Расчет"] = ПродалиСумма;
								КонецЕсли;
							Иначе
								ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма;
							КонецЕсли;
							ТекСтрТЗ.СуммаОстатокКт = ТекСтрТЗ.СуммаОстатокКт - ПродалиСумма;
						КонецЦикла; 
					КонецЕсли;
					
					ТекСтрТЗ.Отгрузки = ТекСтрТЗ.Отгрузки + ПродалиСумма; 
					
					ОбластьМакетаСтрока.Параметры["Сальдо"] = ТекСтрТЗ.СуммаОстатокКт;
					
					фПоставщик = ?(ЗначениеЗаполнено(Результат.Поставщик),Результат.Поставщик,КонтрагентАБЗИсток);
					ПараметрыОтбора = Новый Структура;
					ПараметрыОтбора.Вставить("Организация", Результат.Организация);
					ПараметрыОтбора.Вставить("Поставщик", фПоставщик);
					
					КупилиСумма = Цена*Результат.КупилиКоличество;
					
					НайденныеСтроки = ТаблицаПоступленийПоПоставщикам.НайтиСтроки(ПараметрыОтбора);
					Если НайденныеСтроки.Количество() = 0 Тогда 
						ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Добавить();
						ТекСтрТЗ.Организация = Результат.Организация;
						ТекСтрТЗ.Поставщик = фПоставщик;
						ТекСтрТЗ.Сумма = - КупилиСумма;
						Попытка
							ОбластьМакетаСтрока.Параметры["КупилиДолг"] = КупилиСумма;
						Исключение
						КонецПопытки;
					Иначе 
						Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
							Попытка
								Если ТекСтрТЗ.Сумма >=0 Тогда 
									Если ТекСтрТЗ.Сумма <= КупилиСумма Тогда 
										ОбластьМакетаСтрока.Параметры["КупилиДолг"] = КупилиСумма - ТекСтрТЗ.Сумма;
										ОбластьМакетаСтрока.Параметры["КупилиРасчет"] =  ТекСтрТЗ.Сумма;
									Иначе 
										ОбластьМакетаСтрока.Параметры["КупилиДолг"] = 0;
										ОбластьМакетаСтрока.Параметры["КупилиРасчет"] = КупилиСумма;
									КонецЕсли;
								Иначе
									ОбластьМакетаСтрока.Параметры["КупилиДолг"] = КупилиСумма;
								КонецЕсли;
							Исключение
							КонецПопытки;
							ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - КупилиСумма;
						КонецЦикла;
					КонецЕсли;
					
					Попытка
						ОбластьМакетаСтрока.Параметры["КупилиСальдо"] = ТекСтрТЗ.Сумма;
					Исключение
					КонецПопытки;
					
					Если фПоставщик = КонтрагентАБЗИсток Тогда 
						Попытка
							ОбластьМакетаСтрока.Параметры["КупилиСальдо"] = 0;
							ОбластьМакетаСтрока.Параметры["КупилиДолг"] = 0;
							ОбластьМакетаСтрока.Параметры["КупилиРасчет"] = 0;
						Исключение
						КонецПопытки;
					КонецЕсли;
					
					ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентамДляДебиторовИКредиторов.Добавить();
					ТекСтрТЗ.Организация = Результат.Организация;
					ТекСтрТЗ.Субконто1 = Результат.Контрагент;
					ТекСтрТЗ.Отгрузки = ПродалиСумма;
					
					Премия = Результат.Премия;
					Если Премия > 0 Тогда 
						ПараметрыОтбора = Новый Структура;
						ПараметрыОтбора.Вставить("Организация", Результат.Организация);
						ПараметрыОтбора.Вставить("Контрагент", Результат.Контрагент);
						
						НайденныеСтроки = ТаблицаВыдачиПремий.НайтиСтроки(ПараметрыОтбора);
						Если НайденныеСтроки.Количество() = 0 Тогда 
							ТекСтрТЗ = ТаблицаВыдачиПремий.Добавить();
							ТекСтрТЗ.Организация = Результат.Организация;
							ТекСтрТЗ.Контрагент = Результат.Контрагент;
							ТекСтрТЗ.Сумма = -Премия;
							Попытка
								ОбластьМакетаСтрока.Параметры["ПремияДолг"] = Премия;
							Исключение
							КонецПопытки;
						Иначе 
							Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
								Попытка 	
									Если ТекСтрТЗ.Сумма >=0 Тогда
										Если ТекСтрТЗ.Сумма <= Премия Тогда 
											ОбластьМакетаСтрока.Параметры["ПремияДолг"] = Премия - ТекСтрТЗ.Сумма;
											ОбластьМакетаСтрока.Параметры["ПремияРасчет"] =  ТекСтрТЗ.Сумма;
										Иначе 
											ОбластьМакетаСтрока.Параметры["ПремияДолг"] = 0;
											ОбластьМакетаСтрока.Параметры["ПремияРасчет"] = Премия;
										КонецЕсли;
									Иначе
										ОбластьМакетаСтрока.Параметры["ПремияДолг"] = Премия;
									КонецЕсли;
								Исключение
								КонецПопытки;
								ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - Премия;
							КонецЦикла;
						КонецЕсли;
						
						Попытка
							ОбластьМакетаСтрока.Параметры["ПремияСальдо"] = ТекСтрТЗ.Сумма;
						Исключение
						КонецПопытки;
					КонецЕсли;
					
					ОбщаяСуммаДоставки = Результат.ОбщаяСуммаДоставки;
					Если ОбщаяСуммаДоставки > 0 Тогда 
						Если результат.дата >= РасчетыПоДоставкеС Тогда 
							ПараметрыОтбора = Новый Структура;
							ПараметрыОтбора.Вставить("Организация", Результат.Организация);
							ПараметрыОтбора.Вставить("Контрагент", Результат.КонтрагентДоставка);
							
							НайденныеСтроки = ТаблицаОплатДоставок.НайтиСтроки(ПараметрыОтбора);
							Если НайденныеСтроки.Количество() = 0 Тогда 
								ТекСтрТЗ = ТаблицаОплатДоставок.Добавить();
								ТекСтрТЗ.Организация = Результат.Организация;
								ТекСтрТЗ.Контрагент = Результат.КонтрагентДоставка;
								ТекСтрТЗ.Сумма = -ОбщаяСуммаДоставки;
								Попытка
									ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = ОбщаяСуммаДоставки;
								Исключение
								КонецПопытки;
							Иначе 
								Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
									Попытка
										Если ТекСтрТЗ.Сумма >=0 Тогда 
											Если ТекСтрТЗ.Сумма <= ОбщаяСуммаДоставки Тогда 
												ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = ОбщаяСуммаДоставки - ТекСтрТЗ.Сумма;
												ОбластьМакетаСтрока.Параметры["ДоставкаРасчет"] =  ТекСтрТЗ.Сумма;
											Иначе 
												ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = 0;
												ОбластьМакетаСтрока.Параметры["ДоставкаРасчет"] = ОбщаяСуммаДоставки;
											КонецЕсли;
										Иначе
											ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = ОбщаяСуммаДоставки;
										КонецЕсли;
									Исключение
									КонецПопытки;
									ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - ОбщаяСуммаДоставки;
									
								КонецЦикла;
							КонецЕсли;
							
							Попытка
								ОбластьМакетаСтрока.Параметры["ДоставкаСальдо"] = ТекСтрТЗ.Сумма;
							Исключение
							КонецПопытки;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ВыводитьСтроку = Истина;
				
				Если ВыводитьТолькоДолжников И ОбластьМакетаСтрока.Параметры["Сальдо"] >= 0 Тогда 
					ВыводитьСтроку = Ложь
				КонецЕсли;
				
						Если ВыводитьТолькоДолжниковПоставщики Тогда 
							Если ОбластьМакетаСтрока.Параметры["КупилиСальдо"] >= 0 Тогда 
								ВыводитьСтроку = Ложь;
							КонецЕсли;
						КонецЕсли;
				
				Если ВыводитьТолькоДолгиПоПремиям И ОбластьМакетаСтрока.Параметры["ПремияСальдо"] >= 0 Тогда 
					ВыводитьСтроку = Ложь
				КонецЕсли;
				
				Если ВыводитьТолькоДолгиПоДоставкам И ОбластьМакетаСтрока.Параметры["ДоставкаСальдо"] >= 0 Тогда
					ВыводитьСтроку = Ложь
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда 
					Если  Результат.Номенклатура.ТипНоменклатуры <> ТипНоменклатуры Тогда 
						ВыводитьСтроку = Ложь
					КонецЕсли;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Машина) И ВыводитьКаждуюОтгрузкуОтдельно Тогда 
					Если Машина <> Результат.Ссылка.ТранспортноеСредство Тогда 
						ВыводитьСтроку = Ложь;
					КонецЕсли;
				КонецЕсли;
				
				Если ВыводитьТолькоСДоcтавкой И Результат.КоличествоДоставка = 0 Тогда 
					ВыводитьСтроку = Ложь;
				КонецЕсли;	
				
				Если ВыбПоставщик.Количество() > 0 Тогда 
					Если  ВыбПоставщик.НайтиПоЗначению(Результат.Поставщик) = Неопределено Тогда 
						Если НЕ ЗначениеЗаполнено(Результат.Поставщик) И ВФильтреПоПоставщикамЕстьАБЗИсток Тогда 
						Иначе 
							ВыводитьСтроку = Ложь
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если ВыводитьСтроку Тогда 
					ТабДокумент.Вывести(ОбластьМакетаСтрока);
				КонецЕсли;
			Иначе
				Если (Не ВыводитьТолькоДолжников)И(НЕ ВыводитьТолькоДолгиПоПремиям)И(НЕ ВыводитьТолькоДолгиПоДоставкам)И(НЕ ВыводитьТолькоДолжниковПоставщики) Тогда
					Если Не ФормаДляПокупателя тогда
						ОбластьМакетаИтог.Параметры["ИтПростойСумма"] = ИтПростойСумма;
						ОбластьМакетаИтог.Параметры["ИтПремия"] = ИтПремия;
						ОбластьМакетаИтог.Параметры["ИтКупилиКоличество"] = ИтКупилиКоличество;
						ОбластьМакетаИтог.Параметры["ИтКупилиСумма"] = ИтКупилиСумма;
						ОбластьМакетаИтог.Параметры["ИтПрибыль"] = ИтПрибыль;
						Если Не ЭтоТДИсток И СокращеннаяФорма Тогда 
							ТабДокумент.Область("C9:C11").Видимость = Ложь;
							ТабДокумент.Область("C15:C18").Видимость = Ложь;
							ТабДокумент.Область("C23:C23").Видимость = Ложь;
							ТабДокумент.Область("C26:C27").Видимость = Ложь;
						КонецЕсли;
						Если ЭтоТДИсток И СокращеннаяФорма Тогда 
							ТабДокумент.Область("C13:C13").Видимость = Ложь;
						КонецЕсли;
					КонецЕсли;
					Если ЭтоТДИсток Тогда 
						ОбластьМакетаИтог.Параметры["ИтПродалиДоставка"] = ИтПродалиДоставка;
					Иначе 
						Если ВыбПоставщик.Количество() > 0 Тогда 
							ОбластьМакетаИтог.Параметры["ИтКупилиДолг"] = ИтКупилиДолг;	
						КонецЕсли;
						//ОбластьМакетаИтог.Параметры["ИтКупилиСальдо"] = ИтКупилиСальдо;
					КонецЕсли;
					ОбластьМакетаИтог.Параметры["ИтКоличествоДоставка"] = ИтКоличествоДоставка;
					ОбластьМакетаИтог.Параметры["ИтОбщаяСуммаДоставки"] = ИтОбщаяСуммаДоставки;
					ОбластьМакетаИтог.Параметры["ИтПродалиКоличество"] = ИтПродалиКоличество;
					ОбластьМакетаИтог.Параметры["ИтПродалиСумма"] = ИтПродалиСумма;
				КонецЕсли;
				ТабДокумент.Вывести(ОбластьМакетаИтог);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//	ТабДокумент.ФиксацияСверху = ТабДокумент.Области.Шапка.Низ;
	Если ВыводитьОбщийОтчет Тогда 
		ТабДокумент.ТолькоПросмотр = Истина;	
		ТабДокумент.Показать("Общий отчет");
		ТабДокумент.ФиксацияСверху = ТабДокумент.Области.Шапка.Низ;
		Если ФиксацияСлева > 0 Тогда 
			ТабДокумент.ФиксацияСлева = ФиксацияСлева;    
		КонецЕсли;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
		ТабДокумент.ОтображатьСетку = Ложь;
	КонецЕсли;
	
	Если ВыводитьДолжниковИКредиторов Тогда 
		ТаблицаПоступленийПоКонтрагентамДляДебиторовИКредиторов.Свернуть("Организация,Субконто1","Отгрузки");
		
		ТаблицаПоступленийПоКонтрагентамДебиторы = ТаблицаПоступленийПоКонтрагентам.СкопироватьКолонки();
		ТаблицаПоступленийПоКонтрагентамДебиторы.Колонки.Добавить("Отгрузки1", Новый ОписаниеТипов("Число"));
		ТаблицаПоступленийПоКонтрагентамДебиторы.Колонки.Добавить("Поступление", Новый ОписаниеТипов("Число"));
		
		ТаблицаПоступленийПоКонтрагентамКредиторы = ТаблицаПоступленийПоКонтрагентам.СкопироватьКолонки();
		ТаблицаПоступленийПоКонтрагентамКредиторы.Колонки.Добавить("Отгрузки1", Новый ОписаниеТипов("Число"));
		ТаблицаПоступленийПоКонтрагентамКредиторы.Колонки.Добавить("Поступление", Новый ОписаниеТипов("Число"));
		
		Для Каждого СтрТаблицаПоступленийПоКонтрагентам Из ТаблицаПоступленийПоКонтрагентам Цикл 
			ЕстьЗапись = Ложь;
			Если СтрТаблицаПоступленийПоКонтрагентам.СуммаОстатокКТ > 0 Тогда
				НовСтр = ТаблицаПоступленийПоКонтрагентамКредиторы.Добавить();
				НовСтр.Организация = СтрТаблицаПоступленийПоКонтрагентам.Организация;
				НовСтр.Субконто1 = СтрТаблицаПоступленийПоКонтрагентам.Субконто1;
				НовСтр.НачальныйОстаток = СтрТаблицаПоступленийПоКонтрагентам.НачальныйОстаток;
				НовСтр.Отгрузки1 = СтрТаблицаПоступленийПоКонтрагентам.Отгрузки;
				НовСтр.СуммаОстатокКТ = СтрТаблицаПоступленийПоКонтрагентам.СуммаОстатокКТ;
				ЕстьЗапись = Истина;
			ИначеЕсли СтрТаблицаПоступленийПоКонтрагентам.СуммаОстатокКТ < 0 Тогда
				НовСтр = ТаблицаПоступленийПоКонтрагентамДебиторы.Добавить();
				НовСтр.Организация = СтрТаблицаПоступленийПоКонтрагентам.Организация;
				НовСтр.Субконто1 = СтрТаблицаПоступленийПоКонтрагентам.Субконто1;
				НовСтр.НачальныйОстаток = СтрТаблицаПоступленийПоКонтрагентам.НачальныйОстаток;
				НовСтр.Отгрузки1 = СтрТаблицаПоступленийПоКонтрагентам.Отгрузки;
				НовСтр.СуммаОстатокКТ = СтрТаблицаПоступленийПоКонтрагентам.СуммаОстатокКТ;
				
				ЕстьЗапись = Истина;
			КонецЕсли;
			
			Если ЕстьЗапись Тогда 
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Организация", СтрТаблицаПоступленийПоКонтрагентам.Организация);
				ПараметрыОтбора.Вставить("Субконто1", СтрТаблицаПоступленийПоКонтрагентам.Субконто1);
				
				НайденныеСтроки = ТаблицаПоступленийПоКонтрагентамДляДебиторовИКредиторов.НайтиСтроки(ПараметрыОтбора);
				Если НайденныеСтроки.Количество() = 0 Тогда 
					НовСтр.Отгрузки = 0;
				Иначе 
					Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
						НовСтр.Отгрузки = ТекСтрТЗ.Отгрузки;
					КонецЦикла; 
				КонецЕсли;
				ПараметрыОтбора = Новый Структура;
				ПараметрыОтбора.Вставить("Организация", СтрТаблицаПоступленийПоКонтрагентам.Организация);
				ПараметрыОтбора.Вставить("Субконто1", СтрТаблицаПоступленийПоКонтрагентам.Субконто1);
				
				НайденныеСтроки = ТаблицаПоступленийДСПоКонтрагентам.НайтиСтроки(ПараметрыОтбора);
				Если НайденныеСтроки.Количество() = 0 Тогда 
					НовСтр.Поступление = 0;
				Иначе 
					Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
						НовСтр.Поступление = ТекСтрТЗ.Сумма;
					КонецЦикла; 
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ТаблицаПоступленийПоКонтрагентамДебиторы.Сортировать("Субконто1");
		ТаблицаПоступленийПоКонтрагентамКредиторы.Сортировать("Субконто1");
		ТабДокумент2 = Новый ТабличныйДокумент;
		Макет = ПолучитьМакет("ДолжникиИКредиторы");
		
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогОбщий        = Макет.ПолучитьОбласть("ИтогОбщий");
		ОбластьМакетаИтог             = Макет.ПолучитьОбласть("Итог");
		
		ОбластьМакетаШапка.Параметры.КонДата = Формат(КонДата,"ДФ=dd.MM.yyyy" );
		ОбластьМакетаШапка.Параметры.НачДата = Формат(НачДата,"ДФ=dd.MM.yyyy" );
		ОбластьМакетаШапка.Параметры.ОстаткиПо62счетуКорректныНаДату = Формат(ОстаткиПо62счетуКорректныНаДату,"ДФ=dd.MM.yyyy" );
		
		//ОбластьМакетаШапка.Параметры.Контрагент = Контрагент;
		
		ТабДокумент2.Вывести(ОбластьМакетаШапка);
		
		ОбластьМакетаИтогОбщий.Параметры.НачальныйОстаток = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("НачальныйОстаток") + ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("НачальныйОстаток");
		ОбластьМакетаИтогОбщий.Параметры.Отгрузки = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("Отгрузки")+ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("Отгрузки");
		ОбластьМакетаИтогОбщий.Параметры.Отгрузки1 = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("Отгрузки1")+ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("Отгрузки1");
		ОбластьМакетаИтогОбщий.Параметры.СуммаОстатокКТ = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("СуммаОстатокКТ")+ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("СуммаОстатокКТ");
		ОбластьМакетаИтогОбщий.Параметры.Поступление = ТаблицаПоступленийДСПоКонтрагентам.Итог("Сумма");
		
		ТабДокумент2.НачатьАвтогруппировкуСтрок();
		
		ТабДокумент2.Вывести(ОбластьМакетаИтогОбщий,1);
		//выводим дебиторов
		ОбластьМакетаИтог.Параметры.ТипПокупателя = "Дебиторы";
		ОбластьМакетаИтог.Параметры.НачальныйОстаток = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("НачальныйОстаток");
		ОбластьМакетаИтог.Параметры.Отгрузки 		 = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("Отгрузки");
		ОбластьМакетаИтог.Параметры.Отгрузки1 		 = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("Отгрузки1");
		ОбластьМакетаИтог.Параметры.СуммаОстатокКТ   = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("СуммаОстатокКТ");
		ОбластьМакетаИтог.Параметры.Поступление   = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("Поступление");
		
		ТабДокумент2.Вывести(ОбластьМакетаИтог,2);
		
		Для Каждого СтрТаблицаПоступленийПоКонтрагентамДебиторы Из ТаблицаПоступленийПоКонтрагентамДебиторы Цикл 
			ОбластьМакетаСтрока.Параметры.Заполнить(СтрТаблицаПоступленийПоКонтрагентамДебиторы);
			ТабДокумент2.Вывести(ОбластьМакетаСтрока,3);
		КонецЦикла;
		
		//выводим кредиторов
		ОбластьМакетаИтог.Параметры.ТипПокупателя = "Кредиторы";
		ОбластьМакетаИтог.Параметры.НачальныйОстаток = ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("НачальныйОстаток");
		ОбластьМакетаИтог.Параметры.Отгрузки 		 = ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("Отгрузки");
		ОбластьМакетаИтог.Параметры.Отгрузки1 		 = ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("Отгрузки1");
		ОбластьМакетаИтог.Параметры.СуммаОстатокКТ   = ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("СуммаОстатокКТ");
		ОбластьМакетаИтог.Параметры.Поступление   = ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("Поступление");
		
		ТабДокумент2.Вывести(ОбластьМакетаИтог,2);
		
		Для Каждого СтрТаблицаПоступленийПоКонтрагентамКредиторы Из ТаблицаПоступленийПоКонтрагентамКредиторы Цикл 
			ОбластьМакетаСтрока.Параметры.Заполнить(СтрТаблицаПоступленийПоКонтрагентамКредиторы);
			ТабДокумент2.Вывести(ОбластьМакетаСтрока,3);
		КонецЦикла;
		ТабДокумент2.ЗакончитьАвтогруппировкуСтрок();
		
		ТабДокумент2.ПоказатьУровеньГруппировокСтрок(1);
		ТабДокумент2.ТолькоПросмотр = Истина;	
		ТабДокумент2.Показать("Дебиторы и кредиторы");
		ТабДокумент2.ФиксацияСверху = ТабДокумент2.Области.Шапка.Низ;
		ТабДокумент2.ОтображатьЗаголовки = Ложь;
		ТабДокумент2.ОтображатьСетку = Ложь;
	КонецЕсли;
	
	Если ВыводитьПремии Тогда 
		Если УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РазрешитьФормироватьПремииВОбщемОтчете") Тогда 
			Если Организации.Количество() > 1 Тогда 
				Предупреждение("Форма по премиям формируется только по одной организации!");
				Возврат;
			КонецЕсли;
			
			ТабДокумент3 = Новый ТабличныйДокумент;
			Макет = ПолучитьМакет("Премии");
			
			ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
			ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
			ОбластьМакетаИтогОбщий        = Макет.ПолучитьОбласть("ИтогОбщий");
			
			ОбластьМакетаШапка.Параметры.КонДата = Формат(КонДата,"ДФ=dd.MM.yyyy" );
			ОбластьМакетаШапка.Параметры.НачДата = Формат(НачДата,"ДФ=dd.MM.yyyy" );
			//ОбластьМакетаШапка.Параметры.Контрагент = Контрагент;
			//ОбластьМакетаШапка.Параметры.Организация = Организации;
			ОбластьМакетаШапка.Параметры.ИтПрибыль = ИтПрибыль;
			
			ТабДокумент3.Вывести(ОбластьМакетаШапка);
			
			ИтПроцент = 0;
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	СотрудникиОрганизаций.Ссылка,
			|	СотрудникиОрганизаций.ПремияПолучаемаяОтПрибыли,
			|	СотрудникиОрганизаций.Организация
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|ГДЕ
			|	СотрудникиОрганизаций.Организация В(&Организация)
			|	И СотрудникиОрганизаций.ПремияПолучаемаяОтПрибыли > 0";
			
			Запрос.УстановитьПараметр("Организация", Организации);
			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл 
				Сотрудник = Результат.Ссылка;
				Процент = Результат.ПремияПолучаемаяОтПрибыли;
				ОбластьМакетаСтрока.Параметры.Сотрудник = Сотрудник;
				ОбластьМакетаСтрока.Параметры.Организация = Результат.Организация;
				ОбластьМакетаСтрока.Параметры.Процент = Процент;
				ОбластьМакетаСтрока.Параметры.Премия = Окр(Процент*ИтПрибыль/100,0);
				
				ТабДокумент3.Вывести(ОбластьМакетаСтрока);
				ИтПроцент = ИтПроцент + Процент;
			КонецЦикла;
			
			ОбластьМакетаИтогОбщий.Параметры.ИтПроцент = ИтПроцент;
			ОбластьМакетаИтогОбщий.Параметры.ИтПремия = Окр(ИтПроцент*ИтПрибыль/100,0);
			ТабДокумент3.Вывести(ОбластьМакетаИтогОбщий);
			ТабДокумент3.ТолькоПросмотр = Истина;	
			ТабДокумент3.Показать("Премии");
			ТабДокумент3.ФиксацияСверху = ТабДокумент3.Области.Шапка.Низ;
			ТабДокумент3.ОтображатьЗаголовки = Ложь;
			ТабДокумент3.ОтображатьСетку = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыДолжникиКредиторы(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ВыводитьПремииПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры
