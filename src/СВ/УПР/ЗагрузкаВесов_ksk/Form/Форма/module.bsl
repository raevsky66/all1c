Перем ГлВесы;
функция НайтиДоговорКонтрагента(тОрг, тКонтр)
	ДогКонтр = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	ДоговорыКонтрагентов.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Владелец = &тКонтр
	               |	И ДоговорыКонтрагентов.Организация = &тОрг";
	
	Запрос.УстановитьПараметр("тОрг",тОрг);
	Запрос.УстановитьПараметр("тКонтр",тКонтр);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		ДогКонтр = Результат.Ссылка;
	КонецЦикла;
	
	Возврат ДогКонтр;
КонецФункции

Процедура ОбновитьРегистр()
// Сначала помещаем ТЗ во временную таблицу
ТЗ = Отгрузки.Выгрузить();

Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
Запрос.Текст = "ВЫБРАТЬ * ПОМЕСТИТЬ ТЗ ИЗ &ТЗ КАК ТЗ";
Запрос.УстановитьПараметр("ТЗ", ТЗ);
Запрос.Выполнить();

// Теперь ТЗ можно использовать в запросе:
Запрос.Текст = "ВЫБРАТЬ Разрешенные
               |	ТЗ.Номенклатура КАК Номенклатура,
               |	ТЗ.ТранспортноеСредство,
               |	ТЗ.Водитель,
               |	ТЗ.ВесПустой,
               |	ТЗ.ВесГруженный,
               |	ТЗ.ВремяВзвешиванияГруженного,
               |	ТЗ.Контрагент,
               |	ТЗ.ВесСВоздухом,
               |	ТЗ.Операция,
               |	ТЗ.НомерНакладной,
               |	ТЗ.Организация,
               |	ТЗ.Нетто,
               |	ТЗ.ВесСВоздухомНетто,
               |	ТЗ.ВходящийИсходящий,
			   |    ТЗ.Документ
               |ИЗ
               |	ТЗ КАК ТЗ";

РегистрВзвешиваний = РегистрыСведений.Взвешивания.СоздатьНаборЗаписей();			   
Выборка = Запрос.Выполнить().Выбрать();
Пока Выборка.Следующий() Цикл 
	Если НЕ ЗначениеЗаполнено(Выборка.Документ) Тогда 
		НовЗапись = РегистрВзвешиваний.Добавить();
		ЗаполнитьЗначенияСвойств(НовЗапись,Выборка);
	КонецЕсли;
КонецЦикла;
РегистрВзвешиваний.Записать();

	
КонецПроцедуры

Процедура ОчиститьЗначения()
   ЭлементыФормы.МАССА.Значение = "";
   ЭлементыФормы.СТАБИЛ.Значение = "";
   ЭлементыФормы.НОЛЬ.Значение = "";
   ЭлементыФормы.НЕТТО.Значение = "";
   ЭлементыФормы.БРУТТО.Значение = "";
   ЭлементыФормы.ЧАСТОТА.Значение = "";
КонецПроцедуры

Функция КаталогИБ() Экспорт
  Стр=Сред(СтрокаСоединенияИнформационнойБазы(),7);
  размер = СтрДлина(Стр);
  Возврат Лев(Стр,размер-2);
КонецФункции

Процедура ОбновитьВес()
   ЭлементыФормы.МАССА.Значение = глВесы.Масса();
   если глВесы.Стабил() = 1 тогда ЭлементыФормы.СТАБИЛ.Значение = ">СТАБ<"; иначе ЭлементыФормы.СТАБИЛ.Значение = ""; конецесли;
   если глВесы.Ноль() = 1 тогда ЭлементыФормы.НОЛЬ.Значение = ">0<"; иначе ЭлементыФормы.НОЛЬ.Значение = ""; конецесли;
   если глВесы.Нетто() = 1 тогда ЭлементыФормы.НЕТТО.Значение = "НЕТТО"; иначе ЭлементыФормы.НЕТТО.Значение = ""; конецесли;
   если глВесы.Брутто() = 1 тогда ЭлементыФормы.БРУТТО.Значение = "БРУТТО"; иначе ЭлементыФормы.БРУТТО.Значение = ""; конецесли;
   если глВесы.Частота() = 0 тогда ЭлементыФормы.МАССА.Значение = "НЕТ СВЯЗИ!!"; конецесли;
   ЭлементыФормы.ЧАСТОТА.Значение = глВесы.Частота();
КонецПроцедуры

Процедура ОсновныеДействияФормыПечать(Кнопка)
	_ТекСтрока = ЭлементыФормы.Отгрузки.ТекущаяСтрока;

	Если _ТекСтрока = Неопределено Тогда 
		Предупреждение("Выберите строчку в табличной части!");
	КонецЕсли;

	_Документ = _ТекСтрока.Документ;
	Если НЕ ЗначениеЗаполнено(_Документ) Тогда 
		Предупреждение("Выберите строку с уже заведенным документом!");
		Возврат;
	КонецЕсли;
	
	//ВремяПогрузки = Формат(ТекущаяДата(),"ДЛФ=T");
	//ВвестиЗначение(ВремяПогрузки,"Введите время погрузки");
	
 	ГСЧ = Новый ГенераторСлучайныхЧисел;
 	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(158, 161);
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_ТОРГ12";
	Если _Документ.Организация.Наименование = "ООО ""АБЗ-СВ""" И НЕ _Документ.Контрагент.УСН Тогда 
		Макет = ПолучитьМакет("МакетСВ");
	Иначе 
		Макет = ПолучитьМакет("Макет");
	КонецЕсли;
	
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакетаРазделитель      = Макет.ПолучитьОбласть("Разделялка");

	ОбластьМакетаШапка.Параметры.Номер = _Документ.ВнутреннийНомерНакладной;
	ОбластьМакетаШапка.Параметры.Дата = Формат(_Документ.Дата, "ДФ=dd.MM.yyyy");
	ОбластьМакетаШапка.Параметры.Организация = _Документ.Организация;
	
	//ОбластьМакетаШапка.Параметры.Организация = ?(_Документ.Контрагент.УСН И _Документ.Организация.Наименование = "ООО ""АБЗ-СВ""", Справочники.Организации.НайтиПоНаименованию("ИП Воскресенский"),_Документ.Организация);
	
	ОбластьМакетаШапка.Параметры.Контрагент = _Документ.Контрагент.НаименованиеПолное;
//	ОбластьМакетаШапка.Параметры.Температура = СлучайноеЧисло;
	ОбластьМакетаШапка.Параметры.ТекДата = ТекущаяДата();
	//ОбластьМакетаШапка.Параметры.Объект = _Документ.ОбъектДоставки;
	ОбластьМакетаШапка.Параметры.Водитель = _Документ.Водитель;
	ОбластьМакетаШапка.Параметры.ГосРегЗнак = _Документ.ТранспортноеСредство;
	//ОбластьМакетаШапка.Параметры.ВремяПогрузки = Формат(ВремяПогрузки,"ДЛФ=T" );
	
	для сч = 1 по 3 Цикл 
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		Для Каждого Стр из _Документ.Товары Цикл 
			ОбластьМакетаСтрока.Параметры.Товар = стр.Номенклатура.НаименованиеПолное;
			ОбластьМакетаСтрока.Параметры.ВесПустой = _ТекСтрока.ВесПустой;
			ОбластьМакетаСтрока.Параметры.ВесГруженный = _ТекСтрока.ВесСВоздухом;
			ОбластьМакетаСтрока.Параметры.Нетто = _ТекСтрока.ВесСВоздухом - _ТекСтрока.ВесПустой;
			
			ТабДокумент.Вывести(ОбластьМакетаСтрока);
		КонецЦикла;
		ТабДокумент.Вывести(ОбластьМакетаПодвал);
		Если сч <> 3 Тогда 
			ТабДокумент.Вывести(ОбластьМакетаРазделитель);
		КонецЕсли;			
	КонецЦикла;
	
	ТабДокумент.Показать("Накладная");
	//ТабДокумент.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
КонецПроцедуры

Процедура ДобавитьМашинуНаВзвешивание(Кнопка)
	//_Водитель = "";
	////_ОбъектДоставки = "";
	//_Контрагент = "";
	_ТранспортноеСредство = "";
	
	Если ВвестиЗначение(_ТранспортноеСредство, "Введите номер машины",Тип("СправочникСсылка.ТранспортныеСредства")) Тогда
		Если ЗначениеЗаполнено(_ТранспортноеСредство) Тогда
					НовСтрока = Отгрузки.Добавить();
					НовСтрока.ТранспортноеСредство = _ТранспортноеСредство;
					
					Запрос = Новый Запрос;
					Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					               |	РеализацияТоваровУслуг.Ссылка.Водитель
					               |ИЗ
					               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
					               |ГДЕ
					               |	РеализацияТоваровУслуг.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляПоиска
					               |
					               |УПОРЯДОЧИТЬ ПО
					               |	РеализацияТоваровУслуг.Ссылка.Дата УБЫВ";
					
					Запрос.УстановитьПараметр("ТранспортноеСредствоДляПоиска",_ТранспортноеСредство);
					
					Результат = Запрос.Выполнить().Выбрать();
					Пока Результат.Следующий() Цикл 
						НовСтрока.Водитель = Результат.Водитель;
					КонецЦикла;
					//НовСтрока.Контрагент = _Контрагент;
					//НовСтрока.Водитель = _Водитель;
					//НовСтрока.Организация = Фирма;
		КонецЕсли; 
	КонецЕсли; 

КонецПроцедуры

Процедура Взвесить(Кнопка)
	
	Если Не ЗначениеЗаполнено(ОперационныйДень) Тогда
		Предупреждение("Не указан операционный день! Взвешивание невозможно!");
		Возврат;
	КонецЕсли;
	
	НовСтрока = ЭлементыФормы.Отгрузки.ТекущаяСтрока;
	
	Если НовСтрока = Неопределено Тогда 
		Предупреждение("Выберите строчку в табличной части!");
		Возврат;
	КонецЕсли;

	Если  (((ЭлементыФормы.Отгрузки.ТекущаяСтрока.ВесПустой = 0)И(ПолеВыбора1 = 1))ИЛИ((ЭлементыФормы.Отгрузки.ТекущаяСтрока.ВесГруженный = 0)И(ПолеВыбора1 = 2)))
		И(НовСтрока.ВходящийИсходящий = "")
		Тогда
		Если ПолеВыбора1 = Неопределено Тогда 
			Предупреждение("Выберите вид операции (входящий или исходящий)!");
			Возврат;
		КонецЕсли;
		
		Если ПолеВыбора1 = 1 Тогда 
			НовСтрока.ВесПустой = ЭлементыФормы.МАССА.Значение;
			НовСтрока.ВходящийИсходящий = "Исходящий";
		ИначеЕсли ПолеВыбора1 = 2 Тогда 
			НовСтрока.ВесГруженный = ЭлементыФормы.МАССА.Значение;	
			НовСтрока.ВходящийИсходящий = "Входящий";
		КонецЕсли;
		ЭлементыФормы.ТекОп.Значение = НовСтрока.ВходящийИсходящий;
	Иначе
		Если  НовСтрока.Документ = Неопределено Тогда  
			_Водитель = "";
			_Контрагент = "";
			_Грузоотправитель = "";
			
			Если НовСтрока.ВходящийИсходящий = "Исходящий" Тогда  //сообщить("Заносим отгрузку");
               	Если ВвестиЗначение(_Контрагент, "Введите контрагента",Тип("СправочникСсылка.Контрагенты")) Тогда
					Если ЗначениеЗаполнено(_Контрагент) Тогда
						_Водитель = НовСтрока.Водитель;
						ВвестиЗначение(_Водитель,"Введите водителя",Тип("СправочникСсылка.Водители"));
						НовСтрока.Контрагент = _Контрагент;
						НовСтрока.Водитель = _Водитель;
					КонецЕсли;
				Иначе 
					Предупреждение("Не выбран Контрагент! Взвешивание и формирование документа не произведено! Перевзвесьте!");
					Возврат;
				КонецЕсли;
				
				НовСтрока.Организация = Фирма;
				НовСтрока.Организация = ?(НовСтрока.Контрагент.УСН И НовСтрока.Организация.Наименование = "ООО ""АБЗ-СВ""", Справочники.Организации.НайтиПоНаименованию("ИП Воскресенский"),НовСтрока.Организация);
				НовСтрока.ВесГруженный = ЭлементыФормы.МАССА.Значение;	
				НовСтрока.ВесСВоздухом = ЭлементыФормы.МАССА.Значение;	
				НовСтрока.ВремяВзвешиванияГруженного = ТекущаяДата();
				НовСтрока.НомерНакладной = НомерНакладной;
				НовСтрока.Номенклатура = НоменклатураОтгрузки;

				Док = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
				
				Если КонецДня(ОперационныйДень) <> КонецДня(ТекущаяДата()) Тогда 
					Док.Дата = КонецДня(ОперационныйДень);	
				Иначе 
					Док.Дата = ТекущаяДата();
				КонецЕсли;
				                                  
				Док.Организация = НовСтрока.Организация;
				Док.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
				Док.СуммаВключаетНДС = Истина;
				Док.УчитыватьНДС = Истина;
				Док.Склад = Склад;
				Док.Контрагент = НовСтрока.Контрагент;
				Док.ДоговорКонтрагента = НайтиДоговорКонтрагента(Док.Организация,Док.Контрагент);
				Док.ВалютаДокумента = Док.ДоговорКонтрагента.ВалютаВзаиморасчетов;
				Док.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
				Док.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
				Док.ТранспортноеСредство = НовСтрока.ТранспортноеСредство;
				Док.Сумма = ПолучитьСуммуДоставки(Док.ТранспортноеСредство);
				
				//Док.ОбъектДоставки = НовСтрока.ОбъектДоставки;
				Док.Водитель = НовСтрока.Водитель;
				Док.ВнутреннийНомерНакладной = НомерНакладной;
				
				СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Док.Организация , Док.Контрагент, Док.ДоговорКонтрагента);
				
				СтрДок = Док.ЭтотОбъект.Товары.Добавить();
				СтрДок.Номенклатура = НовСтрока.Номенклатура;
				СтрДок.КоличествоФакт = НовСтрока.ВесГруженный - НовСтрока.ВесПустой;
				СтрДок.ВесПустой = НовСтрока.ВесПустой;
				СтрДок.ВесГруженный = НовСтрока.ВесГруженный;
				СтрДок.Количество = НовСтрока.ВесСВоздухом - НовСтрока.ВесПустой;
				СтрДок.ЕдиницаИзмерения = НоменклатураОтгрузки.БазоваяЕдиницаИзмерения;
				СтрДок.Цена = Цена;
				СтрДок.ВремяВзвешиванияГруженного = НовСтрока.ВремяВзвешиванияГруженного;
				ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрДок, Док);
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрДок, Док);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрДок, Док);
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧастиФакт(СтрДок, Док);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧастиФакт(СтрДок, Док);
				Док.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрДок, "Товары", Истина);
				Док.ЗаполнитьСчетаУчетаРасчетов(СчетаУчета);		
				Док.Комментарий = "Занесено автоматически из обработки.";
				
				Док.Записать();
				НомерНакладной = НомерНакладной+1;
				НовСтрока.ВесСВоздухомНетто = НовСтрока.ВесСВоздухом - НовСтрока.ВесПустой;
				НовСтрока.Документ = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
				НовСтрока.Расчет = РассчитатьСальдоПоКонтрагенту(Док);
			ИначеЕсли НовСтрока.ВходящийИсходящий = "Входящий" Тогда 
				Если ВвестиЗначение(_Контрагент, "Введите контрагента",Тип("СправочникСсылка.Контрагенты")) Тогда
					ВвестиЗначение(_Грузоотправитель, "Введите грузоотправителя",Тип("СправочникСсылка.Контрагенты"));
					НовСтрока.Грузоотправитель = _Грузоотправитель;
					Если ЗначениеЗаполнено(_Контрагент) Тогда
						_Водитель = НовСтрока.Водитель;
						ВвестиЗначение(_Водитель,"Введите водителя",Тип("СправочникСсылка.Водители"));
						НовСтрока.Контрагент = _Контрагент;
						НовСтрока.Водитель = _Водитель;
					КонецЕсли;
				Иначе 
					Предупреждение("Не выбран Контрагент! Взвешивание и формирование документа не произведено! Перевзвесьте!");
					Возврат;
				КонецЕсли;
				
				НовСтрока.Организация = Фирма;
				//сообщить("Заносим поступление");
				НовСтрока.ВесПустой = ЭлементыФормы.МАССА.Значение;	
				НовСтрока.ВремяВзвешиванияГруженного = ТекущаяДата();
				НовСтрока.Номенклатура = НоменклатураОтгрузки;
				//НовСтрока.НомерНакладной = НомерНакладной;

				Док = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
				
				Если КонецДня(ОперационныйДень) <> КонецДня(ТекущаяДата()) Тогда 
					Док.Дата = КонецДня(ОперационныйДень);	
				Иначе 
					Док.Дата = ТекущаяДата();
				КонецЕсли;
				
				Док.Организация = НовСтрока.Организация;
				Док.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
				Док.СуммаВключаетНДС = Истина;
				Док.УчитыватьНДС = Истина;
				Док.Склад = Склад;
				Док.Контрагент = НовСтрока.Контрагент;
				Док.Грузоотправитель = НовСтрока.Грузоотправитель;
				Док.ДоговорКонтрагента = НайтиДоговорКонтрагента(Док.Организация, Док.Контрагент);
				Док.ВалютаДокумента = Док.ДоговорКонтрагента.ВалютаВзаиморасчетов;
				Док.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
				Док.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
				Док.ТранспортноеСредство = НовСтрока.ТранспортноеСредство;
				Док.Водитель = НовСтрока.Водитель;
				Док.ЗагруженоИзОбработкиВесов = Истина;
				
				СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Док.Организация , Док.Контрагент, Док.ДоговорКонтрагента);
				
				СтрДок = Док.ЭтотОбъект.Товары.Добавить();
				СтрДок.Номенклатура = НовСтрока.Номенклатура;
				СтрДок.КоличествоФакт = НовСтрока.ВесГруженный - НовСтрока.ВесПустой;
				
				Если (СокрЛП(СтрДок.Номенклатура.Наименование) = "Печное топливо")ИЛИ(СокрЛП(СтрДок.Номенклатура.Наименование) = "Мазут") Тогда 
					СтрДок.КоличествоФакт = 1150*СтрДок.КоличествоФакт;
				КонецЕсли;
				
				Если Найти(СокрЛП(СтрДок.Номенклатура.Наименование),"Дизельное топливо") > 0 Тогда 					
					Если (СтрДок.КоличествоФакт > 3.999)И(СтрДок.КоличествоФакт < 4.5) Тогда 
						СтрДок.КоличествоФакт = 5000;
					Иначе 
						СтрДок.КоличествоФакт = 2500;
					КонецЕсли;
				КонецЕсли;
				
				СтрДок.ВесГруженный = НовСтрока.ВесГруженный; 
				СтрДок.ВесПустой = НовСтрока.ВесПустой;
				СтрДок.ВремяВзвешиванияГруженного = НовСтрока.ВремяВзвешиванияГруженного;
				//СтрДок.КоличествоПоДокументу = НовСтрока.ВесСВоздухом;
				СтрДок.ЕдиницаИзмерения = НоменклатураОтгрузки.БазоваяЕдиницаИзмерения;
				СтрДок.Цена = Цена;
				ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрДок, Док);
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрДок, Док);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрДок, Док);
				ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧастиФакт(СтрДок, Док);
				ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧастиФакт(СтрДок, Док);
				Док.ЗаполнитьСчетаУчетаВТабЧасти(Док.Товары        , "Товары"        , Истина, Истина);
				Док.ЗаполнитьСчетаУчетаРасчетов(СчетаУчета);	
				Док.Комментарий = "Занесено автоматически из обработки.";
				
				Док.Записать();
				НовСтрока.Документ = Документы.ПоступлениеТоваровУслуг.ПустаяСсылка();
				НовСтрока.ВесСВоздухомНетто = НовСтрока.ВесГруженный - НовСтрока.ВесПустой;
				НовСтрока.ВесСВоздухом = НовСтрока.ВесГруженный;
			КонецЕсли;
			НовСтрока.Нетто = НовСтрока.ВесГруженный - НовСтрока.ВесПустой;   

			НовСтрока.Документ = Док.Ссылка;
			
			ОбновитьИтогиОтгрузкиНажатие("");
		Иначе 
			Предупреждение("Уже заведен документ! Взвешивание невозможно!");
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьРегистр();
	
КонецПроцедуры

Процедура ПриОжидании()
	Для Каждого стр из Отгрузки Цикл 
		Если ЗначениеЗаполнено(стр.ВремяВзвешиванияГруженного) Тогда 
			Если ТекущаяДата() - стр.ВремяВзвешиванияГруженного > ОжидатьПравкиПередПечатью Тогда 
				стр.РазрешенаПечать = Истина;
			КонецЕсли;
		КонецЕсли;
		Если стр.Документ <> Неопределено Тогда 
			Для Каждого Стр2 из стр.Документ.Товары Цикл 
				стр.Нетто = стр.ВесГруженный - стр.ВесПустой;
				стр.Номенклатура = стр2.Номенклатура;
				Если стр.ВходящийИсходящий = "Исходящий" Тогда 
					стр.ВесСВоздухом = стр.ВесПустой+стр2.Количество;
					стр.ВесСВоздухомНетто = Макс(стр.ВесСВоздухом - стр.ВесПустой,0);
				Иначе 
					стр.ВесСВоздухом = стр2.ВесГруженный;
					стр.ВесСВоздухомНетто = стр2.КоличествоФакт;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ЗначениеЗаполнено(стр.Документ) Тогда 
			Если ТипЗнч(Стр.Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда 
				Стр.Контрагент = стр.Документ.Контрагент;
				Стр.Грузоотправитель = стр.Грузоотправитель;
			Иначе 
				Стр.Контрагент = стр.Документ.Контрагент;
			КонецЕсли;
			Стр.ТранспортноеСредство = стр.Документ.ТранспортноеСредство;
		КонецЕсли;
	КонецЦикла;
	Отгрузки.Сортировать("РазрешенаПечать Возр, ВремяВзвешиванияГруженного Убыв, ТранспортноеСредство Возр");
	ЭлементыФормы.Отгрузки.ОбновитьСтроки();
	
КонецПроцедуры

Процедура ПриОткрытии()
	ЭлементыФормы.ПолеВыбора1.СписокВыбора.Добавить(1, "Исходящий");
	ЭлементыФормы.ПолеВыбора1.СписокВыбора.Добавить(2, "Входящий");
	ЭлементыФормы.ПолеВыбора1.Значение = 1;
	НомерНакладной = 0;	
	//ПолеВыбора1ПриИзменении(ЭтотОбъект);
	
	Попытка
		глВесы = 0;
		ОчиститьЗначения();
		// Закомментировать и переписать AddInDCOMVesy.dll в каталог 1C 8.0
		ЗагрузитьВнешнююКомпоненту(КаталогИБ()+"\AddInDCOMVesy.dll");
		// Раскомментировать
		//ЗагрузитьВнешнююКомпоненту("AddInDCOMVesy.dll");
		глВесы = Новый("AddIn.AddInDCOMVesy");
		КомпонентаВключена = ?(глВесы.Включен <> 0, Истина, Ложь);	
		Если КомпонентаВключена Тогда
			Сервер = "";
			глВесы.ОткрытьВесы(Сервер);		
			ОбновитьВес();
		Иначе
			глВесы = 0;
		КонецЕсли;
	Исключение
		ОписаниеРезультата = "не удалось загрузить внешнюю компоненту AddInDCOMVesy.dll!!!";
		Сообщить(ОписаниеРезультата);
	КонецПопытки;
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = Отгрузки.ВыгрузитьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ Разрешенные
		|	Взвешивания.ТранспортноеСредство,
		|	Взвешивания.Водитель,
		|	Взвешивания.ВесПустой,
		|	Взвешивания.ВесГруженный,
		|	Взвешивания.ВремяВзвешиванияГруженного,
		|	Взвешивания.Контрагент,
		|	Взвешивания.ВесСВоздухом,
		|	Взвешивания.Операция,
		|	Взвешивания.НомерНакладной,
		|	Взвешивания.Организация,
		|	Взвешивания.Нетто,
		|	Взвешивания.ВесСВоздухомНетто,
		|	Взвешивания.ВходящийИсходящий,
		|	Взвешивания.Номенклатура
		|ИЗ
		|	РегистрСведений.Взвешивания КАК Взвешивания";

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СтрТЗ = ТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(СтрТЗ, ВыборкаДетальныеЗаписи);
	КонецЦикла;
 	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Разрешенные
	               |	РеализацияТоваровУслуг.Ссылка КАК Документ,
	               |	РеализацияТоваровУслуг.Ссылка.ВнутреннийНомерНакладной КАК НомерНакладной,
	               |	РеализацияТоваровУслуг.ВесПустой,
	               |	РеализацияТоваровУслуг.ВесГруженный,
	               |	РеализацияТоваровУслуг.ВесПустой + РеализацияТоваровУслуг.Количество КАК ВесСВоздухом,
	               |	РеализацияТоваровУслуг.Ссылка.ТранспортноеСредство,
	               |	РеализацияТоваровУслуг.Ссылка.Водитель,
	               |	РеализацияТоваровУслуг.Ссылка.Контрагент,
	               |	РеализацияТоваровУслуг.ВремяВзвешиванияГруженного,
	               |	РеализацияТоваровУслуг.Ссылка.Организация,
	               |	РеализацияТоваровУслуг.Номенклатура
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Ссылка.ВнутреннийНомерНакладной > 0
	               |	И РеализацияТоваровУслуг.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И РеализацияТоваровУслуг.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерНакладной";
	
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		НомерНакладной = Макс(НомерНакладной, Результат.НомерНакладной);
		
		НовСтрока = Отгрузки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Результат);
		НовСтрока.Нетто = НовСтрока.ВесГруженный - НовСтрока.ВесПустой;
		НовСтрока.ВесСВоздухомНетто = НовСтрока.ВесСВоздухом - НовСтрока.ВесПустой;
		НовСтрока.ВходящийИсходящий = "Исходящий";
	КонецЦикла;
	НомерНакладной = НомерНакладной + 1;
	
	Для Каждого Стр из ТЗ Цикл 
		СтрОтгр = Отгрузки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрОтгр,Стр);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Разрешенные
	               |	ПоступлениеТоваровУслугТовары.Ссылка КАК Документ,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.ТранспортноеСредство,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Водитель,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Грузоотправитель,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Контрагент,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Организация,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.КоличествоФакт КАК КоличествоФакт,
	               |	ПоступлениеТоваровУслугТовары.ВесПустой,
	               |	ПоступлениеТоваровУслугТовары.ВесГруженный,
	               |	ПоступлениеТоваровУслугТовары.ВремяВзвешиванияГруженного
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И ПоступлениеТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |	И ПоступлениеТоваровУслугТовары.Ссылка.ЗагруженоИзОбработкиВесов = ИСТИНА";
	
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		НовСтрока = Отгрузки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Результат);
		НовСтрока.Нетто = НовСтрока.ВесГруженный - НовСтрока.ВесПустой;
		//НовСтрока. = Результат.Количество;
		НовСтрока.ВесСВоздухомНетто = Результат.КоличествоФакт;
		НовСтрока.ВходящийИсходящий = "Входящий";
	КонецЦикла;
	
	КоманднаяПанель1ПересчетКолонкиРасчет("");
	
	ОбновитьИтогиОтгрузкиНажатие("");
КонецПроцедуры

Процедура ВнешнееСобытие(Источник, Событие, Данные)
	Если (Источник = "AddInDCOMVesy") Тогда
		// Первый способ снятия событий
		//ОбновитьВес();
		// Вторрой способ снятия событий
		Если Событие = "UpdateMassa" Тогда
			ЭлементыФормы.МАССА.Значение = Окр(Данные/100,1,1);
			//ЭлементыФормы.МАССА.Значение = глВесы.Масса();
		ИначеЕсли Событие = "UpdateED" Тогда
			//ЭлементыФормы.МАССА.Значение = Данные;
		ИначеЕсли Событие = "UpdatefHIGHT" Тогда
			ЭлементыФормы.МАССА.Значение = Окр(Данные/100,1,1);
		ИначеЕсли Событие = "UpdatefLow" Тогда
			ЭлементыФормы.МАССА.Значение = Окр(Данные/100,1,1);
		ИначеЕсли Событие = "UpdatefSTABIL" Тогда
			ЭлементыФормы.СТАБИЛ.Значение = Данные;
		ИначеЕсли Событие = "UpdatefGROSS" Тогда
			ЭлементыФормы.БРУТТО.Значение = Данные;
		ИначеЕсли Событие = "UpdatefNETTO" Тогда
			ЭлементыФормы.НЕТТО.Значение = Данные;
		ИначеЕсли Событие = "UpdatefZERRO" Тогда  		
			ЭлементыФормы.НОЛЬ.Значение = Данные;
		ИначеЕсли Событие = "UpdateFreq" Тогда  		  		
			ЭлементыФормы.ЧАСТОТА.Значение = Данные;  	
		КонецЕсли;
		
	КонецЕсли;
	
	_ТекСтрока = ЭлементыФормы.Отгрузки.ТекущаяСтрока;
	Если _ТекСтрока = Неопределено Тогда 
		ЭлементыФормы.НЕТТО1.Значение = 0;
	Иначе 
		Если _ТекСтрока.ВходящийИсходящий = "Входящий" Тогда
			ЭлементыФормы.НЕТТО1.Значение = ?((ЭлементыФормы.МАССА.Значение="")ИЛИ(ЭлементыФормы.МАССА.Значение="НЕТ СВЯЗИ!!"),0,_ТекСтрока.ВесГруженный - ЭлементыФормы.МАССА.Значение);
		Иначе 
			ЭлементыФормы.НЕТТО1.Значение = ?((ЭлементыФормы.МАССА.Значение="")ИЛИ(ЭлементыФормы.МАССА.Значение="НЕТ СВЯЗИ!!"),0,ЭлементыФормы.МАССА.Значение) - _ТекСтрока.ВесПустой;
		КонецЕсли;
	КонецЕсли;


КонецПроцедуры

Процедура ПриЗакрытии()
	Если глВесы <> 0 Тогда глВесы.ЗакрытьВесы(); КонецЕсли;
	глВесы = 0;	
	ОчиститьЗначения();
    ОбновитьРегистр();
КонецПроцедуры

Процедура КомпонентаВключенаПриИзменении(Элемент)
		//КомпонентаВключена = ?(глВесы.Включен <> 0, Истина, Ложь);				
	Если (КомпонентаВключена) и (глВесы=0) Тогда
		глВесы = Новый("AddIn.AddInDCOMVesy");
		глВесы.Включен = 1;
		Сервер = "";
		глВесы.ОткрытьВесы(Сервер);		
		ОбновитьВес();
		иначе 	Если глВесы <> 0 Тогда глВесы.ЗакрытьВесы(); глВесы.Включен = 0; КонецЕсли;
			глВесы = 0;
			ОчиститьЗначения();
	КонецЕсли;
	//УстановитьЭУ(КомпонентаВключена);

КонецПроцедуры

Процедура ДоВзвеситьНажатие(Элемент)
	Если Не ЗначениеЗаполнено(ОперационныйДень) Тогда 
		Предупреждение("Не указан операционный день! Взвешивание невозможно!");
		Возврат;
	КонецЕсли;
	
	_ТекСтрока = ЭлементыФормы.Отгрузки.ТекущаяСтрока;
	Если _ТекСтрока = Неопределено Тогда 
		Предупреждение("Выберите строчку в табличной части!");
	КонецЕсли;
	
	_Документ = _ТекСтрока.Документ;
	Если НЕ ЗначениеЗаполнено(_Документ) Тогда 
		Предупреждение("Выберите строку с уже заведенным весом!");
		Возврат;
	КонецЕсли;
	
	Если _ТекСтрока.ВходящийИсходящий = "Входящий" Тогда 
		Предупреждение("Нельзя довешивать Входящие!");
		Возврат;
	КонецЕсли;
		
	Ответ = Вопрос("Довесить машину № "+_ТекСтрока.ТранспортноеСредство.Наименование+"?",РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Да Тогда 
		_ТекСтрока.ВесГруженный = ЭлементыФормы.МАССА.Значение;
		_ТекСтрока.ВесСВоздухом = ЭлементыФормы.МАССА.Значение;
		
		_ДокОбъект = _Документ.ПолучитьОбъект();
		_ДокОбъект.Товары[0].ВесГруженный = _ТекСтрока.ВесГруженный;
		_ДокОбъект.Товары[0].КоличествоФакт = _ТекСтрока.ВесГруженный - _ТекСтрока.ВесПустой;
		_ДокОбъект.Товары[0].Количество = _ТекСтрока.ВесСВоздухом - _ТекСтрока.ВесПустой;
		Попытка 
			_ДокОбъект.Записать();
		Исключение
			Предупреждение("Неудалось записать документ! Возможно он открыт на другом компьютере! Необходимо закрыть и перевзвесить!");
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура ОтобратьРасходныеНакладные()
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ = Отгрузки.ВыгрузитьКолонки();
	
	Для Каждого Стр из Отгрузки Цикл 
		Если НЕ ЗначениеЗаполнено(стр.Документ) Тогда 
			СтрТЗ = ТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(СтрТЗ, Стр);
		КонецЕсли;
	КонецЦикла;
	
	Отгрузки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Разрешенные
	               |	РеализацияТоваровУслуг.Ссылка КАК Документ,
	               |	РеализацияТоваровУслуг.Ссылка.ВнутреннийНомерНакладной КАК НомерНакладной,
	               |	РеализацияТоваровУслуг.ВесПустой,
	               |	РеализацияТоваровУслуг.ВесГруженный,
	               |	РеализацияТоваровУслуг.ВесПустой + РеализацияТоваровУслуг.Количество КАК ВесСВоздухом,
	               |	РеализацияТоваровУслуг.Ссылка.ТранспортноеСредство,
				   //|	РеализацияТоваровУслуг.Ссылка.ОбъектДоставки,
	               |	РеализацияТоваровУслуг.Ссылка.Водитель,
	               |	РеализацияТоваровУслуг.Ссылка.Контрагент,
	               |	РеализацияТоваровУслуг.ВремяВзвешиванияГруженного,
	               |	РеализацияТоваровУслуг.Ссылка.Организация,
	               |	РеализацияТоваровУслуг.Номенклатура
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Ссылка.ВнутреннийНомерНакладной > 0
	               |	И РеализацияТоваровУслуг.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И РеализацияТоваровУслуг.Ссылка.ПометкаУдаления = ЛОЖЬ";
	
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И РеализацияТоваровУслуг.Ссылка.Контрагент = &КонтрагентДляОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредствоДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И РеализацияТоваровУслуг.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляОтбора";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
	|УПОРЯДОЧИТЬ ПО
	|	НомерНакладной";
	
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("ТранспортноеСредствоДляОтбора",ТранспортноеСредствоДляОтбора);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора",КонтрагентДляОтбора);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		НовСтрока = Отгрузки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Результат);
		НовСтрока.Нетто = НовСтрока.ВесГруженный - НовСтрока.ВесПустой;
		НовСтрока.ВесСВоздухомНетто = НовСтрока.ВесСВоздухом - НовСтрока.ВесПустой;
		НовСтрока.ВходящийИсходящий = "Исходящий";
	КонецЦикла;
	
	Для Каждого Стр из ТЗ Цикл 
		СтрОтгр = Отгрузки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрОтгр,Стр);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Разрешенные
	               |	ПоступлениеТоваровУслугТовары.Ссылка КАК Документ,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.ТранспортноеСредство,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Водитель,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Грузоотправитель,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Контрагент,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Организация,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.КоличествоФакт,
	               |	ПоступлениеТоваровУслугТовары.ВесПустой,
	               |	ПоступлениеТоваровУслугТовары.ВесГруженный,
	               |	ПоступлениеТоваровУслугТовары.ВремяВзвешиванияГруженного
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И ПоступлениеТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |	И ПоступлениеТоваровУслугТовары.Ссылка.ЗагруженоИзОбработкиВесов = ИСТИНА";
				   
				   Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда 
					   Запрос.Текст = Запрос.Текст + "
					   |И ПоступлениеТоваровУслугТовары.Ссылка.Грузоотправитель = &КонтрагентДляОтбора";
				   КонецЕсли;
				   
				   Если ЗначениеЗаполнено(ТранспортноеСредствоДляОтбора) Тогда 
					   Запрос.Текст = Запрос.Текст + "
					   |И ПоступлениеТоваровУслугТовары.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляОтбора";
				   КонецЕсли;

	Запрос.УстановитьПараметр("ТранспортноеСредствоДляОтбора",ТранспортноеСредствоДляОтбора);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора",КонтрагентДляОтбора);
	
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		НовСтрока = Отгрузки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Результат);
		НовСтрока.Нетто = НовСтрока.ВесГруженный - НовСтрока.ВесПустой;
		НовСтрока.ВесСВоздухомНетто = НовСтрока.Нетто;
		НовСтрока.ВходящийИсходящий = "Входящий";
	КонецЦикла;
КонецПроцедуры

Процедура КонтрагентДляОтбораПриИзменении(Элемент)
	ОтобратьРасходныеНакладные();
КонецПроцедуры

Процедура ТранспортноеСредствоДляОтбораПриИзменении(Элемент)
	ОтобратьРасходныеНакладные();
КонецПроцедуры

Процедура ОтгрузкиПриАктивизацииСтроки(Элемент)
	ТекСтрока = ЭлементыФормы.Отгрузки.ТекущаяСтрока;
	Если ТекСтрока <> Неопределено Тогда 
		ЭлементыФормы.ТекТС.Значение = "ТС: "+ТекСтрока.ТранспортноеСредство.Наименование;
		ЭлементыФормы.ТекОп.Значение = ТекСтрока.ВходящийИсходящий;
		ЭлементыФормы.НЕТТО1.Значение = ?((ЭлементыФормы.МАССА.Значение="")ИЛИ(ЭлементыФормы.МАССА.Значение="НЕТ СВЯЗИ!!"),0,ЭлементыФормы.МАССА.Значение) - ТекСтрока.ВесПустой;
	Иначе 
		ЭлементыФормы.НЕТТО1.Значение = 0;
	КонецЕсли;
КонецПроцедуры

Процедура ТранспортноеСредствоДляОтбора1ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ТранспортноеСредствоДляПоиска) Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ Разрешенные
		               |	РеализацияТоваровУслуг.Ссылка.Контрагент,
		               |	РеализацияТоваровУслуг.Ссылка.Дата КАК Дата
		               |ПОМЕСТИТЬ Выборка
		               |ИЗ
		               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслуг
		               |ГДЕ
		               |	РеализацияТоваровУслуг.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляПоиска
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ 
		               |	ПоступлениеТоваровУслугТовары.Ссылка.Контрагент,
		               |	ПоступлениеТоваровУслугТовары.Ссылка.Дата
		               |ИЗ
		               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		               |ГДЕ
		               |	ПоступлениеТоваровУслугТовары.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляПоиска
		               |
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ ПЕРВЫЕ 1
		               |	Выборка.Контрагент
		               |ИЗ
		               |	Выборка КАК Выборка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Выборка.Дата УБЫВ";
		
		Запрос.УстановитьПараметр("ТранспортноеСредствоДляПоиска",ТранспортноеСредствоДляПоиска);
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			КонтрагентДляПоиска = Результат.Контрагент;
		КонецЦикла;
		
		Иначе 
		КонтрагентДляПоиска = "";
	КонецЕсли;
КонецПроцедуры

Процедура ТекОпНажатие(Элемент)
	Если ПолеВыбора1 = 1 Тогда
		ПолеВыбора1 = 2;
		ЭлементыФормы.ТекОп.Значение = "Входяший";
	Иначе 
		ПолеВыбора1 = 1;
		ЭлементыФормы.ТекОп.Значение = "Исходящий";
	КонецЕсли;
КонецПроцедуры

Процедура ОбновитьИтогиОтгрузкиНажатие(Элемент)
	ИтогиОтгрузок.Очистить();
	ИтогиЗагрузок.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Разрешенные
	|	Год.Номенклатура КАК Номенклатура,
	|	СУММА(0) КАК День,
	|	СУММА(0) КАК Месяц,
	|	СУММА(Год.КоличествоФакт) КАК Год
	|ПОМЕСТИТЬ ТаблицаДляСвертки
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Год
	|ГДЕ
	|	Год.Ссылка.ВнутреннийНомерНакладной > 0
	|	И Год.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ГОД) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И Год.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И Год.Ссылка.Контрагент = &КонтрагентДляОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредствоДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И Год.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляОтбора";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО
	|	Год.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Месяц.Номенклатура,
	|	СУММА(0),
	|	СУММА(Месяц.КоличествоФакт),
	|	СУММА(0)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Месяц
	|ГДЕ
	|	Месяц.Ссылка.ВнутреннийНомерНакладной > 0
	|	И Месяц.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И Месяц.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И Месяц.Ссылка.Контрагент = &КонтрагентДляОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредствоДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И Месяц.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляОтбора";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|
	|СГРУППИРОВАТЬ ПО
	|	Месяц.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	День.Номенклатура,
	|	СУММА(День.КоличествоФакт),
	|	СУММА(0),
	|	СУММА(0)
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК День
	|ГДЕ
	|	День.Ссылка.ВнутреннийНомерНакладной > 0
	|	И День.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И День.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И День.Ссылка.Контрагент = &КонтрагентДляОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредствоДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И День.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляОтбора";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|
	|СГРУППИРОВАТЬ ПО
	|	День.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляСвертки.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаДляСвертки.День) КАК День,
	|	СУММА(ТаблицаДляСвертки.Месяц) КАК Месяц,
	|	СУММА(ТаблицаДляСвертки.Год) КАК Год
	|ИЗ
	|	ТаблицаДляСвертки КАК ТаблицаДляСвертки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляСвертки.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("ТранспортноеСредствоДляОтбора",ТранспортноеСредствоДляОтбора);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора",КонтрагентДляОтбора);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		
		НовСтрока = ИтогиОтгрузок.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Результат);
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Разрешенные
	|	Год.Номенклатура КАК Номенклатура,
	|	СУММА(0) КАК День,
	|	СУММА(0) КАК Месяц,
	|	СУММА(Год.КоличествоФакт) КАК Год
	|ПОМЕСТИТЬ ТаблицаДляСвертки
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Год
	|ГДЕ
	|	Год.Ссылка.ЗагруженоИзОбработкиВесов = ИСТИНА
	|	И Год.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ГОД) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И Год.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И Год.Ссылка.Грузоотправитель = &КонтрагентДляОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредствоДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И Год.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляОтбора";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|СГРУППИРОВАТЬ ПО
	|	Год.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Месяц.Номенклатура,
	|	СУММА(0),
	|	СУММА(Месяц.КоличествоФакт),
	|	СУММА(0)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Месяц
	|ГДЕ
	|	Месяц.Ссылка.ЗагруженоИзОбработкиВесов = ИСТИНА
	|	И Месяц.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И Месяц.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И Месяц.Ссылка.Грузоотправитель = &КонтрагентДляОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредствоДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И Месяц.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляОтбора";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|
	|СГРУППИРОВАТЬ ПО
	|	Месяц.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	День.Номенклатура,
	|	СУММА(День.КоличествоФакт),
	|	СУММА(0),
	|	СУММА(0)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК День
	|ГДЕ
	|	День.Ссылка.ЗагруженоИзОбработкиВесов = ИСТИНА
	|	И День.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	|	И День.Ссылка.ПометкаУдаления = ЛОЖЬ";
	Если ЗначениеЗаполнено(КонтрагентДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И День.Ссылка.Грузоотправитель = &КонтрагентДляОтбора";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТранспортноеСредствоДляОтбора) Тогда 
		Запрос.Текст = Запрос.Текст + "
		|И День.Ссылка.ТранспортноеСредство = &ТранспортноеСредствоДляОтбора";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|
	|СГРУППИРОВАТЬ ПО
	|	День.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДляСвертки.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаДляСвертки.День) КАК День,
	|	СУММА(ТаблицаДляСвертки.Месяц) КАК Месяц,
	|	СУММА(ТаблицаДляСвертки.Год) КАК Год
	|ИЗ
	|	ТаблицаДляСвертки КАК ТаблицаДляСвертки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДляСвертки.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("ТранспортноеСредствоДляОтбора",ТранспортноеСредствоДляОтбора);
	Запрос.УстановитьПараметр("КонтрагентДляОтбора",КонтрагентДляОтбора);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		
		НовСтрока = ИтогиЗагрузок.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрока, Результат);
	КонецЦикла;
	
КонецПроцедуры

Процедура НоменклатураОтгрузкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Значения = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ Разрешенные
	               |	Номенклатура.Ссылка КАК Номенклатура
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.ПозицияОтгружаетсяНаЗаводе = ИСТИНА
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура.Наименование";
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		Значения.Добавить(Результат.Номенклатура);	
	КонецЦикла;
	
		ТекНом = ВыбратьИзСписка(Значения);
		Если ТекНом = Неопределено Тогда 
			НоменклатураОтгрузки = "";
		Иначе 
			НоменклатураОтгрузки = ТекНом.Значение;
		КонецЕсли;
		//Форма = Справочники.Номенклатура.ПолучитьФормуВыбора();
	
	//_ОС = Форма.Отбор.Найти("Ссылка");
	//_ОС.ВидСравнения = ВидСравнения.ВСписке;
	//_ОС.Значение = Значения;
	//_ОС.Использование = Истина;
	//НоменклатураОтгрузки = Форма.ОткрытьМодально();
КонецПроцедуры

Процедура ОтгрузкиПередНачаломДобавления(Элемент, Отказ, Копирование)
	Предупреждение("Добавляем через кнопку 'добавить ТС на взвешивание'...");
	Отказ = 1;
КонецПроцедуры

Процедура КоманднаяПанель1запонитьРегистр(Кнопка)
	ОбновитьРегистр();
КонецПроцедуры

Функция ПолучитьСуммуДоставки(ТранспортноеСредство)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныЗаПеревозкуПоТССрезПоследних.ЦенаЗаЕдиницу
	|ИЗ
	|	РегистрСведений.ЦеныЗаПеревозкуПоТС.СрезПоследних(&ДатаДок, ТС = &ТранспортноеСредство) КАК ЦеныЗаПеревозкуПоТССрезПоследних";
	
	Запрос.УстановитьПараметр("ДатаДок", ОперационныйДень);
	Запрос.УстановитьПараметр("ТранспортноеСредство", ТранспортноеСредство);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.ЦенаЗаЕдиницу;
	КонецЦикла;	
	Возврат 0;
КонецФункции

Функция РассчитатьСальдоПоКонтрагенту(Док)
	//получим все отгрузки по контрагенту с даты корректных остатков
	
	Отгрузили = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
	               |	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
	               |	СУММА(ВЫБОР
	               |			КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0
	               |				ТОГДА 0
	               |			ИНАЧЕ РеализацияТоваровУслугТовары.Количество
	               |		КОНЕЦ) КАК ПродалиКоличествоПоЦенамРегистра,
	               |	СУММА(РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма) КАК ПродалиОбщаяСумма
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |	И РеализацияТоваровУслугТовары.Ссылка.Дата >= &Дата
	               |	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0
	               |			ИЛИ ЕСТЬNULL(РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет, ЛОЖЬ) = ИСТИНА)
	               |	И РеализацияТоваровУслугТовары.Ссылка.Организация = &Организация
	               |	И РеализацияТоваровУслугТовары.Ссылка.Контрагент = &Контрагент
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровУслугТовары.Номенклатура,
	               |	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата,
	               |	Номенклатура";
				   
	Запрос.УстановитьПараметр("Контрагент",Док.Контрагент);
	Запрос.УстановитьПараметр("Дата",Дата("20160401000000"));
	Запрос.УстановитьПараметр("Организация",Док.Организация);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		ДатаПолученияЦены = Результат.Дата;
		
		фКонтрагент = Док.Контрагент;
		фНоменклатура = Результат.Номенклатура;
		
		ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
		Новый Структура("Номенклатура,Контрагент", фНоменклатура, фКонтрагент)).Цена;
		
		Если ЦенаПродажи = 0 Тогда 
			ЦенаПродажи  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
			Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"),фНоменклатура)).Цена;
		КонецЕсли;
		
		ПродалиСумма = Результат.ПродалиОбщаяСумма+Результат.ПродалиКоличествоПоЦенамРегистра*ЦенаПродажи;
		Отгрузили = Отгрузили + ПродалиСумма;
	КонецЦикла;
	
	//получим сальдо по 62 счету на текущую дату

	Сальдо = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстатки.Субконто1,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	               |			ТОГДА ХозрасчетныйОстатки.СуммаОстатокКт
	               |		ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстатокДт
	               |	КОНЕЦ КАК Сальдо,
	               |	ХозрасчетныйОстатки.Организация
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(&ТекДата, Счет В ИЕРАРХИИ (&Сч62), , ) КАК ХозрасчетныйОстатки
	               |ГДЕ
	               |	ХозрасчетныйОстатки.Организация = &Организация
	               |	И ХозрасчетныйОстатки.Субконто1 = &Контрагент";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата()+1);
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	Запрос.УстановитьПараметр("Контрагент", Док.Контрагент);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		Сальдо = Результат.Сальдо;
	КонецЦикла;
	
	Расчет = Сальдо - Отгрузили;
	
	Возврат Расчет;
КонецФункции

Процедура КоманднаяПанель1ПересчетКолонкиРасчет(Кнопка)
	Для Каждого Стр Из Отгрузки Цикл 
		Если ЗначениеЗаполнено(Стр.Документ) Тогда 
			Стр.Расчет = РассчитатьСальдоПоКонтрагенту(Стр.Документ);			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОтгрузкиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Лимит = ДанныеСтроки.Контрагент.ЛимитОтгрузок;
	
	Если Лимит < -ДанныеСтроки.Расчет Тогда 
		ОформлениеСтроки.Ячейки.Расчет.ЦветТекста=WebЦвета.Красный;
		ОформлениеСтроки.Ячейки.Расчет.Шрифт= ШрифтыСтиля.ШрифтВажнойНадписи;

	Иначе
		ОформлениеСтроки.Ячейки.Расчет.ЦветТекста=WebЦвета.Черный;
		ОформлениеСтроки.Ячейки.Расчет.Шрифт= ШрифтыСтиля.ОбычныйШрифтТекста;
	КонецЕсли;   

КонецПроцедуры


ПодключитьОбработчикОжидания("ПриОжидании", 1);
