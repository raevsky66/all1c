//я - явка
//к - командировка
//от - отпуск
//б - болезнь

Функция ПолучитьРабочийДеньМесяца(ДатаДокумента)

	ПоследнийДеньМесяца = КонецМесяца(ДатаДокумента);
	Если ДеньНедели(КонецМесяца(ДатаДокумента)) = 6 Тогда
		ПоследнийРабочийДеньМесяца = ПоследнийДеньМесяца - 86400
	ИначеЕсли ДеньНедели(КонецМесяца(ДатаДокумента)) = 7 Тогда	
		ПоследнийРабочийДеньМесяца = ПоследнийДеньМесяца - 2 * 86400
	Иначе	
	    ПоследнийРабочийДеньМесяца = ПоследнийДеньМесяца
	КонецЕсли;
	
	Возврат ПоследнийРабочийДеньМесяца
	
КонецФункции // ПолучитьРабочийДеньМесяца()

Процедура Кнопка1Нажатие(Элемент)
	Выполнить1();
КонецПроцедуры

Функция Выполнить1();
	//установим границы периода
	ДатаНачалаПериода 	 = НачалоМесяца(Дата);
	ДатаОкончанияПериода = КонецМесяца(Дата);	
	
    ЭлементыФормы.ТабличноеПоле1.ВыделенныеСтроки.Очистить();
	Для Каждого ТекущаяСтрока ИЗ ТабличноеПоле1 Цикл
		КоличествоЧасов = 0;  
		КоличествоДней = 0;
		//расчет за период количества дней и часов по норме
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("НачалоМесяца",НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("КонецМесяца",КонецМесяца(Дата));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегламентированныйПроизводственныйКалендарь.ВидДня,
		|	ДЕНЬНЕДЕЛИ(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК ДеньНедели,
		|	ДЕНЬ(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря) КАК ДеньМесяца //выбирает номер дня месяца
		|ИЗ
		|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|ГДЕ
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоМесяца И &КонецМесяца
		|
		|УПОРЯДОЧИТЬ ПО
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря";
		Результат = Запрос.Выполнить();
		Данные = Результат.Выгрузить();
		Для ДеньМесяца = День(ДатаНачалаПериода) по День(ДатаОкончанияПериода) Цикл
			ВидДня = Данные[ДеньМесяца - 1].ВидДня;
			Если 
				ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Суббота ИЛИ
				ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Воскресенье ИЛИ
				ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Праздник
			Тогда
				ТекущаяСтрока["Колонка" + ДеньМесяца] = "в";
			Иначе
				Часов = 8 * ТекущаяСтрока.Ставка;				
				Если ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Предпраздничный Тогда
					Часов = Часов - ТекущаяСтрока.Ставка;
				КонецЕсли;
				
				ТекущаяСтрока["Колонка" + ДеньМесяца] = "я";
				ТекущаяСтрока["Время" + ДеньМесяца] = Часов;
				
				КоличествоЧасов = КоличествоЧасов + Часов;
				КоличествоДней = КоличествоДней + 1;
			КонецЕсли;
		КонецЦикла;
		
		ТекущаяСтрока.НормаДней = КоличествоДней;
		ТекущаяСтрока.НормаЧасов = КоличествоЧасов;
	КонецЦикла;

	РассчитатьФакт();
КонецФункции

Процедура Кнопка2Нажатие(Элемент)
	Если ЭлементыФормы.Номер.Значение = 0 Тогда
		ТекстВопроса = "Не указан номер табеля. В печатной форме номер не проставится. Продолжить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	Конецесли;
	
	ЭлементыФормы.ТабличноеПоле1.ВыделенныеСтроки.Очистить();
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	Макет = ПолучитьМакет("Макет");
	счетчик = 1;
	Областьмакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.ИмяОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата), "НаименованиеДляПечатныхФорм"); //подставляет сокращенное наименование
	ОбластьМакета.Параметры.ИмяПодразделения = ЭлементыФормы.Подразделение.Значение;
	ОбластьМакета.Параметры.НомерДокумента = Номер;
	ОбластьМакета.Параметры.ДатаЗаполнения = КонецМесяца(Дата);
	ОбластьМакета.Параметры.ДатаНач = НачалоМесяца(Дата);
	ОбластьМакета.Параметры.ДатаКон = КонецМесяца(Дата);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Областьмакета = Макет.ПолучитьОбласть("Колонтитул");	
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	Для Каждого ТекСтрока Из ТабличноеПоле1 Цикл
		
		Областьмакета = Макет.ПолучитьОбласть("Область1");
		ОбластьМакета.Параметры.НомерПоПорядку = счетчик;
		ОбластьМакета.Параметры.Работник = ТекСтрока.ФИО;
		ОбластьМакета.Параметры.Должность = ТекСтрока.Должность;
		ОбластьМакета.Параметры.ТабельныйНомер = ТекСтрока.ТабельныйНомер;		

		Для Номер = 1 По 31 Цикл
			ОбластьМакета.Параметры["День" + Номер] = ТекСтрока["Колонка" + Номер];
			ОбластьМакета.Параметры["Время" + Номер] = ТекСтрока["Время" + Номер];
		КонецЦикла;
		
		ОбластьМакета.Параметры.ЧМ1 = ТекСтрока.Отработано1часов;
		ОбластьМакета.Параметры.ЧМ2 = ТекСтрока.Отработано2часов;
		ОбластьМакета.Параметры.ДМ1 = ТекСтрока.Отработано1дней;
		ОбластьМакета.Параметры.ДМ2 = ТекСтрока.Отработано2дней;
		ОбластьМакета.Параметры.ДМ = ТекСтрока.ОтработаноМесяцДней;
		ОбластьМакета.Параметры.ЧМ = ТекСтрока.ОтработаноМесяцЧасов;
		Если НЕ ТекСтрока.Отпуск = 0 Тогда
			ОбластьМакета.Параметры.от = "ОТ";
		КонецЕсли;
		ОбластьМакета.Параметры.дниОТ = ТекСтрока.Отпуск;
		Если НЕ ТекСтрока.Болезнь = 0 Тогда
			ОбластьМакета.Параметры.б = "Б";
		КонецЕсли;
		ОбластьМакета.Параметры.дниБ = ТекСтрока.Болезнь;
		Если НЕ ТекСтрока.Командировка = 0 Тогда
			ОбластьМакета.Параметры.к = "К";
		КонецЕсли;
		ОбластьМакета.Параметры.дниК = ТекСтрока.Командировка;
		ТабДокумент.Вывести(ОбластьМакета);
		счетчик = счетчик + 1;
	КонецЦикла;
	
	Областьмакета = Макет.ПолучитьОбласть("Подвал");	
	
	Областьмакета.Параметры.ДолжностьОтветственного = ЭлементыФормы.ДолжностьОтветственного.Значение;
	Если ПустаяСтрока(Областьмакета.Параметры.ДолжностьОтветственного) Тогда
		Областьмакета.Параметры.ДолжностьОтветственного = "Бухгалтер";
	КонецЕсли;
	Областьмакета.Параметры.ФИООтветственного = ?(НЕ ЗначениеЗаполнено(Ответственный), "", ОбщегоНазначения.ФамилияИнициалыФизЛица(Ответственный.ФизЛицо));;
		
	Областьмакета.Параметры.ДолжностьКадровика = ЭлементыФормы.ДолжностьРаботника.Значение;
	Если ПустаяСтрока(Областьмакета.Параметры.ДолжностьКадровика) Тогда
		Областьмакета.Параметры.ДолжностьКадровика = "Бухгалтер";
	КонецЕсли;
	Областьмакета.Параметры.ФИОКадровика = ?(НЕ ЗначениеЗаполнено(Ответственный), "", ОбщегоНазначения.ФамилияИнициалыФизЛица(Ответственный.ФизЛицо));;

	Если ЭлементыФормы.Руководитель.Значение.Наименование = "" Тогда
		Руководители = ОбщегоНазначения.ОтветственныеЛица(ЭлементыФормы.Организация.Значение,КонецМесяца(Дата));
		РуководительДолжность = Руководители.РуководительДолжность;
		Руководители = ОбщегоНазначения.ОтветственныеЛица(ЭлементыФормы.Организация.Значение,КонецМесяца(Дата));
		РуководительДолжность = Руководители.РуководительДолжность;
		Областьмакета.Параметры.ДолжностьРуководителя = РуководительДолжность;
		ОбластьМакета.Параметры.ФИОРуководителя = Руководители.РуководительПредставление;
	Иначе
		Областьмакета.Параметры.ДолжностьРуководителя = ЭлементыФормы.ДолжностьРуководителя.Значение;
		ОбластьМакета.Параметры.ФИОРуководителя = ЭлементыФормы.Руководитель.Значение;
	КонецЕсли;
	
	ОбластьМакета.Параметры.дата1 = КонецМесяца(Дата);
	ОбластьМакета.Параметры.дата2 = КонецМесяца(Дата);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ТолькоПросмотр      = Истина;
	ТабДокумент.ОтображатьСетку     = Ложь;
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	ТабДокумент.Показать();
КонецПроцедуры

Процедура Кнопка3Нажатие(Элемент)
	   РассчитатьФакт();
КонецПроцедуры

Функция РассчитатьФакт()
	Для Каждого Строка Из ТабличноеПоле1 Цикл
		ф = 0; //дни месяца
		от = 0; //дни отпуска
		б = 0;   //дни болезни
		ком = 0; //дн командировки
		ЧМ = 0;  //часы месяца
		ЧМ1 = 0; //часы 1 половина
		ЧМ2 = 0; //часы 2 половина
		ДМ1 = 0; //дни 1 половина
		ДМ2 = 0; //дни 2 половина
		
		Для Номер = 1 По 31 Цикл
			Колонка = Строка["Колонка" + Номер];
			Если Колонка = "я" Тогда
				ф = ф + 1;
				ЧМ = ЧМ + Строка["Время" + Номер];
			ИначеЕсли Колонка = "от" Тогда
				от = от +1;
			ИначеЕсли Колонка = "б" Тогда
				б = б + 1;
			ИначеЕсли Колонка = "к" Тогда
				ком = ком + 1;
			КонецЕсли;
			
			Если Номер = 15 Тогда
				ЧМ1 = ЧМ;
				ДМ1 = ф;
			КонецЕсли;
		КонецЦикла;
		
		Строка.ОтработаноМесяцДней = ф;
		Строка.Отпуск = от;
		Строка.Болезнь = б;
		Строка.Командировка = ком;
		Строка.ОтработаноМесяцЧасов = ЧМ;
		Строка.Отработано1дней = ДМ1;
		Строка.Отработано1часов = ЧМ1;
		Строка.Отработано2дней = ф - ДМ1;
		Строка.Отработано2часов = ЧМ - ЧМ1;
	КонецЦикла;
	
КонецФункции

Процедура ПриОткрытии()
	Дата = КонецМесяца(ТекущаяДата());
	ЭлементыФормы.Организация.Значение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнаяОрганизация");
	
	ЭлементыФормы.Ответственный.Значение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойОтветственный");
	ЭлементыФормы.Работник.Значение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойОтветственный");
	ВосстановитьТабель(Дата, Организация);
КонецПроцедуры

Процедура ТабличноеПолеКолонкаПриИзменении(Элемент)
	Таб = ЭлементыФормы.ТабличноеПоле1;
	
	ИмяКолонкиСВременем = СтрЗаменить(Таб.ТекущаяКолонка.Имя, "Колонка", "Время");
	
	Если Таб.ТекущаяКолонка.ЭлементУправления.Значение = "я" Тогда
		Таб.ТекущаяСтрока[ИмяКолонкиСВременем] = 8 * Таб.ТекущаяСтрока.Ставка;
	Иначе
		Таб.ТекущаяСтрока[ИмяКолонкиСВременем] = "";
	КонецЕсли;
КонецПроцедуры 

Процедура ЛицаНажатие(Элемент)
	Если Организация.Пустая() Тогда
		Предупреждение("Не указана организация, заполнить список сотрудников невозможно. Укажите ораганизацию!");
		Возврат;
	КонецЕсли;
		
	Если табличноеПоле1.Количество() > 0 Тогда	
		ТекстВопроса = "Будет заполнена таблица. Текущие данные будут очищены. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
		
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;

		ЭлементыФормы.ТабличноеПоле1.Значение.Очистить();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",ЭлементыФормы.Подразделение.Значение);
		Запрос.УстановитьПараметр("ВидЗанятости",			Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация",	Организация);
		Запрос.УстановитьПараметр("ДатаНач",				НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("ДатаКон",				КонецМесяца(Дата));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Код КАК Код,
		|	РаботникиОрганизацийСрезПоследних.ЗанимаемыхСтавок,
		|	РаботникиОрганизацийСрезПоследних.Должность КАК Должность,
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости КАК ВидЗанятости,
		|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК ФизЛицо
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаКон, ) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости <> &ВидЗанятости
		|	И РаботникиОрганизацийСрезПоследних.Организация = &ГоловнаяОрганизация
		|	И РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации = &ПодразделениеОрганизации";
	Иначе
		Запрос.УстановитьПараметр("ВидЗанятости",			Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация",	Организация);
		Запрос.УстановитьПараметр("ДатаНач",				НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("ДатаКон",				КонецМесяца(Дата));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Код КАК Код,
		|	РаботникиОрганизацийСрезПоследних.ЗанимаемыхСтавок,
		|	РаботникиОрганизацийСрезПоследних.Должность КАК Должность,
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости КАК ВидЗанятости,
		|	РаботникиОрганизацийСрезПоследних.Сотрудник КАК ФизЛицо
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаКон, ) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости <> &ВидЗанятости
		|	И РаботникиОрганизацийСрезПоследних.Организация = &ГоловнаяОрганизация";
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.ЗанимаемыхСтавок = 0 Тогда
			ЭлементыФормы.ТабличноеПоле1.ДобавитьСтроку();
			ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока.ФИО = Выборка.ФизЛицо;
			ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока.Должность = Выборка.Должность;
			ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока.ТабельныйНомер = Выборка.Код;
			Если  Выборка.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы Тогда 
				ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока.Ставка = 1.0;
			Иначе
				ЭлементыФормы.ТабличноеПоле1.ТекущаяСтрока.Ставка = 0.5;
	        КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДолжностьОтветственногоПриИзменении(Элемент)
КонецПроцедуры

Процедура ДолжностьРаботникаПриИзменении(Элемент)	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СохранитьТабель(Дата, Организация);
	СохранитьРеквизитыВСписок();
КонецПроцедуры

Процедура СохранитьТабель(НаДату, ДляОрганизации)
	КаталогТабеля = ПодготовитьКаталогДляТабеля(НаДату, ДляОрганизации);
	СоздатьКаталог(КаталогТабеля);
	ЗначениеВФайл(КаталогТабеля + "/ТабличнаяЧасть", ТабличноеПоле1);
	ЗначениеВФайл(КаталогТабеля + "/Реквизиты", СохранитьРеквизитыВСписок());
КонецПроцедуры

Процедура ВосстановитьТабель(НаДату, ДляОрганизации)
	КаталогТабеля = ПодготовитьКаталогДляТабеля(НаДату, ДляОрганизации);
	Попытка
		ТабличноеПоле1.Очистить();
		ТабличноеПоле1 = ЗначениеИзФайла(КаталогТабеля + "/ТабличнаяЧасть");
	Исключение
	КонецПопытки;
	
	Попытка
		Список = ЗначениеИзФайла(КаталогТабеля + "/Реквизиты");
		ВосстановитьРеквизитыИзСписка(Список);
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция ПодготовитьКаталогДляТабеля(НаДату, ДляОрганизации)
	КаталогИБ = НСтр(СтрокаСоединенияИнформационнойБазы(), "File");
	КаталогТабеля = КаталогИБ + "/Табели/" + Строка(ДляОрганизации.ИНН) + "/" + 
		Формат(НаДату, "ДФ=гггг") + "." + Формат(НаДату, "ДФ=ММ");
	Возврат КаталогТабеля;
КонецФункции

Процедура ДатаПериодаПриИзменении(Элемент)
	ВосстановитьТабель(Дата, Организация);
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	ВосстановитьТабель(Дата, Организация);
КонецПроцедуры

Функция СохранитьРеквизитыВСписок()
	Список = Новый СписокЗначений;
	
	Для Каждого Элемент Из ЭтаФорма.ЭлементыФормы Цикл
		Если НЕ ПустаяСтрока(Элемент.Данные) Тогда
			Список.Добавить(Элемент.Значение, Элемент.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Список;
КонецФункции

Функция ВосстановитьРеквизитыИзСписка(Список)
	Для Каждого Элемент Из Список Цикл
		ЭтаФорма.ЭлементыФормы[Элемент.Представление].Значение = Элемент.Значение;
	КонецЦикла;
КонецФункции

Процедура ОтветственныйПриИзменении(Элемент)
	ДолжностьОтветственного = Ответственный.ТекущаяДолжностьОрганизации;
КонецПроцедуры

Процедура РаботникПриИзменении(Элемент)
	ДолжностьРаботника = Работник.ТекущаяДолжностьОрганизации;
КонецПроцедуры

Процедура ДолжностьРуководителяПриИзменении(Элемент)
	ДолжностьРуководителя = Руководитель.ТекущаяДолжностьОрганизации;
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	
КонецПроцедуры
