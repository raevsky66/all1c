
Процедура ПриОткрытии()
	Для Каждого Метаданное из Метаданные.РегламентныеЗадания Цикл
		ЭлементыФормы.МетаданныеВыбор.СписокВыбора.Добавить(Метаданное, Метаданное.Представление());
	КонецЦикла;
	
	ПользователиИБ = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для Каждого Пользователь из ПользователиИБ Цикл
		ЭлементыФормы.ПользователиВыбор.СписокВыбора.Добавить(Пользователь.Имя, Пользователь.ПолноеИмя);
	КонецЦикла;

	Если РегламентноеЗадание <> Неопределено Тогда
		МетаданныеВыбор = РегламентноеЗадание.Метаданные;
		ЭлементыФормы.МетаданныеВыбор.Доступность = Ложь;
		Наименование = РегламентноеЗадание.Наименование;
		Ключ = РегламентноеЗадание.Ключ;
		Использование = РегламентноеЗадание.Использование;
		ПользователиВыбор = РегламентноеЗадание.ИмяПользователя;
		КоличествоПовторовПриАварийномЗавершении = РегламентноеЗадание.КоличествоПовторовПриАварийномЗавершении;
		ИнтервалПовтораПриАварийномЗавершении = РегламентноеЗадание.ИнтервалПовтораПриАварийномЗавершении;
		Расписание = РегламентноеЗадание.Расписание;
	Иначе
		Расписание = Новый РасписаниеРегламентногоЗадания;
	КонецЕсли;
КонецПроцедуры

Процедура РасписаниеНажатие(Элемент)
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
		
	Если Диалог.ОткрытьМодально() Тогда
		Расписание = Диалог.Расписание;
	КонецЕсли;
КонецПроцедуры

Процедура OK(Кнопка)
	Попытка
		Если МетаданныеВыбор = Неопределено Тогда
			ВызватьИсключение("Не выбраны метаданные регламентного задания.");
		КонецЕсли;
		
		Если РегламентноеЗадание = Неопределено Тогда
			РегламентноеЗадание = РегламентныеЗадания.СоздатьРегламентноеЗадание(МетаданныеВыбор);
		КонецЕсли;
		
		РегламентноеЗадание.Наименование = Наименование;
		РегламентноеЗадание.Ключ = Ключ;
		РегламентноеЗадание.Использование = Использование;
		РегламентноеЗадание.ИмяПользователя = ПользователиВыбор;
		РегламентноеЗадание.КоличествоПовторовПриАварийномЗавершении = КоличествоПовторовПриАварийномЗавершении;
		РегламентноеЗадание.ИнтервалПовтораПриАварийномЗавершении = ИнтервалПовтораПриАварийномЗавершении;
		РегламентноеЗадание.Расписание = Расписание;
		РегламентноеЗадание.Записать();
		
		Закрыть(Истина);
	Исключение	
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());	
	КонецПопытки;
КонецПроцедуры




