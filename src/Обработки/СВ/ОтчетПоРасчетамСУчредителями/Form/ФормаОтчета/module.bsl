
Процедура Сформировать(Пар = "")
	//	1. Начальные остатки берутся из регистра сведений НачальныеОстаткиПоОрганизациям на дату указанную "Остатки по 60, 62 счету корректны на дату" (ИтогТЗ)
	//	2. Ищем начальные остатки по ТД Исток в разрезах отгружаемой номенклатуры из регистра сведений НачальныеОстаткиПоОрганизациям на дату указанную "Остатки по 60, 62 счету корректны на дату" (ТДИстокТЗ)
	//	3. Ищем отгрузки за период через весы или с признаком включать в общий отчет.
	//	4. 	ищем оплаты с ОстаткиПо62счетуКорректныНаДату по Текущую дату.
	//	 асфальт ручная операцияорг АБЗ-СВ контрагент ТД Исток Дт000 Кт 62
	//	 эбк завод - поступление на р/с орг АБЗИсток, контрагент ТД Исток Дт51 Кт62
	//	 эбк -  поступление на р/с орг Корп ЭДС, контрагент ТД Исток Дт51 Кт62
	//	 Техника - поступление по кассе орг АБЗ-СВ контрагент ТД Исток Дт50 Кт62
	//	 СтройДор - ручная операция АБЗ-СВ контрагент Дт000 Кт62
	
	ТабДокумент = Новый ТабличныйДокумент;
	Если Пар = "Выставлено" Тогда 
		Макет = ПолучитьМакет("МакетВыставлено");
	Иначе 
		Макет = ПолучитьМакет("Макет");	
	КонецЕсли;
	
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтог             = Макет.ПолучитьОбласть("СтрокаИтог");
	ОбластьМакетаИтогОбщий        = Макет.ПолучитьОбласть("СтрокаИтогОбщий");
	
	ОбластьМакетаШапка.Параметры.НачДата = Формат(НачДата,"ДФ=dd.MM.yyyy" );
	ОбластьМакетаШапка.Параметры.КонДата = Формат(КонДата,"ДФ=dd.MM.yyyy" );
	
	ОбластьМакетаШапка.Параметры.ТипНоменклатуры = ТипНоменклатуры;
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	ТабДокумент.НачатьАвтогруппировкуСтрок();
	
	СтройДорЕкб = Справочники.Организации.НайтиПоНаименованию("ООО ""СтройДорЕкб""");
	ТДАБЗ = Справочники.Организации.НайтиПоНаименованию("ООО ""ТД""АБЗ Исток""");
	АБЗСВ = Справочники.Организации.НайтиПоНаименованию("ООО ""АБЗ-СВ""");
	//Котельников = Справочники.Организации.НайтиПоНаименованию("ИП Котельников");
	Воскресенский = Справочники.Организации.НайтиПоНаименованию("ИП Воскресенский");
	АБЗИсток =  Справочники.Организации.НайтиПоНаименованию("ООО ""АБЗ ""Исток""");
	КорпЭДС = Справочники.Организации.НайтиПоНаименованию("ООО ""Корпорация ЭДС""");
	
	ИтогиОрганизаций = Новый ТаблицаЗначений;
	ИтогиОрганизаций.Колонки.Добавить("Организация");
	ИтогиОрганизаций.Колонки.Добавить("ИтКупилиСумма",Новый ОписаниеТипов("Число"));	
	ИтогиОрганизаций.Колонки.Добавить("КупилиКоличество",Новый ОписаниеТипов("Число"));	
	ИтогиОрганизаций.Колонки.Добавить("ИтВыставлено",Новый ОписаниеТипов("Число"));	
	ИтогиОрганизаций.Колонки.Добавить("ИтРазница",Новый ОписаниеТипов("Число"));	
	
	
	СписокОрганизаций = Новый Массив;
	//СписокОрганизаций.Добавить(СтройДорЕкб);
	//СписокОрганизаций.Добавить(ТДАБЗ);
	//СписокОрганизаций.Добавить(АБЗСВ);
	////СписокОрганизаций.Добавить(Котельников);
	//СписокОрганизаций.Добавить(Воскресенский);
	//СписокОрганизаций.Добавить(АБЗИсток);
	
	//КЧ = Новый КвалификаторыЧисла(12,2);
	Для Каждого ЭлементМассива Из ТабличноеПоле1 Цикл 
		Если  ЭлементМассива.Пометка Тогда 
			НовСтр = ИтогиОрганизаций.Добавить();
			НовСтр.Организация = ЭлементМассива.Организация;
			СписокОрганизаций.Добавить(ЭлементМассива.Организация);
		КонецЕсли;
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СобственныеКонтрагенты.Организация,
	|	СобственныеКонтрагенты.Контрагент
	|ИЗ
	|	РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|ГДЕ
	|	СобственныеКонтрагенты.Организация В(&СписокОрганизаций)";
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	ТЗСоответствий = Запрос.Выполнить().Выгрузить();
	СписокСобственныхКонтрагентов = ТЗСоответствий.ВыгрузитьКолонку("Контрагент");
	
	//найдем договоры собственных контрагентов по асфальту, эмульсии, эмульсии (завод)
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец В(&СписокСобственныхКонтрагентов)
	|	И ДоговорыКонтрагентов.Наименование = &Наименование
	|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("СписокСобственныхКонтрагентов", СписокСобственныхКонтрагентов);
	Запрос.УстановитьПараметр("Наименование", "Асфальт");
	ДоговорыАсфальт = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец В(&СписокСобственныхКонтрагентов)
	|	И ДоговорыКонтрагентов.Наименование = &Наименование
	|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("СписокСобственныхКонтрагентов", СписокСобственныхКонтрагентов);
	Запрос.УстановитьПараметр("Наименование", "Эмульсия");
	ДоговорыЭмульсия = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец В(&СписокСобственныхКонтрагентов)
	|	И ДоговорыКонтрагентов.Наименование = &Наименование
	|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("СписокСобственныхКонтрагентов", СписокСобственныхКонтрагентов);
	Запрос.УстановитьПараметр("Наименование", "Эмульсия (завод)");
	ДоговорыЭмульсияЗавод = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ИтогТЗ = Новый ТаблицаЗначений;
	ИтогТЗ.Колонки.Добавить("Организация");
	ИтогТЗ.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число"));
	
	//найдем корректные остатки
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	|	НачальныеОстаткиПоОрганизациямСрезПоследних.Организация,
	|	НачальныеОстаткиПоОрганизациямСрезПоследних.Сумма
	|ИЗ
	|	РегистрСведений.НачальныеОстаткиПоОрганизациям.СрезПоследних(&ТекДата, Организация В (&Организация)) КАК НачальныеОстаткиПоОрганизациямСрезПоследних";
	
	Запрос.УстановитьПараметр("ТекДата", КонецДня(ОстаткиПо62счетуКорректныНаДату));
	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		НовСтр = ИтогТЗ.Добавить();
		НовСтр.Организация = Результат.Организация;
		НовСтр.Сумма = Результат.Сумма;
	КонецЦикла;
	
	ТДИстокТЗ = Новый ТаблицаЗначений;
	ТДИстокТЗ.Колонки.Добавить("Организация");
	ТДИстокТЗ.Колонки.Добавить("ТипНоменклатуры");
	ТДИстокТЗ.Колонки.Добавить("Сумма",Новый ОписаниеТипов("Число"));
	
	//найдем корректные остатки
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	|	НачальныеОстаткиПоОрганизациямСрезПоследних.ТипНоменклатуры,
	|	НачальныеОстаткиПоОрганизациямСрезПоследних.Сумма,
	|	НачальныеОстаткиПоОрганизациямСрезПоследних.Организация
	|ИЗ
	|	РегистрСведений.НачальныеОстаткиПоОрганизациям.СрезПоследних(&ТекДата, ) КАК НачальныеОстаткиПоОрганизациямСрезПоследних
	|ГДЕ
	|	НачальныеОстаткиПоОрганизациямСрезПоследних.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТекДата", КонецДня(ОстаткиПо62счетуКорректныНаДату));
	//Запрос.УстановитьПараметр("Организация", ТДАБЗ);
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		НовСтр = ТДИстокТЗ.Добавить();
		НовСтр.Организация = Результат.Организация;
		НовСтр.ТипНоменклатуры = Результат.ТипНоменклатуры;
		НовСтр.Сумма = Результат.Сумма;
	КонецЦикла;
	
	
	//найдем корректные остатки на дату формирования отчета
	Если НачДата > ОстаткиПо62счетуКорректныНаДату Тогда 
		//ищем отгрузки с ОстаткиПо62счетуКорректныНаДату по НачДата по ТД Исток
		Запрос = Новый Запрос;
		Запрос.Текст =   "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
		|	СУММА(ВЫБОР
		|			КОГДА Номенклатура1.ТипНоменклатуры = ЗНАЧЕНИЕ(перечисление.типыноменклатуры.Эмульсия)
		|				ТОГДА РеализацияТоваровУслугТовары.КоличествоФакт
		|			ИНАЧЕ ВЫБОР
		|					КОГДА РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0
		|							ИЛИ РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет
		|						ТОГДА РеализацияТоваровУслугТовары.КоличествоФакт
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК КупилиКоличество,
		|	ВЫБОР
		|		КОГДА Номенклатура1.ОсновнаяНоменклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА Номенклатура1.Ссылка
		|		ИНАЧЕ Номенклатура1.ОсновнаяНоменклатура
		|	КОНЕЦ КАК Номенклатура,
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика
		|ПОМЕСТИТЬ Врем
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура1
		|		ПО РеализацияТоваровУслугТовары.Номенклатура = Номенклатура1.Ссылка
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0
		|			ИЛИ РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет)
		|	И РеализацияТоваровУслугТовары.Ссылка.Организация В(&Организация)
		|	И ( (РеализацияТоваровУслугТовары.Ссылка.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|				И РеализацияТоваровУслугТовары.Ссылка.Организация = &АБЗСВ)
		|			ИЛИ (РеализацияТоваровУслугТовары.Ссылка.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|				И РеализацияТоваровУслугТовары.Ссылка.Организация = &ИПВоскр)
		|			ИЛИ (РеализацияТоваровУслугТовары.Ссылка.Организация <> &АБЗСВ
		|				И РеализацияТоваровУслугТовары.Ссылка.Организация <> &ИПВоскр))
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугТовары.Ссылка.Организация,
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ),
		|	ВЫБОР
		|		КОГДА Номенклатура1.ОсновнаяНоменклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА Номенклатура1.Ссылка
		|		ИНАЧЕ Номенклатура1.ОсновнаяНоменклатура
		|	КОНЕЦ,
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Врем.Дата КАК Дата,
		|	Врем.Организация КАК Организация,
		|	Врем.КупилиКоличество КАК КупилиКоличество,
		|	Врем.Номенклатура КАК Номенклатура,
		|	Врем.ЦенаПоставщика КАК ЦенаПоставщика
		|ИЗ
		|	Врем КАК Врем
		|ГДЕ
		|	Врем.КупилиКоличество > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Дата,
		|	Номенклатура";
		
		Запрос.УстановитьПараметр("НачДата", КонецДня(ОстаткиПо62счетуКорректныНаДату));
		Запрос.УстановитьПараметр("КонДата", КонецДня(НачалоДня(НачДата)-1));
		Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
		Запрос.УстановитьПараметр("АБЗСВ", АБЗСВ);
		Запрос.УстановитьПараметр("ИПВоскр", Воскресенский);
		
		ДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		Пока ДетальныеЗаписи.Следующий() Цикл 
			ДатаПолученияЦены = ДетальныеЗаписи.Дата;
			фНоменклатура = ДетальныеЗаписи.Номенклатура;
			Цена = ДетальныеЗаписи.ЦенаПоставщика;
			Если Цена = 0 Тогда 
				Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
				Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Стоимость для учр."),фНоменклатура)).Цена;
				Если Цена = 0 Тогда 
					Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"),фНоменклатура)).Цена;
				КонецЕсли;
			КонецЕсли;
			КупилиСумма =  Цена*ДетальныеЗаписи.КупилиКоличество;
			
			//Если Найти(фНоменклатура.Наименование,"Услуги гудронатора")> 0 Тогда 
			//	фТипНоменклатуры = Перечисления.ТипыНоменклатуры.Техника
			//Иначе 
			фТипНоменклатуры = фНоменклатура.ТипНоменклатуры;
			//КонецЕсли;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("Организация",ДетальныеЗаписи.Организация);
			ПараметрыОтбора.Вставить("ТипНоменклатуры",фТипНоменклатуры);
			
			НайденныеСтроки = ТДИстокТЗ.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда 
				ТекСтрТЗ = ТДИстокТЗ.Добавить();
				ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
				ТекСтрТЗ.Сумма = - КупилиСумма;
			Иначе 
				Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
					ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - КупилиСумма;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
	//ищем оплаты с ОстаткиПо62счетуКорректныНаДату по   ТекущаяДата()
	//асфальт ручная операция орг АБЗ-СВ контрагент ТД Исток Дт000 Кт 62
	// эбк завод - поступление на р/с орг АБЗИсток, контрагент ТД Исток Дт51 Кт62
	// эбк -  поступление на р/с орг Корп ЭДС, контрагент ТД Исток Дт51 Кт62
	// Техника - поступление по кассе орг АБЗ-СВ контрагент ТД Исток Дт50 Кт62
	
	//СтройДор - ручная операция АБЗ-СВ контрагент Дт000 Кт62
	
	//Новая схема учета поступлений оплат по типам номенклатуры по всем организациям:
	//Асфальт - 		 орг АБЗ-Исток  Дт51  Кт62 (субконто контрагент = собственный контрагент субконто договор = асфальт)
	//Эмульсия - 		 орг АБЗ-СВ     Дт000 Кт62 (субконто контрагент = собственный контрагент, субконто договор = эмульсия)
	//Эмульсия (завод) - орг АБЗ-СВ 	Дт000 Кт62 (субконто контрагент = собственный контрагент, субконто договор = эмульсия завод)
	// Техника - только по ТД АБЗ-ИСток - поступление по кассе орг АБЗ-СВ контрагент ТД Исток Дт50 Кт62
	
	//	ТДИстокКонтрагент = Справочники.Контрагенты.НайтиПоНаименованию("ТД Исток");
	//поступления за асфальт
	Запрос = Новый Запрос;
	Запрос.Текст =      "ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Поступление,
	//	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт - ХозрасчетныйОбороты.СуммаОборотДт) КАК Поступление,
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&Сч62),
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&Контрагенты),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|		ПО ХозрасчетныйОбороты.Субконто1 = СобственныеКонтрагенты.Контрагент
	|ГДЕ
	|	ХозрасчетныйОбороты.Субконто2 В(&ДоговорыАсфальт)
	| И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация";
	
	Запрос.УстановитьПараметр("НачДата", НачалоДня(КонецДня(ОстаткиПо62счетуКорректныНаДату)+1));
	Запрос.УстановитьПараметр("КонДата", КонецДня(ТекущаяДата())+1);
	Запрос.УстановитьПараметр("Организация", АБЗИсток);
	Запрос.УстановитьПараметр("Контрагенты", СписокСобственныхКонтрагентов);
	Запрос.УстановитьПараметр("ДоговорыАсфальт", ДоговорыАсфальт);
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	
	ДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ДетальныеЗаписи.Следующий() Цикл 
		фТипНоменклатуры = Перечисления.ТипыНоменклатуры.Асфальт;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация",ДетальныеЗаписи.Организация);
		ПараметрыОтбора.Вставить("ТипНоменклатуры",фТипНоменклатуры);
		
		НайденныеСтроки = ТДИстокТЗ.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда 
			ТекСтрТЗ = ТДИстокТЗ.Добавить();
			ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
			ТекСтрТЗ.Сумма = ДетальныеЗаписи.Поступление;
		Иначе 
			Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
				ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма + ДетальныеЗаписи.Поступление;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	//поступления за эмульсию
	
	Запрос = Новый Запрос;
	Запрос.Текст =      "ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Поступление,
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&Сч62),
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&Контрагенты),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|		ПО ХозрасчетныйОбороты.Субконто1 = СобственныеКонтрагенты.Контрагент
	|ГДЕ
	|	ХозрасчетныйОбороты.Субконто2 В(&ДоговорыАсфальт)
	|И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация";
	
	Запрос.УстановитьПараметр("НачДата", НачалоДня(КонецДня(ОстаткиПо62счетуКорректныНаДату)+1));
	Запрос.УстановитьПараметр("КонДата", КонецДня(ТекущаяДата())+1);
	Запрос.УстановитьПараметр("Организация", АБЗСВ);
	Запрос.УстановитьПараметр("Контрагенты", СписокСобственныхКонтрагентов);
	Запрос.УстановитьПараметр("ДоговорыАсфальт", ДоговорыЭмульсия);
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	
	ДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ДетальныеЗаписи.Следующий() Цикл 
		фТипНоменклатуры = Перечисления.ТипыНоменклатуры.Эмульсия;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация",ДетальныеЗаписи.Организация);
		ПараметрыОтбора.Вставить("ТипНоменклатуры",фТипНоменклатуры);
		
		НайденныеСтроки = ТДИстокТЗ.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда 
			ТекСтрТЗ = ТДИстокТЗ.Добавить();
			ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
			ТекСтрТЗ.Сумма = ДетальныеЗаписи.Поступление;
		Иначе 
			Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
				ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма + ДетальныеЗаписи.Поступление;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	//поступления за эмульсию (завод)
	Запрос = Новый Запрос;
	Запрос.Текст =      "ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Поступление,
	//	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт - ХозрасчетныйОбороты.СуммаОборотДт) КАК Поступление,
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&Сч62),
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&Контрагенты),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|		ПО ХозрасчетныйОбороты.Субконто1 = СобственныеКонтрагенты.Контрагент
	|ГДЕ
	|	ХозрасчетныйОбороты.Субконто2 В(&ДоговорыАсфальт)
	|И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация";
	
	Запрос.УстановитьПараметр("НачДата", НачалоДня(КонецДня(ОстаткиПо62счетуКорректныНаДату)+1));
	Запрос.УстановитьПараметр("КонДата", КонецДня(ТекущаяДата())+1);
	Запрос.УстановитьПараметр("Организация", АБЗСВ);
	Запрос.УстановитьПараметр("Контрагенты", СписокСобственныхКонтрагентов);
	Запрос.УстановитьПараметр("ДоговорыАсфальт", ДоговорыЭмульсияЗавод);
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	
	ДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ДетальныеЗаписи.Следующий() Цикл 
		фТипНоменклатуры = Перечисления.ТипыНоменклатуры.ЭмульсияЗавод;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация",ДетальныеЗаписи.Организация);
		ПараметрыОтбора.Вставить("ТипНоменклатуры",фТипНоменклатуры);
		
		НайденныеСтроки = ТДИстокТЗ.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда 
			ТекСтрТЗ = ТДИстокТЗ.Добавить();
			ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
			ТекСтрТЗ.Сумма = ДетальныеЗаписи.Поступление;
		Иначе 
			Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
				ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма + ДетальныеЗаписи.Поступление;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	// АБЗ-СВ и ИП Воскресенский платят за эмульсию на АБЗ-Исток
	АБЗСВиИПВоскрКонтр = Новый Массив;
	Для Каждого Стр Из ТЗСоответствий Цикл 
		Если Найти(Стр.Организация.Наименование,"АБЗ-СВ") > 0 ИЛИ Найти(Стр.Организация.Наименование,"ИП Воскресенский") > 0 Тогда 
			АБЗСВиИПВоскрКонтр.Добавить(стр.Контрагент);
		КонецЕсли;
	КонецЦикла;
	
	
	//поступления за эмульсию АБЗ-СВ и ИП Воскресенский
	
	Запрос = Новый Запрос;
	Запрос.Текст =      "ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Поступление,
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&Сч62),
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&Контрагенты),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|		ПО ХозрасчетныйОбороты.Субконто1 = СобственныеКонтрагенты.Контрагент
	|ГДЕ
	|	ХозрасчетныйОбороты.Субконто2 В(&ДоговорыАсфальт)
	|И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация";
	
	Запрос.УстановитьПараметр("НачДата", НачалоДня(КонецДня(ОстаткиПо62счетуКорректныНаДату)+1));
	Запрос.УстановитьПараметр("КонДата", КонецДня(ТекущаяДата())+1);
	Запрос.УстановитьПараметр("Организация", АБЗИсток);
	Запрос.УстановитьПараметр("Контрагенты", АБЗСВиИПВоскрКонтр);
	Запрос.УстановитьПараметр("ДоговорыАсфальт", ДоговорыЭмульсия);
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	
	ДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ДетальныеЗаписи.Следующий() Цикл 
		фТипНоменклатуры = Перечисления.ТипыНоменклатуры.Эмульсия;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация",ДетальныеЗаписи.Организация);
		ПараметрыОтбора.Вставить("ТипНоменклатуры",фТипНоменклатуры);
		
		НайденныеСтроки = ТДИстокТЗ.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда 
			ТекСтрТЗ = ТДИстокТЗ.Добавить();
			ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
			ТекСтрТЗ.Сумма = ДетальныеЗаписи.Поступление;
		Иначе 
			Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
				ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма + ДетальныеЗаписи.Поступление;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	//поступления за эмульсию (завод) АБЗ-СВ и ИП Воскресенский
	Запрос = Новый Запрос;
	Запрос.Текст =      "ВЫБРАТЬ
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК Поступление,
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Авто,
	|			Счет В ИЕРАРХИИ (&Сч62),
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&Контрагенты),
	|			,
	|			) КАК ХозрасчетныйОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|		ПО ХозрасчетныйОбороты.Субконто1 = СобственныеКонтрагенты.Контрагент
	|ГДЕ
	|	ХозрасчетныйОбороты.Субконто2 В(&ДоговорыАсфальт)
	|И НЕ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто2,
	|	СобственныеКонтрагенты.Организация";
	
	Запрос.УстановитьПараметр("НачДата", НачалоДня(КонецДня(ОстаткиПо62счетуКорректныНаДату)+1));
	Запрос.УстановитьПараметр("КонДата", КонецДня(ТекущаяДата())+1);
	Запрос.УстановитьПараметр("Организация", АБЗИсток);
	Запрос.УстановитьПараметр("Контрагенты", АБЗСВиИПВоскрКонтр);
	Запрос.УстановитьПараметр("ДоговорыАсфальт", ДоговорыЭмульсияЗавод);
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	
	ДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	Пока ДетальныеЗаписи.Следующий() Цикл 
		фТипНоменклатуры = Перечисления.ТипыНоменклатуры.ЭмульсияЗавод;
		
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Организация",ДетальныеЗаписи.Организация);
		ПараметрыОтбора.Вставить("ТипНоменклатуры",фТипНоменклатуры);
		
		НайденныеСтроки = ТДИстокТЗ.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда 
			ТекСтрТЗ = ТДИстокТЗ.Добавить();
			ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
			ТекСтрТЗ.Сумма = ДетальныеЗаписи.Поступление;
		Иначе 
			Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
				ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма + ДетальныеЗаписи.Поступление;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	//техника	
	//Запрос = Новый Запрос;
	//Запрос.Текст =   "ВЫБРАТЬ
	//|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт - ХозрасчетныйОбороты.СуммаОборотДт) КАК ПоступленияЭмульсия
	//|ИЗ
	//|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	//|			&НачДата,
	//|			&КонДата,
	//|			Авто,
	//|			Счет В ИЕРАРХИИ (&Сч62),
	//|			,
	//|			Организация = &Организация
	//|				И Субконто1 = &Контрагент,
	//|			,
	//|			) КАК ХозрасчетныйОбороты
	//|ГДЕ
	//|	(ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
	//|			ИЛИ ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер)";
	//Запрос.УстановитьПараметр("НачДата", НачалоДня(КонецДня(ОстаткиПо62счетуКорректныНаДату)+1));
	//Запрос.УстановитьПараметр("КонДата", КонецДня(ТекущаяДата())+1);
	//Запрос.УстановитьПараметр("Организация", АБЗСВ);
	//Запрос.УстановитьПараметр("Контрагент", ТДИстокКонтрагент);
	//Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	//
	//ДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	//Пока ДетальныеЗаписи.Следующий() Цикл 
	//	фТипНоменклатуры = Перечисления.ТипыНоменклатуры.Техника;
	//	ТекСтрТЗ = ТДИстокТЗ.Найти(фТипНоменклатуры,"ТипНоменклатуры");
	//	Если Строка(ТипЗнч(ДетальныеЗаписи.ПоступленияЭмульсия)) <> "Null" Тогда 
	//		Если ТекСтрТЗ <> Неопределено Тогда 
	//			ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма + ДетальныеЗаписи.ПоступленияЭмульсия;
	//		Иначе 
	//			ТекСтрТЗ = ТДИстокТЗ.Добавить();
	//			ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
	//			ТекСтрТЗ.Сумма = ДетальныеЗаписи.ПоступленияЭмульсия;
	//		КонецЕсли;	
	//	КонецЕсли;
	//КонецЦикла;
	
	ТДИстокТЗДляРасчета = Новый ТаблицаЗначений;
	ТДИстокТЗДляРасчета = ТДИстокТЗ.Скопировать();
	ИтДолг = 0;
	ИтРасчет = 0;
	
	ТЗИтогиПоОрганизациямРасчетыИДолги = Новый ТаблицаЗначений;
	ТЗИтогиПоОрганизациямРасчетыИДолги.Колонки.Добавить("Организация");
	ТЗИтогиПоОрганизациямРасчетыИДолги.Колонки.Добавить("Расчет");
	ТЗИтогиПоОрганизациямРасчетыИДолги.Колонки.Добавить("Долг");
	
	Для сч = 1 по 2 Цикл 
		Запрос = Новый Запрос;
		Запрос.Текст = "";
		
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
		|	СУММА(ВЫБОР
		|			КОГДА Номенклатура1.ТипНоменклатуры = ЗНАЧЕНИЕ(перечисление.типыноменклатуры.Эмульсия)
		|				ТОГДА РеализацияТоваровУслугТовары.КоличествоФакт
		|			ИНАЧЕ ВЫБОР
		|					КОГДА (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0 ИЛИ РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет)
		|						ТОГДА РеализацияТоваровУслугТовары.КоличествоФакт
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ) КАК КупилиКоличество,
		|	ВЫБОР
		|		КОГДА Номенклатура1.ОсновнаяНоменклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА Номенклатура1.Ссылка
		|		ИНАЧЕ Номенклатура1.ОсновнаяНоменклатура
		|	КОНЕЦ КАК Номенклатура,
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика
		|ПОМЕСТИТЬ Врем
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура1
		|		ПО РеализацияТоваровУслугТовары.Номенклатура = Номенклатура1.Ссылка
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0
		|			ИЛИ РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет)
		|	И РеализацияТоваровУслугТовары.Ссылка.Организация В(&Организация)
		|	И ( (РеализацияТоваровУслугТовары.Ссылка.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|				И РеализацияТоваровУслугТовары.Ссылка.Организация = &АБЗСВ)
		|			ИЛИ (РеализацияТоваровУслугТовары.Ссылка.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|				И РеализацияТоваровУслугТовары.Ссылка.Организация = &ИПВоскр)
		|			ИЛИ (РеализацияТоваровУслугТовары.Ссылка.Организация <> &АБЗСВ
		|				И РеализацияТоваровУслугТовары.Ссылка.Организация <> &ИПВоскр))
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугТовары.Ссылка.Организация,
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ),
		|	ВЫБОР
		|		КОГДА Номенклатура1.ОсновнаяНоменклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			ТОГДА Номенклатура1.Ссылка
		|		ИНАЧЕ Номенклатура1.ОсновнаяНоменклатура
		|	КОНЕЦ,
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Врем.Дата КАК Дата,
		|	Врем.Организация КАК Организация,
		|	Врем.КупилиКоличество КАК КупилиКоличество,
		|	Врем.Номенклатура КАК Номенклатура,
		|	Врем.ЦенаПоставщика КАК ЦенаПоставщика
		|ИЗ
		|	Врем КАК Врем
		|ГДЕ
		|	Врем.КупилиКоличество > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Дата,
		|	Номенклатура
		|ИТОГИ
		|	СУММА(КупилиКоличество)
		|ПО
		|	ОБЩИЕ,
		|	Организация";
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
		Запрос.УстановитьПараметр("АБЗСВ", АБЗСВ);
		Запрос.УстановитьПараметр("ИПВоскр", Воскресенский);
		
		Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Результат.Следующий() Цикл 
			Если сч = 2 тогда
				ИтогиОрганизаций.Свернуть("Организация","ИтКупилиСумма,КупилиКоличество,ИтВыставлено,ИтРазница");
				ОбластьМакетаИтогОбщий.Параметры.Заполнить(Результат);
				ОбластьМакетаИтогОбщий.Параметры.ИтКупилиСумма = ИтогиОрганизаций.Итог("ИтКупилиСумма");
				ОбластьМакетаИтогОбщий.Параметры.КупилиКоличество = ИтогиОрганизаций.Итог("КупилиКоличество");
				Если Пар = "Выставлено" Тогда 
					ОбластьМакетаИтогОбщий.Параметры.ИтВыставлено = ИтогиОрганизаций.Итог("ИтВыставлено");
					ОбластьМакетаИтогОбщий.Параметры.ИтРазница = ИтогиОрганизаций.Итог("ИтРазница");
				КонецЕсли;
				ОбластьМакетаИтогОбщий.Параметры.ИтРасчет = ИтРасчет;
				ОбластьМакетаИтогОбщий.Параметры.ИтДолг = ИтДолг;
				
				ТабДокумент.Вывести(ОбластьМакетаИтогОбщий,Результат.Уровень());
			КонецЕсли;
			
			Родители = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Родители.Следующий() Цикл 
				Если  сч = 2 Тогда 
					ОбластьМакетаИтог.Параметры.Заполнить(Родители);
					
					СтрокиИтогиОрганизаций = ИтогиОрганизаций.НайтиСтроки(Новый Структура("Организация",
					Родители.Организация));
					ОбластьМакетаИтог.Параметры.ИтКупилиСумма = СтрокиИтогиОрганизаций[0].ИтКупилиСумма;
					ОбластьМакетаИтог.Параметры.КупилиКоличество = СтрокиИтогиОрганизаций[0].КупилиКоличество;
					Если Пар = "Выставлено" Тогда 
						ОбластьМакетаИтог.Параметры.ИтВыставлено = СтрокиИтогиОрганизаций[0].ИтВыставлено;
						ОбластьМакетаИтог.Параметры.ИтРазница = СтрокиИтогиОрганизаций[0].ИтРазница;
					КонецЕсли;
					ТекСтрТЗ = ТЗИтогиПоОрганизациямРасчетыИДолги.Найти(Родители.Организация,"Организация");
					Если ТекСтрТЗ <> Неопределено Тогда 
						ОбластьМакетаИтог.Параметры.ИтРасчет = ТекСтрТЗ.Расчет;
						ОбластьМакетаИтог.Параметры.ИтДолг = ТекСтрТЗ.Долг;
					Иначе 
						ОбластьМакетаИтог.Параметры.ИтРасчет = 0;
						ОбластьМакетаИтог.Параметры.ИтДолг = 0;
					КонецЕсли;								
					ТабДокумент.Вывести(ОбластьМакетаИтог,Родители.Уровень());
				КонецЕсли;
				ДетальныеЗаписи = Родители.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ДетальныеЗаписи.Следующий() Цикл 
					ДатаПолученияЦены = ДетальныеЗаписи.Дата;
					фНоменклатура = ДетальныеЗаписи.Номенклатура;
					Цена = ДетальныеЗаписи.ЦенаПоставщика;
					Если Цена = 0 Тогда 
						Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
						Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Стоимость для учр."),фНоменклатура)).Цена;
						Если Цена = 0 Тогда 
							Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
							Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"),фНоменклатура)).Цена;
						КонецЕсли;
					КонецЕсли;
					КупилиСумма =  Цена*ДетальныеЗаписи.КупилиКоличество;
					Если сч = 2 Тогда 
						ОбластьМакетаСтрока.Параметры.Заполнить(ДетальныеЗаписи);
						ОбластьМакетаСтрока.Параметры["Цена"] = Цена;
						ОбластьМакетаСтрока.Параметры["КупилиСумма"] = КупилиСумма; 	
						ОбластьМакетаСтрока.Параметры["Долг"] = 0;
						ОбластьМакетаСтрока.Параметры["Расчет"] = 0;
						ОбластьМакетаСтрока.Параметры["Сальдо"] = 0;
						Если Пар = "Выставлено" Тогда 
							ОбластьМакетаСтрока.Параметры["Выставлено"] = 0;
							ОбластьМакетаСтрока.Параметры["Разница"] = 0;
						КонецЕсли;
						фНоменклатура = ДетальныеЗаписи.Номенклатура;
						
						//Если Найти(фНоменклатура.Наименование,"Услуги гудронатора")> 0 Тогда 
						//	фТипНоменклатуры = Перечисления.ТипыНоменклатуры.Техника
						//Иначе 
						фТипНоменклатуры = фНоменклатура.ТипНоменклатуры;
						//КонецЕсли;
						
						ПараметрыОтбора = Новый Структура;
						ПараметрыОтбора.Вставить("Организация",Родители.Организация);
						ПараметрыОтбора.Вставить("ТипНоменклатуры",фТипНоменклатуры);
						
						НайденныеСтроки = ТДИстокТЗ.НайтиСтроки(ПараметрыОтбора);
						Если НайденныеСтроки.Количество() = 0 Тогда 
							ТекСтрТЗ = ТДИстокТЗ.Добавить();
							ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
							ТекСтрТЗ.Сумма = -КупилиСумма;
							ОбластьМакетаСтрока.Параметры["Долг"] = КупилиСумма;
						Иначе 
							Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
								Если ТекСтрТЗ.Сумма >=0 Тогда 
									Если ТекСтрТЗ.Сумма <= КупилиСумма Тогда 
										ОбластьМакетаСтрока.Параметры["Долг"] = КупилиСумма - ТекСтрТЗ.Сумма;
										ОбластьМакетаСтрока.Параметры["Расчет"] =  ТекСтрТЗ.Сумма;
									Иначе 
										ОбластьМакетаСтрока.Параметры["Долг"] = 0;
										ОбластьМакетаСтрока.Параметры["Расчет"] = КупилиСумма;
									КонецЕсли;
								Иначе
									ОбластьМакетаСтрока.Параметры["Долг"] = КупилиСумма;
								КонецЕсли;
								ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - КупилиСумма;
							КонецЦикла;
						КонецЕсли;
						ОбластьМакетаСтрока.Параметры["Сальдо"] = ТекСтрТЗ.Сумма;
						Если Пар = "Выставлено" И ДетальныеЗаписи.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Асфальт Тогда 
							ОбластьМакетаСтрока.Параметры["Выставлено"] = (Цена+150)*ДетальныеЗаписи.КупилиКоличество;
							ОбластьМакетаСтрока.Параметры["Разница"] = (Цена+150)*ДетальныеЗаписи.КупилиКоличество - КупилиСумма;
						КонецЕсли;
						Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда 
							Если  ДетальныеЗаписи.Номенклатура.ТипНоменклатуры = ТипНоменклатуры Тогда 
								ТабДокумент.Вывести(ОбластьМакетаСтрока,ДетальныеЗаписи.Уровень());
							КонецЕсли;
						Иначе 
							ТабДокумент.Вывести(ОбластьМакетаСтрока,ДетальныеЗаписи.Уровень());
						КонецЕсли;
					Иначе 
						
						фНоменклатура = ДетальныеЗаписи.Номенклатура;
						//Если Найти(фНоменклатура.Наименование,"Услуги гудронатора")> 0 Тогда 
						//	фТипНоменклатуры = Перечисления.ТипыНоменклатуры.Техника
						//Иначе 
						фТипНоменклатуры = фНоменклатура.ТипНоменклатуры;
						//КонецЕсли;
						
						Хорошо = Ложь;
						Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда 
							Если  ДетальныеЗаписи.Номенклатура.ТипНоменклатуры = ТипНоменклатуры Тогда 
								Хорошо = Истина;	
							КонецЕсли;
						Иначе 
							Хорошо = Истина;
						КонецЕсли;
						
						Если Хорошо Тогда 
							
							ПараметрыОтбора = Новый Структура;
							ПараметрыОтбора.Вставить("Организация",Родители.Организация);
							ПараметрыОтбора.Вставить("ТипНоменклатуры",фТипНоменклатуры);
							
							Расчет = 0;
							Долг = 0;
							
							НайденныеСтроки = ТДИстокТЗДляРасчета.НайтиСтроки(ПараметрыОтбора);
							Если НайденныеСтроки.Количество() = 0 Тогда 
								ТекСтрТЗ = ТДИстокТЗДляРасчета.Добавить();
								ТекСтрТЗ.ТипНоменклатуры = фТипНоменклатуры;
								ТекСтрТЗ.Сумма = -КупилиСумма;
								Долг = КупилиСумма;
							Иначе 
								Для Каждого ТекСтрТЗ Из НайденныеСтроки Цикл 
									Если ТекСтрТЗ.Сумма >=0 Тогда 
										Если ТекСтрТЗ.Сумма <= КупилиСумма Тогда 
											Долг = КупилиСумма - ТекСтрТЗ.Сумма;
											Расчет =  ТекСтрТЗ.Сумма;
										Иначе 
											Долг = 0;
											Расчет = КупилиСумма;
										КонецЕсли;
									Иначе
										Долг = КупилиСумма;
									КонецЕсли;
									ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - КупилиСумма;
								КонецЦикла;
							КонецЕсли;
							
							ИтРасчет = ИтРасчет + Расчет;
							ИтДолг = ИтДолг + Долг;
							
							ТекСтрТЗ = ТЗИтогиПоОрганизациямРасчетыИДолги.Найти(Родители.Организация,"Организация");
							Если ТекСтрТЗ <> Неопределено Тогда 
								ТекСтрТЗ.Расчет = ТекСтрТЗ.Расчет + Расчет;
								ТекСтрТЗ.Долг = ТекСтрТЗ.Долг + Долг;
							Иначе 
								ТекСтрТЗ = ТЗИтогиПоОрганизациямРасчетыИДолги.Добавить();
								ТекСтрТЗ.Организация = Родители.Организация;
								ТекСтрТЗ.Расчет = Расчет;
								ТекСтрТЗ.Долг = Долг;
							КонецЕсли;	
						КонецЕсли;
						Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда 
							Если Найти(ДетальныеЗаписи.Номенклатура.Наименование,"Услуги гудронатора")> 0
								И ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Эмульсия  Тогда
								НоваяСтрокаТЗ = ИтогиОрганизаций.Добавить();  
								НоваяСтрокаТЗ.Организация = ДетальныеЗаписи.Организация;
								НоваяСтрокаТЗ.ИтКупилиСумма = КупилиСумма;  
								НоваяСтрокаТЗ.КупилиКоличество = ДетальныеЗаписи.КупилиКоличество;
								//
								//НоваяСтрокаТЗ.ИтВыставлено = (Цена+150)*ДетальныеЗаписи.КупилиКоличество;;
								//НоваяСтрокаТЗ.ИтРазница = (Цена+150)*ДетальныеЗаписи.КупилиКоличество - КупилиСумма;
							КонецЕсли;
							
							Если (ДетальныеЗаписи.Номенклатура.ТипНоменклатуры = ТипНоменклатуры) И 
								Найти(ДетальныеЗаписи.Номенклатура.Наименование,"Услуги гудронатора") = 0 Тогда 
								
								НоваяСтрокаТЗ = ИтогиОрганизаций.Добавить();  
								НоваяСтрокаТЗ.Организация = ДетальныеЗаписи.Организация;
								НоваяСтрокаТЗ.ИтКупилиСумма = КупилиСумма;  
								НоваяСтрокаТЗ.КупилиКоличество = ДетальныеЗаписи.КупилиКоличество;
								Если ДетальныеЗаписи.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Асфальт Тогда 
									НоваяСтрокаТЗ.ИтВыставлено = (Цена+150)*ДетальныеЗаписи.КупилиКоличество;;
									НоваяСтрокаТЗ.ИтРазница = (Цена+150)*ДетальныеЗаписи.КупилиКоличество - КупилиСумма;
								КонецЕсли;
							КонецЕсли;
						Иначе 
							НоваяСтрокаТЗ = ИтогиОрганизаций.Добавить();  
							НоваяСтрокаТЗ.Организация = ДетальныеЗаписи.Организация;
							НоваяСтрокаТЗ.ИтКупилиСумма = КупилиСумма;
							НоваяСтрокаТЗ.КупилиКоличество = ДетальныеЗаписи.КупилиКоличество;
							Если  ДетальныеЗаписи.Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Асфальт Тогда 
								НоваяСтрокаТЗ.ИтВыставлено = (Цена+150)*ДетальныеЗаписи.КупилиКоличество;
								НоваяСтрокаТЗ.ИтРазница = (Цена+150)*ДетальныеЗаписи.КупилиКоличество - КупилиСумма;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;	
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;	
	
	ТабДокумент.ЗакончитьАвтогруппировкуСтрок();
	
	ТабДокумент.ФиксацияСверху = ТабДокумент.Области.Шапка.Низ;
	ТабДокумент.ПоказатьУровеньГруппировокСтрок(1);
	ТабДокумент.ТолькоПросмотр = Истина;
	ТабДокумент.Показать("Отчет по учредителям"); 
КонецПроцедуры

Процедура ПриОткрытии()
	// ТабличноеПоле1.Очистить();
	// ТабличноеПоле1.Колонки.Добавить("Флаг",Новый ОписаниеТипов("Булево"));
	// ТабличноеПоле1.Колонки.Добавить("Организация");
	////ТабличноеПоле1.Колонки["Флаг"].ДанныеФлажка = "Флаг";
	////ТабличноеПоле1.Колонки["Флаг"].Данные=""; 
	// //ТабличноеПоле1.Колонки["Флаг"].РежимРедактирования = РежимРедактированияКолонки.Непосредственно;        
	
	//ТабличноеПоле1.Колонки.Флаг.Ширина = 1;
	
	//Запрос = Новый Запрос;
	//	
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	// |	Организации.Ссылка
	// |ИЗ
	// |	Справочник.Организации КАК Организации";
	// 
	// Результат = Запрос.Выполнить().Выбрать();
	// Пока Результат.Следующий() Цикл 
	//	 
	//		//Объем = Результат.Объем;
	//	КонецЦикла;
	
	Если ЭлементыФормы.ТабличноеПоле1.Значение.Количество() = 0 Тогда 
		ДействияФормыОбновитьСписокОрганизаций("");
	КонецЕсли;
	Если ЭлементыФормы.ТабличноеПоле1.Колонки.Найти("Пометка2")=Неопределено Тогда
		ЭлементыФормы.ТабличноеПоле1.СоздатьКолонки();
		ЭлементыФормы.ТабличноеПоле1.Колонки["Пометка"].ДанныеФлажка="Пометка";
		ЭлементыФормы.ТабличноеПоле1.Колонки["Пометка"].Видимость=Истина;
		ЭлементыФормы.ТабличноеПоле1.Колонки["Пометка"].Ширина=3;
		ЭлементыФормы.ТабличноеПоле1.Колонки["Пометка"].Данные="";
	КонецЕсли;
	ЭлементыФормы.ТабличноеПоле1.Колонки["Пометка"].РежимРедактирования = 
	РежимРедактированияКолонки.Непосредственно;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыОбъемыОтгрузок(Кнопка)
	// Вставить содержимое обработчика.
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет1");
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка|Столбец");
	ОбластьМакетаСтрока0           = Макет.ПолучитьОбласть("Строка|Столбец0");
	
	ОбластьМакетаШапка.Параметры.КонДата = Формат(КонДата,"ДФ=dd.MM.yyyy" );
	
	ОбластьМакетаШапка.Параметры.Месяц = Формат(КонДата,"ДФ=ММММ") +" "+ СтрЗаменить(Год(КонДата),Символы.НПП,"");
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	ТабДокумент.Вывести(ОбластьМакетаСтрока0);
	
	ДатаОсмотра = Дата("2011"+Формат(КонДата,"ДФ=ММ")+"01");
	
	Пока ДатаОсмотра <> НачалоМесяца(КонДата) Цикл 
		Объем = 0;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(ОбъемыПроизводстваПомесячно.Количество, 0) КАК Объем
		|ИЗ
		|	РегистрСведений.ОбъемыПроизводстваПомесячно КАК ОбъемыПроизводстваПомесячно
		|ГДЕ
		|	ОбъемыПроизводстваПомесячно.Период = &ДатаОсмотра";
		Запрос.УстановитьПараметр("ДатаОсмотра", ДатаОсмотра);
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			Объем = Результат.Объем;
		КонецЦикла;
		
		
		ОбластьМакетаСтрока.Параметры.Год = СтрЗаменить(Год(ДатаОсмотра),Символы.НПП,"");
		ОбластьМакетаСтрока.Параметры.Объем = Объем;
		ТабДокумент.Присоединить(ОбластьМакетаСтрока);
		ДатаОсмотра = ДобавитьМесяц(ДатаОсмотра,12);
		
	КонецЦикла;
	
	Объем = 0;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(РеализацияТоваровУслугТовары.КоличествоФакт) КАК Объем
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0
	|	И РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(перечисление.типыноменклатуры.асфальт)
	|	И РеализацияТоваровУслугТовары.Ссылка.Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("НачДата", НачалоМесяца(КонДата));
	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		Объем = Результат.Объем;
	КонецЦикла;
	
	ОбластьМакетаСтрока.Параметры.Год = СтрЗаменить(Год(КонДата),Символы.НПП,"");
	ОбластьМакетаСтрока.Параметры.Объем = Объем;
	ТабДокумент.Присоединить(ОбластьМакетаСтрока);
	
	ТабДокумент.ТолькоПросмотр = Истина;
	ТабДокумент.Показать("Объемы отгрузок"); 
	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыРасшивровкаОбъемыОтгрузок(Кнопка)
	// Вставить содержимое обработчика.
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Расшифровка");
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	
	
	ОбластьМакетаШапка.Параметры.Месяц = Формат(КонДата,"ДФ=ММММ") +" "+ СтрЗаменить(Год(КонДата),Символы.НПП,"");
	ТабДокумент.Вывести(ОбластьМакетаШапка);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.Ссылка.Дата,
	|	РеализацияТоваровУслугТовары.Ссылка.Организация,
	|	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.КоличествоФакт КАК Объем,
	|	РеализацияТоваровУслугТовары.Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0
	|	И РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(перечисление.типыноменклатуры.асфальт)";
	
	Запрос.УстановитьПараметр("НачДата", НачалоМесяца(КонДата));
	Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		ОбластьМакетаСтрока.Параметры.Заполнить(Результат);
		
		ТабДокумент.Вывести(ОбластьМакетаСтрока);
	КонецЦикла;
	
	
	ТабДокумент.ТолькоПросмотр = Истина;
	ТабДокумент.Показать("Объемы отгрузок"); 
	
	
	
КонецПроцедуры

Процедура ОтобразитьТЗ(ЭлементыФормыТабличноеПоле,ТЗ) экспорт 
	
	// устанавливаем указатель на таблицу значений
	ЭлементыФормыТабличноеПоле.Загрузить(ТЗ);
	
	// создаем колонки - данные берем из заголовков ТЗ. 
	ЭлементыФормыТабличноеПоле.СоздатьКолонки();
	
	// данные для отображения флажка берем из колонки "Флаг"
	ЭлементыФормыТабличноеПоле.Колонки["Флаг"].ДанныеФлажка = "Флаг";
	
	// Чтобы отображался только флажок (checkbox)  
	// и не отображались данные типа "Да" или "Нет"
	ЭлементыФормыТабличноеПоле.Колонки["Флаг"].Данные="";     
	
	// Режим редактирования клонки "Непосредственно" - чтобы пользователь мог менять 
	// значение флажка сразу, а не нажимая лишний раз на ячейку для 
	// входа в режим редактирования.
	// другие значения:
	// Вход - Для начала редактирования необходимо нажать клавишу 
	// Enter или дважды щелкнуть мышью. 
	// ВходПриВводе - Редактирование начинается при начале ввода символов. 
	// Непосредственно - Редактирование начинается при активизации колонки. 
	ЭлементыФормыТабличноеПоле.Колонки["Флаг"].РежимРедактирования = 
	РежимРедактированияКолонки.Непосредственно;        
	
	// Ширина элемента
	ЭлементыФормыТабличноеПоле.Колонки.Флаг.Ширина = 1;
	
КонецПроцедуры


Процедура ДействияФормыОбновитьСписокОрганизаций(Кнопка)
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	Организации.Ссылка
	//|ИЗ
	//|	Справочник.Организации КАК Организации
	//|ГДЕ
	//|	Организации.ИностраннаяОрганизация = ЛОЖЬ";
	//
	//
	////ТП = Новый ТабличноеПоле;
	//ТабЗнач = Новый ТаблицаЗначений;
	//ТабЗнач.Колонки.Добавить("Пометка",Новый ОписаниеТипов("Булево"));
	//ТабЗнач.Колонки.Добавить("Организация");    
	//
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	НоваяСтрока= ТабЗнач.Добавить();
	//	НоваяСтрока.Пометка = Истина;
	//	НоваяСтрока.Организация = Выборка.Ссылка;
	//КонецЦикла;
	//
	//ЭлементыФормы.ТабличноеПоле1.Значение=ТабЗнач.Скопировать();
	
	ТабЗнач = Новый ТаблицаЗначений;
	ТабЗнач.Колонки.Добавить("Пометка",Новый ОписаниеТипов("Булево"));
	ТабЗнач.Колонки.Добавить("Организация");    
	
	СтройДорЕкб = Справочники.Организации.НайтиПоНаименованию("ООО ""СтройДорЕкб""");
	ТДАБЗ = Справочники.Организации.НайтиПоНаименованию("ООО ""ТД""АБЗ Исток""");
	АБЗСВ = Справочники.Организации.НайтиПоНаименованию("ООО ""АБЗ-СВ""");
	Воскресенский = Справочники.Организации.НайтиПоНаименованию("ИП Воскресенский");
	
	СписокОрганизаций = Новый Массив;
	СписокОрганизаций.Добавить(СтройДорЕкб);
	СписокОрганизаций.Добавить(ТДАБЗ);
	СписокОрганизаций.Добавить(АБЗСВ);
	СписокОрганизаций.Добавить(Воскресенский);
	
	Для Каждого Выборка Из СписокОрганизаций Цикл 
		НоваяСтрока= ТабЗнач.Добавить();
		НоваяСтрока.Пометка = Истина;
		НоваяСтрока.Организация = Выборка;
	КонецЦикла;
	
	ЭлементыФормы.ТабличноеПоле1.Значение=ТабЗнач.Скопировать();
КонецПроцедуры


Процедура ОсновныеДействияФормыСформироватьВыставлено(Кнопка)
	Сформировать("Выставлено");
КонецПроцедуры


Процедура ОсновныеДействияФормыОсновныеДействияФормыСформировать(Кнопка)
	Сформировать();
КонецПроцедуры

