Процедура КнопкаСформироватьНажатие(Кнопка)
	ЭлементыФормы.ПолеТабличногоДокумента1.Очистить();
	Макет = ПолучитьМакет("Макет");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры["НачПериода"] = Формат(НачПериода, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры["КонПериода"] = Формат(КонПериода,"ДФ=dd.MM.yyyy");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета);
	
	РезервСуммаНачальныйОстаток = 0;
	РезервСуммаПриход = 0;
	РезервСуммаРасход = 0;
	РезервСуммаКонечныйОстаток = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст =	"ВЫБРАТЬ
	              	|	РезервОстаткиИОбороты.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
	              	|	РезервОстаткиИОбороты.СуммаПриход КАК СуммаПриход,
	              	|	РезервОстаткиИОбороты.СуммаРасход КАК СуммаРасход,
	              	|	РезервОстаткиИОбороты.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток
	              	|ИЗ
	              	|	РегистрНакопления.Резерв.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, , ) КАК РезервОстаткиИОбороты
	              	|ИТОГИ
	              	|	СУММА(СуммаНачальныйОстаток),
	              	|	СУММА(СуммаПриход),
	              	|	СУММА(СуммаРасход),
	              	|	СУММА(СуммаКонечныйОстаток)
	              	|ПО
	              	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("ДатаНачала", Новый Граница(НачалоДня(НачПериода),ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(КонПериода),ВидГраницы.Включая));
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		РезервСуммаНачальныйОстаток = Результат.СуммаНачальныйОстаток;
		РезервСуммаПриход = Результат.СуммаПриход;
		РезервСуммаРасход = Результат.СуммаРасход;
		РезервСуммаКонечныйОстаток = Результат.СуммаКонечныйОстаток;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстаткиИОбороты.Организация,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК НачальныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ИтПриход,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК ИтРасход,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК КонечныйОстаток,
	|   ""Банк + Касса"" ВидИтога
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, , Счет В (&Счет), , ) КАК ХозрасчетныйОстаткиИОбороты";
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		Запрос.Текст = Запрос.Текст+ " 
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+"
	|ИТОГИ
	|СУММА(НачальныйОстаток),
	|СУММА(ИтПриход),
	|СУММА(ИтРасход),
	|СУММА(КонечныйОстаток),
	|МАКСИМУМ(ВидИтога)
	|ПО
	|ОБЩИЕ,
	|Организация";
	
	Запрос.УстановитьПараметр("ДатаНачала", Новый Граница(НачалоДня(НачПериода),ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(КонПериода),ВидГраницы.Включая));
	Счета = Новый Массив;
	Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("51"));
	Счета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("50.01"));
	Запрос.УстановитьПараметр("Счет", Счета);
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		Если НЕ ЗначениеЗаполнено(Организация) Тогда  
			ОбластьМакета = Макет.ПолучитьОбласть("Строка0");
			ОбластьМакета.Параметры.Заполнить(Результат);
			
			ОбластьМакета.Параметры["НачальныйОстаток"] = РезервСуммаНачальныйОстаток + Результат.НачальныйОстаток;
			ОбластьМакета.Параметры["ИтПриход"] = РезервСуммаПриход + Результат.ИтПриход;
			ОбластьМакета.Параметры["ИтРасход"] = РезервСуммаРасход + Результат.ИтРасход;
			ОбластьМакета.Параметры["КонечныйОстаток"] = РезервСуммаКонечныйОстаток + Результат.КонечныйОстаток;
			ОбластьМакета.Параметры["ВидИтога"] = "Банк + Касса + Резерв";
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат.Уровень());
		Иначе
			Результат2 = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Результат2.Следующий() Цикл 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
				ОбластьМакета.Параметры.Заполнить(Результат2);
				ОбластьМакета.Параметры["НачальныйОстаток"] = РезервСуммаНачальныйОстаток + Результат2.НачальныйОстаток;
				ОбластьМакета.Параметры["ИтПриход"] = РезервСуммаПриход + Результат2.ИтПриход;
				ОбластьМакета.Параметры["ИтРасход"] = РезервСуммаРасход + Результат2.ИтРасход;
				ОбластьМакета.Параметры["КонечныйОстаток"] = РезервСуммаКонечныйОстаток + Результат2.КонечныйОстаток;
				ОбластьМакета.Параметры["ВидИтога"] = "Банк + Касса + Резерв";
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат2.Уровень());
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;  //банк
    ЭлементыФормы.ПолеТабличногоДокумента1.НачатьАвтогруппировкуСтрок();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстаткиИОбороты.Организация,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК НачальныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ИтПриход,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК ИтРасход,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК КонечныйОстаток,
	|   ""Банк"" ВидИтога
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, , Счет = &Счет, , ) КАК ХозрасчетныйОстаткиИОбороты";
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		Запрос.Текст = Запрос.Текст+ " 
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+"
	|ИТОГИ
	|СУММА(НачальныйОстаток),
	|СУММА(ИтПриход),
	|СУММА(ИтРасход),
	|СУММА(КонечныйОстаток),
	|МАКСИМУМ(ВидИтога)
	|ПО
	|ОБЩИЕ,
	|Организация";
	
	Запрос.УстановитьПараметр("ДатаНачала", Новый Граница(НачалоДня(НачПериода),ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(КонПериода),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("51"));
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		Если НЕ ЗначениеЗаполнено(Организация) Тогда  
			ОбластьМакета = Макет.ПолучитьОбласть("Строка0");
			ОбластьМакета.Параметры.Заполнить(Результат);
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат.Уровень()+1);
		КонецЕсли;
		
		Результат2 = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Результат2.Следующий() Цикл 
			ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
			ОбластьМакета.Параметры.Заполнить(Результат2);
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат2.Уровень()+1);
		КонецЦикла;
	КонецЦикла;
	
	Запрос = Новый Запрос; 
	Запрос.Текст =   "ВЫБРАТЬ РАзрешенные
	|ХозрасчетныйДвиженияССубконто.Регистратор,
	|ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|ХозрасчетныйДвиженияССубконто.Сумма,
	|ХозрасчетныйДвиженияССубконто.СчетДт,
	|ХозрасчетныйДвиженияССубконто.СчетКт,
	|ХозрасчетныйДвиженияССубконто.Период,
	|ХозрасчетныйДвиженияССубконто.Организация
	|ПОМЕСТИТЬ Движения
	|ИЗ
	|РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|&ДатаНачала,
	|&ДатаКонца,
	|(счетДт = &Счет
	|	ИЛИ СчетКт = &Счет)
	|,
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто";
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		Запрос.Текст = Запрос.Текст+ " 
		|ГДЕ
		|	ХозрасчетныйДвиженияССубконто.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+ " 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|Движения.Регистратор,
	|Движения.Сумма,
	|ВЫБОР
	|	КОГДА Движения.СчетДт = &Счет
	|		ТОГДА Движения.Сумма
	|	ИНАЧЕ 0
	|КОНЕЦ КАК Приход,
	|ВЫБОР
	|	КОГДА Движения.СчетКт = &Счет
	|		ТОГДА Движения.Сумма
	|	ИНАЧЕ 0
	|КОНЕЦ КАК Расход,
	|Движения.Период,
	|ВЫБОР
	|	КОГДА Движения.СчетДт = &Счет
	|		ТОГДА Движения.СубконтоДт2
	|	ИНАЧЕ Движения.СубконтоКт2
	|КОНЕЦ КАК Статья,
	|Движения.Организация
	|ПОМЕСТИТЬ Движения1
	|ИЗ
	|Движения КАК Движения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Движения1.Регистратор КАК Документ,
	|	СУММА(Движения1.Приход) КАК Приход,
	|	СУММА(Движения1.Расход) КАК Расход,
	|	Движения1.Период КАК Период,
	|	Движения1.Статья  Статья,
	|Движения1.Организация КАК Организация
	|ИЗ
	|	Движения1 КАК Движения1
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения1.Организация,
	|	Движения1.Период,
	|	Движения1.Статья,
	|	Движения1.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|Организация,
	|	Период,
	|	документ
	|ИТОГИ
	|	СУММА(Приход),
	|	СУММА(Расход)
	|ПО
	|	ОБЩИЕ,Организация,Статья";
	
	
	Запрос.УстановитьПараметр("ДатаНачала", Новый Граница(НачалоДня(НачПериода),ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(КонПериода),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("51"));
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		Организации = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Организации.Следующий() Цикл 
			
			Если НЕ ЗначениеЗаполнено(Организация) Тогда 
				
				ОбластьМакета = Макет.ПолучитьОбласть("Строка3");
				ОбластьМакета.Параметры.Заполнить(Организации);
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Организации.Уровень()+1,,Ложь);
			КонецЕсли;
			
			Статьи = Организации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Статьи.Следующий() Цикл 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка2");
				ОбластьМакета.Параметры.Заполнить(Статьи);
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Статьи.Уровень()+1,,Ложь);
				ДетальныеЗаписи = Статьи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ДетальныеЗаписи.Следующий() Цикл 
					ОбластьМакетаС = Макет.ПолучитьОбласть("Строка");
					ОбластьМакетаС.Параметры.Заполнить(ДетальныеЗаписи);
					попытка 
						ОбластьМакетаС.Параметры.Комментарий = ДетальныеЗаписи.Документ.НазначениеПлатежа;
						ОбластьМакетаС.Параметры.Контрагент = ДетальныеЗаписи.Документ.Контрагент;
					исключение
					конецпопытки;
					
					ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакетаС,ДетальныеЗаписи.Уровень()+1,,Ложь);
				КонецЦикла;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	ЭлементыФормы.ПолеТабличногоДокумента1.ЗакончитьАвтогруппировкуСтрок(); //банк
	
	ЭлементыФормы.ПолеТабличногоДокумента1.НачатьАвтогруппировкуСтрок();    //касса
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстаткиИОбороты.Организация,
	|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК НачальныйОстаток,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ИтПриход,
	|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК ИтРасход,
	|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК КонечныйОстаток,
	|   ""Касса"" ВидИтога
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, , Счет = &Счет, , ) КАК ХозрасчетныйОстаткиИОбороты";
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		Запрос.Текст = Запрос.Текст+ " 
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+"
	|ИТОГИ
	|СУММА(НачальныйОстаток),
	|СУММА(ИтПриход),
	|СУММА(ИтРасход),
	|СУММА(КонечныйОстаток),
	|МАКСИМУМ(ВидИтога)
	|ПО
	|ОБЩИЕ,
	|Организация";
	
	Запрос.УстановитьПараметр("ДатаНачала", Новый Граница(НачалоДня(НачПериода),ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(КонПериода),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("50.01"));
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		Если НЕ ЗначениеЗаполнено(Организация) Тогда  
			ОбластьМакета = Макет.ПолучитьОбласть("Строка0");
			ОбластьМакета.Параметры.Заполнить(Результат);
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат.Уровень()+1);
		КонецЕсли;
		
		Результат2 = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Результат2.Следующий() Цикл 
			ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
			ОбластьМакета.Параметры.Заполнить(Результат2);
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат2.Уровень()+1);
		КонецЦикла;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйДвиженияССубконто.Регистратор,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.Сумма,
	|	ХозрасчетныйДвиженияССубконто.СчетДт,
	|	ХозрасчетныйДвиженияССубконто.СчетКт,
	|	ХозрасчетныйДвиженияССубконто.Период
	|ПОМЕСТИТЬ Движения
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&ДатаНачала,
	|			&ДатаКонца,
	|			(счетДт = &Счет
	|				ИЛИ СчетКт = &Счет)
	|,
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто";
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		Запрос.Текст = Запрос.Текст+ " 
		|ГДЕ
		|	ХозрасчетныйДвиженияССубконто.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+ " 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Движения.Регистратор,
	|	Движения.Сумма,
	|	ВЫБОР
	|		КОГДА Движения.СчетДт = &Счет
	|			ТОГДА Движения.СубконтоДт1
	|		ИНАЧЕ Движения.СубконтоКт1
	|	КОНЕЦ КАК ДДС,
	|	ВЫБОР
	|		КОГДА Движения.СчетДт = &Счет
	|			ТОГДА Движения.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Приход,
	|	ВЫБОР
	|		КОГДА Движения.СчетКт = &Счет
	|			ТОГДА Движения.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Расход,
	|	ВЫБОР
	|		КОГДА Движения.СчетДт = &Счет
	|			ТОГДА Движения.СубконтоКт1
	|		ИНАЧЕ Движения.СубконтоДт1
	|	КОНЕЦ КАК Контрагент,
	|	Движения.Период
	|ПОМЕСТИТЬ Движения1
	|ИЗ
	|	Движения КАК Движения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиДвиженияДенежныхСредств.Родитель КАК Родитель,
	|	Движения1.ДДС КАК ДДС,
	|	Движения1.Регистратор КАК документ,
	|	СУММА(Движения1.Приход) КАК Приход,
	|	СУММА(Движения1.Расход) КАК Расход,
	|	Движения1.Контрагент,
	|	Движения1.Период КАК Период
	|ИЗ
	|	Движения1 КАК Движения1
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
	|		ПО Движения1.ДДС = СтатьиДвиженияДенежныхСредств.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатьиДвиженияДенежныхСредств.Родитель,
	|	Движения1.ДДС,
	|	Движения1.Регистратор,
	|	Движения1.Контрагент,
	|	Движения1.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ
	|	СУММА(Приход),
	|	СУММА(Расход)
	|ПО
	|	ОБЩИЕ,
	|	Родитель,
	|	ДДС";
	
	
	Запрос.УстановитьПараметр("ДатаНачала", Новый Граница(НачалоДня(НачПериода),ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(КонПериода),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("50.01"));
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		Родители = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Родители.Следующий() Цикл 
			ОбластьМакета = Макет.ПолучитьОбласть("КСтрока3");
			ОбластьМакета.Параметры.Заполнить(Родители);
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Родители.Уровень()+2,,Ложь);
			Статьи = Родители.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Статьи.Следующий() Цикл 
				ОбластьМакета = Макет.ПолучитьОбласть("КСтрока2");
				ОбластьМакета.Параметры.Заполнить(Статьи);
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Статьи.Уровень()+2,,Ложь);
				ДетальныеЗаписи = Статьи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ДетальныеЗаписи.Следующий() Цикл 
					ОбластьМакетаС = Макет.ПолучитьОбласть("КСтрока");
					ОбластьМакетаС.Параметры.Заполнить(ДетальныеЗаписи);
					ОбластьМакетаС.Параметры.Контрагент = ДетальныеЗаписи.Контрагент;
					ОбластьМакетаС.Параметры.Комментарий = ДетальныеЗаписи.Документ.Комментарий;
					ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакетаС,ДетальныеЗаписи.Уровень()+2,,Ложь);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
 	ЭлементыФормы.ПолеТабличногоДокумента1.ЗакончитьАвтогруппировкуСтрок();
	
		
	ЭлементыФормы.ПолеТабличногоДокумента1.НачатьАвтогруппировкуСтрок();  //резерв
	
	Запрос = Новый Запрос;
	Запрос.Текст =	"ВЫБРАТЬ
	|	РезервОстаткиИОбороты.Регистратор КАК Документ,
	|	РезервОстаткиИОбороты.СуммаНачальныйОстаток КАК НачальныйОстаток,
	|	РезервОстаткиИОбороты.СуммаПриход КАК Приход,
	|	РезервОстаткиИОбороты.СуммаРасход КАК Расход,
	|	РезервОстаткиИОбороты.СуммаКонечныйОстаток КАК КонечныйОстаток
	|ИЗ
	|	РегистрНакопления.Резерв.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Регистратор, , ) КАК РезервОстаткиИОбороты
	|ИТОГИ
	|	СУММА(НачальныйОстаток),
	|	СУММА(Приход),
	|	СУММА(Расход),
	|	СУММА(КонечныйОстаток)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("ДатаНачала", Новый Граница(НачалоДня(НачПериода),ВидГраницы.Включая) );
	Запрос.УстановитьПараметр("ДатаКонца", Новый Граница(КонецДня(КонПериода),ВидГраницы.Включая));
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		ОбластьМакета = Макет.ПолучитьОбласть("Строка4");
		ОбластьМакета.Параметры.Заполнить(Результат);
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат.Уровень()+1);
		
		Родители = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Родители.Следующий() Цикл 
			Если ЗначениеЗаполнено(Родители.Документ) Тогда 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
				ОбластьМакета.Параметры.Заполнить(Родители);
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Родители.Уровень()+1,,Ложь);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	 ЭлементыФормы.ПолеТабличногоДокумента1.ЗакончитьАвтогруппировкуСтрок();
	
	
	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(0);
	
	ЭлементыФормы.ПолеТабличногоДокумента1.ТолькоПросмотр = Истина;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

