Процедура КнопкаСформироватьНажатие(Кнопка)
	ВыводитьДоставку = Истина;
	
	ФормируемТехнику = Ложь;
	
	Если Организация.Наименование = "ООО ""ДСМ""" Тогда 
		ФормируемТехнику = Истина;
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Если ФормируемТехнику Тогда 
		Макет = ПолучитьМакет("МакетТехника");
	ИначеЕсли ФормаДляПокупателя Тогда 	
		Макет = ПолучитьМакет("ФормаДляПокупателя");
	Иначе 
		Макет = ПолучитьМакет("Макет");
	КонецЕсли;
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтог             = Макет.ПолучитьОбласть("СтрокаИтог");
	
	ОбластьМакетаШапка.Параметры.НачДата = Формат(НачДата,"ДФ=dd.MM.yyyy" );
	ОбластьМакетаШапка.Параметры.КонДата = Формат(КонДата,"ДФ=dd.MM.yyyy" );
	ОбластьМакетаШапка.Параметры.Контрагент = Контрагент;
	ОбластьМакетаШапка.Параметры.ТипНоменклатуры = ТипНоменклатуры;
	
	//ищем итоги по оплате доставок
	ГруппаДоставка = Справочники.Контрагенты.НайтиПоКоду("О00000820");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(РасходныйКассовыйОрдер.СуммаДокумента) КАК Сумма,
	|	РасходныйКассовыйОрдер.Контрагент КАК Контрагент
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Дата МЕЖДУ &НачДата И &КонДата
	|	И РасходныйКассовыйОрдер.Организация = &Организация
	|	И РасходныйКассовыйОрдер.Проведен = ИСТИНА
	|	И РасходныйКассовыйОрдер.Контрагент В ИЕРАРХИИ(&ГруппаДоставка)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйКассовыйОрдер.Контрагент";
	
	Запрос.УстановитьПараметр("НачДата", РасчетыПоДоставкеС);
	Запрос.УстановитьПараметр("КонДата", ТекущаяДата()+1);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГруппаДоставка", ГруппаДоставка);
	ТаблицаОплатДоставок  = Запрос.Выполнить().Выгрузить();
	
	//ищем итоги по премиям
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(РасходныйКассовыйОрдер.СуммаДокумента) КАК Сумма,
	|	РасходныйКассовыйОрдер.СубконтоДт2 КАК Контрагент
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|ГДЕ
	|	РасходныйКассовыйОрдер.Дата МЕЖДУ &НачДата И &КонДата
	|	И РасходныйКассовыйОрдер.Организация = &Организация
	|	И РасходныйКассовыйОрдер.СчетУчетаРасчетовСКонтрагентом = &Счет
	|	И РасходныйКассовыйОрдер.Проведен = ИСТИНА
	| И РасходныйКассовыйОрдер.СубконтоДт2 <> &NULL
	|СГРУППИРОВАТЬ ПО
	|	РасходныйКассовыйОрдер.СубконтоДт2";
	
	Запрос.УстановитьПараметр("НачДата", ОстаткиПо62счетуКорректныНаДату);
	Запрос.УстановитьПараметр("КонДата", ТекущаяДата()+1);
	
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("NULL", Неопределено);
	
	ТаблицаВыдачиПремий  = Запрос.Выполнить().Выгрузить();
	
	//ищем текущий остаток
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокКт
	|		ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстатокДт
	|	КОНЕЦ КАК НачальныйОстаток,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокКт
	|		ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстатокДт
	|	КОНЕЦ КАК СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ТекДата, Счет В ИЕРАРХИИ (&Сч62), , ) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.Организация = &Организация";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата()+1);
	
	Запрос.УстановитьПараметр("Сч62", ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	Запрос.УстановитьПараметр("Организация", Организация);
	ТаблицаПоступленийПоКонтрагентам  = Запрос.Выполнить().Выгрузить();
	
	ТаблицаПоступленийПоКонтрагентам.Колонки.Добавить("Отгрузки", Новый ОписаниеТипов("Число"));
	
	Если ФормируемТехнику Тогда 
		//ищем остаток по поставщику. Если сумма по кредиту 60 - долг ДСМ, 
		//если поставщик нам должен остаток по Дебету
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Субконто1,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
		|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
		|		ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстатокКт
		|	КОНЕЦ КАК СуммаОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&ТекДата, Счет В ИЕРАРХИИ (&Сч60), , ) КАК ХозрасчетныйОстатки
		|ГДЕ
		|	ХозрасчетныйОстатки.Организация = &Организация";
		
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата()+1);
		Запрос.УстановитьПараметр("Сч60", ПланыСчетов.Хозрасчетный.НайтиПоКоду("60"));
		Запрос.УстановитьПараметр("Организация", Организация);
		ТаблицаПоступленийПоПоставщикам  = Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
	//ищем остаток д/с по контрагентам на дату формирования отчета
	Если НачалоДня(НачДата) > НачалоДня(ОстаткиПо62счетуКорректныНаДату) Тогда 
		Запрос = Новый Запрос;
		
		Если ФормируемТехнику Тогда 
			Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ
			|	РеализацияТехникиУслуги.Ссылка.Покупатель КАК Покупатель,
			|	СУММА(РеализацияТехникиУслуги.СуммаПродажи) КАК ПродалиСумма,
			|	РеализацияТехникиУслуги.Ссылка.Поставщик КАК Поставщик,
			|	СУММА(РеализацияТехникиУслуги.СуммаПокупки) КАК КупилиСумма
			|ИЗ
			|	Документ.РеализацияТехники.Услуги КАК РеализацияТехникиУслуги
			|ГДЕ
			|	РеализацияТехникиУслуги.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
			|	И РеализацияТехникиУслуги.Ссылка.Организация = &Организация
			|	И НЕ РеализацияТехникиУслуги.Ссылка.ПометкаУдаления";
			
			Если ЗначениеЗаполнено(Контрагент) Тогда 
				Запрос.Текст = Запрос.Текст + "
				|И РеализацияТехникиУслуги.Ссылка.Покупатель = &Контрагент";
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст + "		
			|СГРУППИРОВАТЬ ПО
			|	РеализацияТехникиУслуги.Ссылка.Покупатель,
			|	РеализацияТехникиУслуги.Ссылка.Поставщик
			|
			|УПОРЯДОЧИТЬ ПО
			|	Покупатель,
			|	Поставщик";
			
			
			Запрос.УстановитьПараметр("НачДата", НачалоДня(ОстаткиПо62счетуКорректныНаДату));
			Запрос.УстановитьПараметр("КонДата", КонецДня(НачалоДня(НачДата)-1));
			Запрос.УстановитьПараметр("Организация", Организация);
			
			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл 
				Покупатель = Результат.Покупатель;
				
				ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Найти(Покупатель,"Субконто1");
				Если ТекСтрТЗ <> Неопределено Тогда 
					ТекСтрТЗ.СуммаОстатокКт = ТекСтрТЗ.СуммаОстатокКт - Результат.ПродалиСумма;
				Иначе 
					ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Добавить();
					ТекСтрТЗ.Субконто1 = Результат.Покупатель;
					ТекСтрТЗ.СуммаОстатокКт = -Результат.ПродалиСумма;
				КонецЕсли;	
				ТекСтрТЗ.Отгрузки = ТекСтрТЗ.Отгрузки + Результат.ПродалиСумма; 
				
				Поставщик = Результат.Поставщик;
				ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Найти(Поставщик,"Субконто1");
				Если ТекСтрТЗ <> Неопределено Тогда 
					ТекСтрТЗ.СуммаОстатокДт = ТекСтрТЗ.СуммаОстатокДт - Результат.КупилиСумма;
				Иначе 
					ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Добавить();
					ТекСтрТЗ.Субконто1 = Результат.Покупатель;
					ТекСтрТЗ.СуммаОстатокДт = -Результат.КупилиСумма;
				КонецЕсли;	
				
			КонецЦикла;
		Иначе 
			Запрос.Текст = "";
			Если НеВыводитьЧастноеЛицо Тогда 
				Запрос.Текст = "
				|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|Контрагенты.Ссылка
				|ПОМЕСТИТЬ КонтрагентыБезЧЛ
				|ИЗ
				|	Справочник.Контрагенты КАК Контрагенты
				|ГДЕ
				|	НЕ Контрагенты.Наименование ПОДОБНО &ЧЛ
				|;
				|";
			КонецЕсли;
			Если ВыводитьЧастноеЛицо Тогда 
				Запрос.Текст = "
				|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|Контрагенты.Ссылка
				|ПОМЕСТИТЬ КонтрагентыБезЧЛ
				|ИЗ
				|	Справочник.Контрагенты КАК Контрагенты
				|ГДЕ
				|	 Контрагенты.Наименование ПОДОБНО &ЧЛ
				|;
				|";
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
			|	РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
			|	РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
			|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
			|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК ПродалиКоличество,
			|		ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
			|ВЫБОР 
			|	КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0 ТОГДА 0
			|	ИНАЧЕ 
			|ВЫБОР
			|	КОГДА ЕСТЬNULL(ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена, 0) = 0
			|		ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних1.Цена, 0)
			|	ИНАЧЕ ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена
			|КОНЕЦ
			|КОНЕЦ КАК ЦенаПродажи,
			|	СУММА(ВЫБОР 
			|	КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0 ТОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма
			|	ИНАЧЕ 
			|ВЫБОР
			|	КОГДА ЕСТЬNULL(ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена, 0) = 0
			|		ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних1.Цена, 0)
			|	ИНАЧЕ ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена
			|КОНЕЦ * РеализацияТоваровУслугТовары.Количество	
			|	КОНЕЦ) КАК ПродалиСумма,
			|	СУММА(РеализацияТоваровУслугТовары.КоличествоФакт) КАК КупилиКоличество,
			|	СУММА(ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * РеализацияТоваровУслугТовары.КоличествоФакт) КАК КупилиСумма,
			|	СУММА(ВЫБОР
			|			КОГДА РеализацияТоваровУслугТовары.Ссылка.Сумма = 0
			|				ТОГДА 0
			|			ИНАЧЕ 1
			|		КОНЕЦ) КАК КоличествоДоставка,
			|
			|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма - ЕСТЬNULL(ЦеныЗаПеревозкуПоТССрезПоследних.ЦенаЗаЕдиницу, 0)) КАК ПростойСумма,
			|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма) КАК ОбщаяСуммаДоставки,
			|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Премия) КАК Премия,
			|		СУММА(ВЫБОР 
			|	КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0 ТОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма
			|- ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * РеализацияТоваровУслугТовары.КоличествоФакт
			|- РеализацияТоваровУслугТовары.Ссылка.Сумма - РеализацияТоваровУслугТовары.Ссылка.Премия
			|	ИНАЧЕ 
			|ВЫБОР
			|	КОГДА ЕСТЬNULL(ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена, 0) = 0
			|		ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних1.Цена, 0)
			|	ИНАЧЕ ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена
			|КОНЕЦ * РеализацияТоваровУслугТовары.Количество	
			|	КОНЕЦ - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * РеализацияТоваровУслугТовары.КоличествоФакт
			|- РеализацияТоваровУслугТовары.Ссылка.Сумма - РеализацияТоваровУслугТовары.Ссылка.Премия) КАК Прибыль,
			|	СУММА(ВЫБОР
			|	КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0
			|		ТОГДА 0
			|	ИНАЧЕ РеализацияТоваровУслугТовары.Количество
			|КОНЕЦ) КАК ПродалиКоличествоПоЦенамРегистра,
			|СУММА(РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма) КАК ПродалиОбщаяСумма,
			|ЦеныЗаПеревозкуПоТССрезПоследних.ТС.КонтрагентДоставка КАК КонтрагентДоставка
			|ИЗ
			|Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПроверкеДокументов КАК СведенияОПроверкеДокументов
			|	ПО РеализацияТоваровУслугТовары.Ссылка = СведенияОПроверкеДокументов.Документ
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонДата, ТипЦен = &ЦенаПоставки) КАК ЦеныНоменклатурыСрезПоследних
			|	ПО РеализацияТоваровУслугТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонДата, ТипЦен = &ЦенаПродажи) КАК ЦеныНоменклатурыСрезПоследних1
			|	ПО РеализацияТоваровУслугТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних1.Номенклатура
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыКонтрагентов.СрезПоследних КАК ЦеныНоменклатурыКонтрагентовСрезПоследних
			|	ПО РеализацияТоваровУслугТовары.Ссылка.Контрагент = ЦеныНоменклатурыКонтрагентовСрезПоследних.Контрагент
			|		И РеализацияТоваровУслугТовары.Номенклатура = ЦеныНоменклатурыКонтрагентовСрезПоследних.Номенклатура
			|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныЗаПеревозкуПоТС.СрезПоследних(&КонДата, ) КАК ЦеныЗаПеревозкуПоТССрезПоследних
			|	ПО РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство = ЦеныЗаПеревозкуПоТССрезПоследних.ТС";
			
			Если НеВыводитьЧастноеЛицо или ВыводитьЧастноеЛицо Тогда 
				Запрос.Текст = Запрос.Текст + "
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыБезЧЛ КАК КонтрагентыБезЧЛ
				|ПО РеализацияТоваровУслугТовары.Ссылка.Контрагент = КонтрагентыБезЧЛ.Ссылка
				|";
			КонецЕсли;
			
			Запрос.Текст =  Запрос.Текст + 	"
			|ГДЕ
			|	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
			|	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0 ИЛИ ЕСТЬNULL(РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет, ЛОЖЬ) = ИСТИНА)
			|	И РеализацияТоваровУслугТовары.Ссылка.Организация = &Организация";
			
			Если ЗначениеЗаполнено(Контрагент) Тогда 
				Запрос.Текст = Запрос.Текст + "
				|И РеализацияТоваровУслугТовары.Ссылка.Контрагент = &Контрагент";
			КонецЕсли;
			
			Если ВыводитьТолькоПроверенные Тогда 
				Запрос.Текст = Запрос.Текст + "
				|И ЕСТЬNULL(СведенияОПроверкеДокументов.Проверен, ЛОЖЬ) = ИСТИНА";
			КонецЕсли;
			
			Запрос.Текст = Запрос.Текст + "
			|СГРУППИРОВАТЬ ПО
			|	РеализацияТоваровУслугТовары.Ссылка.Контрагент,
			|	РеализацияТоваровУслугТовары.Ссылка.Организация,
			|	РеализацияТоваровУслугТовары.Номенклатура,
			|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ),
			|	РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0),
			|ВЫБОР 
			|	КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0 ТОГДА 0
			|	ИНАЧЕ 
			|ВЫБОР
			|	КОГДА ЕСТЬNULL(ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена, 0) = 0
			|		ТОГДА ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних1.Цена, 0)
			|	ИНАЧЕ ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена
			|КОНЕЦ
			|КОНЕЦ,
			|ЦеныЗаПеревозкуПоТССрезПоследних.ТС.КонтрагентДоставка
			|УПОРЯДОЧИТЬ ПО
			|	Дата,
			|	Контрагент,
			|Номенклатура
			|ИТОГИ ПО
			|ОБЩИЕ";
			
			Запрос.УстановитьПараметр("НачДата", НачалоДня(ОстаткиПо62счетуКорректныНаДату));
			Запрос.УстановитьПараметр("КонДата", КонецДня(НачалоДня(НачДата)-1));
			Запрос.УстановитьПараметр("Контрагент", Контрагент);
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
			Запрос.УстановитьПараметр("ЦенаПоставки", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"));
			Запрос.УстановитьПараметр("ЦенаПродажи", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"));
			Запрос.УстановитьПараметр("ЧЛ", "%Частное лицо%");
			
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Запрос.УстановитьПараметр("Корректировка", "%Корректировка%");
			Запрос.УстановитьПараметр("ВыводитьДоставку", ВыводитьДоставку);
			
			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл 
				Если ЗначениеЗаполнено(результат.дата) Тогда 
					
					ДатаПолученияЦены = Результат.Дата;
					фКонтрагент = Результат.Контрагент;
					фНоменклатура = Результат.Номенклатура;
					
					ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("Номенклатура,Контрагент", фНоменклатура, фКонтрагент)).Цена;
					
					Если ЦенаПродажи = 0 Тогда 
						ЦенаПродажи  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
						Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"),фНоменклатура)).Цена;
					КонецЕсли;
					
					ПродалиСумма = Результат.ПродалиОбщаяСумма+Результат.ПродалиКоличествоПоЦенамРегистра*ЦенаПродажи;
					ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Найти(Результат.Контрагент,"Субконто1");
					Если ТекСтрТЗ <> Неопределено Тогда 
						ТекСтрТЗ.СуммаОстатокКт = ТекСтрТЗ.СуммаОстатокКт - ПродалиСумма;
					Иначе 
						ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Добавить();
						ТекСтрТЗ.Субконто1 = Результат.Контрагент;
						ТекСтрТЗ.СуммаОстатокКт = -ПродалиСумма;
					КонецЕсли;	
					ТекСтрТЗ.Отгрузки = ТекСтрТЗ.Отгрузки + ПродалиСумма; 
					
					ТекСтрТЗ = ТаблицаВыдачиПремий.Найти(Результат.Контрагент,"Контрагент");
					Если ТекСтрТЗ <> Неопределено Тогда 
						ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - Результат.Премия;
					Иначе 
						ТекСтрТЗ = ТаблицаВыдачиПремий.Добавить();
						ТекСтрТЗ.КОнтрагент = Результат.Контрагент;
						ТекСтрТЗ.Сумма = -Результат.Премия;
					КонецЕсли;	
					
					Если результат.дата >= РасчетыПоДоставкеС Тогда 
						ТекСтрТЗ = ТаблицаОплатДоставок.Найти(Результат.КонтрагентДоставка,"Контрагент");
						Если ТекСтрТЗ <> Неопределено Тогда 
							ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - Результат.ОбщаяСуммаДоставки;
						Иначе 
							ТекСтрТЗ = ТаблицаОплатДоставок.Добавить();
							ТекСтрТЗ.КОнтрагент = Результат.Контрагент;
							ТекСтрТЗ.Сумма = -Результат.ОбщаяСуммаДоставки;
						КонецЕсли;	
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;		
	
	// ищем отгрузки
	
	ИтКупилиКоличество = 0;
	ИтКупилиСумма = 0;
	ИтКоличествоДоставка = 0;
	ИтПростойСумма = 0;
	ИтОбщаяСуммаДоставки = 0;
	ИтПродалиКоличество = 0;
	ИтПродалиСумма = 0;
	ИтПремия = 0;
	ИтПрибыль = 0;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	
	Если ФормируемТехнику Тогда 
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РеализацияТехникиУслуги.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТехникиУслуги.Услуга КАК Номенклатура,
		|	СУММА(РеализацияТехникиУслуги.КоличествоПокупки) КАК КупилиКоличество,
		|	СУММА(РеализацияТехникиУслуги.КоличествоПродажи) КАК ПродалиКоличество,
		|	РеализацияТехникиУслуги.Ссылка.Покупатель КАК Контрагент,
		|	РеализацияТехникиУслуги.ЦенаПродажи КАК ЦенаПродажи,
		|	СУММА(РеализацияТехникиУслуги.СуммаПродажи) КАК ПродалиСумма,
		|	РеализацияТехникиУслуги.Ссылка.Поставщик КАК Организация,
		|	РеализацияТехникиУслуги.ЦенаПокупки КАК Цена,
		|	СУММА(РеализацияТехникиУслуги.СуммаПокупки) КАК КупилиСумма,
		|	СУММА(РеализацияТехникиУслуги.СуммаПродажи - РеализацияТехникиУслуги.СуммаПокупки) КАК Прибыль
		|ИЗ
		|	Документ.РеализацияТехники.Услуги КАК РеализацияТехникиУслуги
		|ГДЕ
		|	РеализацияТехникиУслуги.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И НЕ РеализацияТехникиУслуги.Ссылка.ПометкаУдаления
		|	И РеализацияТехникиУслуги.Ссылка.Организация = &Организация";
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И РеализацияТехникиУслуги.Ссылка.Покупатель = &Контрагент";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "		
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТехникиУслуги.Ссылка.Покупатель,
		|	НАЧАЛОПЕРИОДА(РеализацияТехникиУслуги.Ссылка.Дата, ДЕНЬ),
		|	РеализацияТехникиУслуги.Ссылка.Поставщик,
		|	РеализацияТехникиУслуги.Услуга,
		|	РеализацияТехникиУслуги.ЦенаПокупки,
		|	РеализацияТехникиУслуги.ЦенаПродажи
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Контрагент,
		|	Организация
		|ИТОГИ ПО
		|	ОБЩИЕ";
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			
			Если ЗначениеЗаполнено(результат.дата) Тогда 
				ИтКупилиКоличество = ИтКупилиКоличество + Результат.КупилиКоличество;
				ИтКупилиСумма = ИтКупилиСумма + Результат.КупилиСумма;
				ИтПродалиКоличество = ИтПродалиКоличество + Результат.ПродалиКоличество;
				ИтПродалиСумма = ИтПродалиСумма + Результат.ПродалиСумма;
				ИтПрибыль = ИтПрибыль + Результат.Прибыль;
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Если НеВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = "
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|Контрагенты.Ссылка
			|ПОМЕСТИТЬ КонтрагентыБезЧЛ
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	НЕ Контрагенты.Наименование ПОДОБНО &ЧЛ
			|;
			|";
		КонецЕсли;
		Если ВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = "
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|Контрагенты.Ссылка
			|ПОМЕСТИТЬ КонтрагентыБезЧЛ
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	 Контрагенты.Наименование ПОДОБНО &ЧЛ
			|;
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
		|РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|СУММА(РеализацияТоваровУслугТовары.Количество) КАК ПродалиКоличество,
		|СУММА(РеализацияТоваровУслугТовары.КоличествоФакт) КАК КупилиКоличество,
		|СУММА(ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Ссылка.Сумма = 0
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ) КАК КоличествоДоставка,
		|СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма - ЕСТЬNULL(ЦеныЗаПеревозкуПоТССрезПоследних.ЦенаЗаЕдиницу, 0)) КАК ПростойСумма,
		|СУММА(РеализацияТоваровУслугТовары.Ссылка.Премия) КАК Премия,
		|СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма) КАК ОбщаяСуммаДоставки,
		|СУММА(ВЫБОР
		|		КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0
		|			ТОГДА 0
		|		ИНАЧЕ РеализацияТоваровУслугТовары.Количество
		|	КОНЕЦ) КАК ПродалиКоличествоПоЦенамРегистра,
		|СУММА(РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма) КАК ПродалиОбщаяСумма,
		|	РеализацияТоваровУслугТовары.Ссылка.Поставщик КАК Поставщик,
		|РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика КАК ЦенаПоставщика
		|
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПроверкеДокументов КАК СведенияОПроверкеДокументов
		|		ПО РеализацияТоваровУслугТовары.Ссылка = СведенияОПроверкеДокументов.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныЗаПеревозкуПоТС.СрезПоследних(&КонДата, ) КАК ЦеныЗаПеревозкуПоТССрезПоследних
		|		ПО РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство = ЦеныЗаПеревозкуПоТССрезПоследних.ТС";
		
		Если НеВыводитьЧастноеЛицо ИЛИ ВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = Запрос.Текст + "
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыБезЧЛ КАК КонтрагентыБезЧЛ
			|ПО РеализацияТоваровУслугТовары.Ссылка.Контрагент = КонтрагентыБезЧЛ.Ссылка
			|";
		КонецЕсли;
		
		Запрос.Текст =  Запрос.Текст + 	"
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0 ИЛИ ЕСТЬNULL(РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет, ЛОЖЬ) = ИСТИНА)
		|	И РеализацияТоваровУслугТовары.Ссылка.Организация = &Организация";
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И РеализацияТоваровУслугТовары.Ссылка.Контрагент = &Контрагент";
		КонецЕсли;
		
		Если ВыводитьТолькоПроверенные Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И ЕСТЬNULL(СведенияОПроверкеДокументов.Проверен, ЛОЖЬ) = ИСТИНА";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|СГРУППИРОВАТЬ ПО
		|РеализацияТоваровУслугТовары.Ссылка.Контрагент,
		|РеализацияТоваровУслугТовары.Ссылка.Организация,
		|РеализацияТоваровУслугТовары.Номенклатура,
		|НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ),
		|РеализацияТоваровУслугТовары.Ссылка.Поставщик,
		|РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Контрагент,
		|Номенклатура
		|ИТОГИ ПО
		|ОБЩИЕ";
		
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
		Запрос.УстановитьПараметр("ЧЛ", "%Частное лицо%");
		Запрос.УстановитьПараметр("ЦенаПоставки", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"));
		Запрос.УстановитьПараметр("ЦенаПродажи", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"));
		
		Запрос.УстановитьПараметр("Корректировка", "%Корректировка%");
		Запрос.УстановитьПараметр("ВыводитьДоставку", ВыводитьДоставку);
		
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			Если ЗначениеЗаполнено(результат.дата) Тогда 
				Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда 
					Если  Результат.Номенклатура.ТипНоменклатуры <> ТипНоменклатуры Тогда 
						Продолжить;
					КонецЕсли;
				КонецЕсли; 
				
				ДатаПолученияЦены = Результат.Дата;
				фКонтрагент = Результат.Контрагент;
				фНоменклатура = Результат.Номенклатура;
				Цена = Результат.ЦенаПоставщика;				
				Если Цена = 0 Тогда 
					Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"),фНоменклатура)).Цена;
				КонецЕсли;
				ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
				Новый Структура("Номенклатура,Контрагент", фНоменклатура, фКонтрагент)).Цена;
				
				Если ЦенаПродажи = 0 Тогда 
					ЦенаПродажи  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"),фНоменклатура)).Цена;
				КонецЕсли;
				
				ПродалиСумма = Результат.ПродалиОбщаяСумма+Результат.ПродалиКоличествоПоЦенамРегистра*ЦенаПродажи;
				
				ИтКоличествоДоставка = ИтКоличествоДоставка + Результат.КоличествоДоставка;
				ИтПростойСумма = ИтПростойСумма + Результат.ПростойСумма;
				ИтОбщаяСуммаДоставки = ИтОбщаяСуммаДоставки + Результат.ОбщаяСуммаДоставки;
				ИтПремия = ИтПремия + Результат.Премия;
				ИтКупилиКоличество = ИтКупилиКоличество + Результат.КупилиКоличество;
				ИтКупилиСумма = ИтКупилиСумма + Цена*Результат.КупилиКоличество;
				
				ИтПродалиКоличество = ИтПродалиКоличество + Результат.ПродалиКоличество;
				ИтПродалиСумма = ИтПродалиСумма + ПродалиСумма;
				ИтПрибыль = ИтПрибыль + ПродалиСумма - Цена*Результат.КупилиКоличество - Результат.ОбщаяСуммаДоставки - Результат.Премия;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//ищем 	отгрузки
	
	Запрос = Новый Запрос;
	Запрос.Текст = "";
	
	Если ФормируемТехнику Тогда 
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РеализацияТехникиУслуги.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТехникиУслуги.Услуга КАК Номенклатура,
		|	СУММА(РеализацияТехникиУслуги.КоличествоПокупки) КАК КупилиКоличество,
		|	СУММА(РеализацияТехникиУслуги.КоличествоПродажи) КАК ПродалиКоличество,
		|	РеализацияТехникиУслуги.Ссылка.Покупатель КАК Контрагент,
		|	РеализацияТехникиУслуги.ЦенаПродажи КАК ЦенаПродажи,
		|	СУММА(РеализацияТехникиУслуги.СуммаПродажи) КАК ПродалиСумма,
		|	РеализацияТехникиУслуги.Ссылка.Поставщик КАК Организация,
		|	РеализацияТехникиУслуги.ЦенаПокупки КАК Цена,
		|	СУММА(РеализацияТехникиУслуги.СуммаПокупки) КАК КупилиСумма,
		|	СУММА(РеализацияТехникиУслуги.СуммаПродажи - РеализацияТехникиУслуги.СуммаПокупки) КАК Прибыль,
		|	РеализацияТехникиУслуги.Ссылка.Проведен
		|ИЗ
		|	Документ.РеализацияТехники.Услуги КАК РеализацияТехникиУслуги
		|ГДЕ
		|	РеализацияТехникиУслуги.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И НЕ РеализацияТехникиУслуги.Ссылка.ПометкаУдаления
		|	И РеализацияТехникиУслуги.Ссылка.Организация = &Организация";
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И РеализацияТехникиУслуги.Ссылка.Покупатель = &Контрагент";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "		
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТехникиУслуги.Ссылка.Покупатель,
		|	НАЧАЛОПЕРИОДА(РеализацияТехникиУслуги.Ссылка.Дата, ДЕНЬ),
		|	РеализацияТехникиУслуги.Ссылка.Поставщик,
		|	РеализацияТехникиУслуги.Услуга,
		|	РеализацияТехникиУслуги.ЦенаПокупки,
		|	РеализацияТехникиУслуги.ЦенаПродажи,
		|	РеализацияТехникиУслуги.Ссылка.Проведен
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Контрагент,
		|	Организация
		|ИТОГИ ПО
		|	ОБЩИЕ";
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			ОбластьМакетаСтрока.Параметры.Заполнить(Результат);
			ОбластьМакетаСтрока.Параметры["Долг"] = 0;
			ОбластьМакетаСтрока.Параметры["Расчет"] = 0;
			ОбластьМакетаСтрока.Параметры["Сальдо"] = 0;
			ОбластьМакетаСтрока.Параметры["ДолгКупили"] = 0;
			ОбластьМакетаСтрока.Параметры["РасчетКупили"] = 0;
			ОбластьМакетаСтрока.Параметры["СальдоКупили"] = 0;
			
			Если ЗначениеЗаполнено(результат.дата) Тогда 
				фКонтрагент = Результат.Контрагент;
				фНоменклатура = Результат.Номенклатура;
				
				Если Дата(Результат.Дата) >= ОстаткиПо62счетуКорректныНаДату Тогда 
					ПродалиСумма = Результат.ПродалиСумма;
					ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Найти(Результат.Контрагент,"Субконто1");
					Если ТекСтрТЗ <> Неопределено Тогда 
						Если ТекСтрТЗ.СуммаОстатокКт >=0 Тогда 
							Если ТекСтрТЗ.СуммаОстатокКт <= ПродалиСумма Тогда 
								ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма - ТекСтрТЗ.СуммаОстатокКт;
								ОбластьМакетаСтрока.Параметры["Расчет"] =  ТекСтрТЗ.СуммаОстатокКт;
							Иначе 
								ОбластьМакетаСтрока.Параметры["Долг"] = 0;
								ОбластьМакетаСтрока.Параметры["Расчет"] = ПродалиСумма;
							КонецЕсли;
						Иначе
							ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма;
						КонецЕсли;
						ТекСтрТЗ.СуммаОстатокКт = ТекСтрТЗ.СуммаОстатокКт - ПродалиСумма;
					Иначе 
						ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Добавить();
						ТекСтрТЗ.Субконто1 = Результат.Контрагент;
						ТекСтрТЗ.СуммаОстатокКт = -ПродалиСумма;
						ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма;
					КонецЕсли;
					ТекСтрТЗ.Отгрузки = ТекСтрТЗ.Отгрузки + ПродалиСумма; 
					
					ОбластьМакетаСтрока.Параметры["Сальдо"] = ТекСтрТЗ.СуммаОстатокКт;
					
					КупилиСумма = Результат.КупилиСумма;
					ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Найти(Результат.Организация,"Субконто1");
					Если ТекСтрТЗ <> Неопределено Тогда 
						Если ТекСтрТЗ.СуммаОстатокДт >=0 Тогда 
							Если ТекСтрТЗ.СуммаОстатокДт <= КупилиСумма Тогда 
								ОбластьМакетаСтрока.Параметры["ДолгКупили"] = КупилиСумма - ТекСтрТЗ.СуммаОстатокДт;
								ОбластьМакетаСтрока.Параметры["РасчетКупили"] =  ТекСтрТЗ.СуммаОстатокДт;
							Иначе 
								ОбластьМакетаСтрока.Параметры["ДолгКупили"] = 0;
								ОбластьМакетаСтрока.Параметры["РасчетКупили"] = КупилиСумма;
							КонецЕсли;
						Иначе
							ОбластьМакетаСтрока.Параметры["ДолгКупили"] = КупилиСумма;
						КонецЕсли;
						ТекСтрТЗ.СуммаОстатокДт = ТекСтрТЗ.СуммаОстатокДт - КупилиСумма;
					Иначе 
						ТекСтрТЗ = ТаблицаПоступленийПоПоставщикам.Добавить();
						ТекСтрТЗ.Субконто1 = Результат.Организация;
						ТекСтрТЗ.СуммаОстатокДт = -КупилиСумма;
						ОбластьМакетаСтрока.Параметры["ДолгКупили"] = КупилиСумма;
					КонецЕсли;	
					ОбластьМакетаСтрока.Параметры["СальдоКупили"] = ТекСтрТЗ.СуммаОстатокДт;
					
					
				КонецЕсли;
				Если Результат.Проведен Тогда 
					ОбластьМакетаСтрока.Параметры["Состояние"] = "Завершено";
				Иначе 
					ОбластьМакетаСтрока.Параметры["Состояние"] = "В работе";
				КонецЕсли;
				Если ЗначениеЗаполнено(Номенклатура) Тогда 
					Если  Результат.Номенклатура = Номенклатура Тогда 
						если ВыводитьТолькоДолжников тогда
							если ОбластьМакетаСтрока.Параметры["Сальдо"] < 0 Тогда 
								ТабДокумент.Вывести(ОбластьМакетаСтрока);
							КонецЕсли;
						Иначе 
							ТабДокумент.Вывести(ОбластьМакетаСтрока);
						КонецЕсли;
					КонецЕсли;
				Иначе 
					если ВыводитьТолькоДолжников тогда
						если ОбластьМакетаСтрока.Параметры["Сальдо"] < 0 Тогда 
							ТабДокумент.Вывести(ОбластьМакетаСтрока);
						КонецЕсли;
					Иначе 
						ТабДокумент.Вывести(ОбластьМакетаСтрока);
					КонецЕсли;
				КонецЕсли;
			Иначе 
				Если НЕ ВыводитьТолькоДолжников Тогда 
					ОбластьМакетаИтог.Параметры["ИтКупилиКоличество"] = ИтКупилиКоличество;
					ОбластьМакетаИтог.Параметры["ИтКупилиСумма"] = ИтКупилиСумма;
					ОбластьМакетаИтог.Параметры["ИтПродалиКоличество"] = ИтПродалиКоличество;
					ОбластьМакетаИтог.Параметры["ИтПродалиСумма"] = ИтПродалиСумма;
					ОбластьМакетаИтог.Параметры["ИтПрибыль"] = ИтПрибыль;
				КонецЕсли;
				ТабДокумент.Вывести(ОбластьМакетаИтог);
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Если НеВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = "
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|Контрагенты.Ссылка
			|ПОМЕСТИТЬ КонтрагентыБезЧЛ
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	НЕ Контрагенты.Наименование ПОДОБНО &ЧЛ
			|;
			|";
		КонецЕсли;
		Если ВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = "
			|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|Контрагенты.Ссылка
			|ПОМЕСТИТЬ КонтрагентыБезЧЛ
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			| Контрагенты.Наименование ПОДОБНО &ЧЛ
			|;
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст+ "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	РеализацияТоваровУслугТовары.Ссылка.Организация КАК Организация,
		|	РеализацияТоваровУслугТовары.Ссылка.Контрагент КАК Контрагент,
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК ПродалиКоличество,
		|	СУММА(РеализацияТоваровУслугТовары.КоличествоФакт) КАК КупилиКоличество,
		|	СУММА(ВЫБОР
		|			КОГДА РеализацияТоваровУслугТовары.Ссылка.Сумма = 0
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК КоличествоДоставка,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма - ЕСТЬNULL(ЦеныЗаПеревозкуПоТССрезПоследних.ЦенаЗаЕдиницу, 0)) КАК ПростойСумма,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Премия) КАК Премия,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.Сумма) КАК ОбщаяСуммаДоставки,
		|	СУММА(ВЫБОР
		|			КОГДА РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма <> 0
		|				ТОГДА 0
		|			ИНАЧЕ РеализацияТоваровУслугТовары.Количество
		|		КОНЕЦ) КАК ПродалиКоличествоПоЦенамРегистра,
		|	СУММА(РеализацияТоваровУслугТовары.Ссылка.ОбщаяСумма) КАК ПродалиОбщаяСумма,
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика КАК ЦенаПоставщика,
		|	РеализацияТоваровУслугТовары.Ссылка.Поставщик КАК Поставщик,
		|	ЦеныЗаПеревозкуПоТССрезПоследних.ТС.КонтрагентДоставка КАК КонтрагентДоставка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПроверкеДокументов КАК СведенияОПроверкеДокументов
		|		ПО РеализацияТоваровУслугТовары.Ссылка = СведенияОПроверкеДокументов.Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыКонтрагентов.СрезПоследних КАК ЦеныНоменклатурыКонтрагентовСрезПоследних
		|		ПО РеализацияТоваровУслугТовары.Ссылка.Контрагент = ЦеныНоменклатурыКонтрагентовСрезПоследних.Контрагент
		|			И РеализацияТоваровУслугТовары.Номенклатура = ЦеныНоменклатурыКонтрагентовСрезПоследних.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныЗаПеревозкуПоТС.СрезПоследних(&КонДата, ) КАК ЦеныЗаПеревозкуПоТССрезПоследних
		|		ПО РеализацияТоваровУслугТовары.Ссылка.ТранспортноеСредство = ЦеныЗаПеревозкуПоТССрезПоследних.ТС";
		
		Если НеВыводитьЧастноеЛицо Или ВыводитьЧастноеЛицо Тогда 
			Запрос.Текст = Запрос.Текст + "
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтрагентыБезЧЛ КАК КонтрагентыБезЧЛ
			|ПО РеализацияТоваровУслугТовары.Ссылка.Контрагент = КонтрагентыБезЧЛ.Ссылка
			|";
		КонецЕсли;
		
		Запрос.Текст =  Запрос.Текст + 	"
		|ГДЕ
		|	РеализацияТоваровУслугТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И (РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0 ИЛИ ЕСТЬNULL(РеализацияТоваровУслугТовары.Ссылка.ВключатьВОбщийОтчет, ЛОЖЬ) = ИСТИНА)
		|	И РеализацияТоваровУслугТовары.Ссылка.Организация = &Организация";
		
		Если ЗначениеЗаполнено(Контрагент) Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И РеализацияТоваровУслугТовары.Ссылка.Контрагент = &Контрагент";
		КонецЕсли;
		
		Если ВыводитьТолькоПроверенные Тогда 
			Запрос.Текст = Запрос.Текст + "
			|И ЕСТЬNULL(СведенияОПроверкеДокументов.Проверен, ЛОЖЬ) = ИСТИНА";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|СГРУППИРОВАТЬ ПО
		|РеализацияТоваровУслугТовары.Ссылка.Контрагент,
		|	РеализацияТоваровУслугТовары.Ссылка.Организация,
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	НАЧАЛОПЕРИОДА(РеализацияТоваровУслугТовары.Ссылка.Дата, ДЕНЬ),
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаПоставщика,
		|	РеализацияТоваровУслугТовары.Ссылка.Поставщик,
		|	ЦеныЗаПеревозкуПоТССрезПоследних.ТС.КонтрагентДоставка
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Контрагент,
		|Номенклатура
		|ИТОГИ ПО
		|ОБЩИЕ";
		
		Запрос.УстановитьПараметр("НачДата", НачДата);
		Запрос.УстановитьПараметр("КонДата", КонецДня(КонДата));
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ТипНоменклатуры", ТипНоменклатуры);
		Запрос.УстановитьПараметр("ЧЛ", "%Частное лицо%");
		Запрос.УстановитьПараметр("ЦенаПоставки", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"));
		Запрос.УстановитьПараметр("ЦенаПродажи", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"));
		
		Запрос.УстановитьПараметр("Корректировка", "%Корректировка%");
		Запрос.УстановитьПараметр("ВыводитьДоставку", ВыводитьДоставку);
		
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		Результат = Запрос.Выполнить().Выбрать();
		Пока Результат.Следующий() Цикл 
			ОбластьМакетаСтрока.Параметры.Заполнить(Результат);
			ОбластьМакетаСтрока.Параметры["Долг"] = 0;
			ОбластьМакетаСтрока.Параметры["Расчет"] = 0;
			ОбластьМакетаСтрока.Параметры["Сальдо"] = 0;
			ОбластьМакетаСтрока.Параметры["ПремияДолг"] = 0;
			ОбластьМакетаСтрока.Параметры["ПремияРасчет"] = 0;
			ОбластьМакетаСтрока.Параметры["ПремияСальдо"] = 0;
			ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = 0;
			ОбластьМакетаСтрока.Параметры["ДоставкаРасчет"] = 0;
			ОбластьМакетаСтрока.Параметры["ДоставкаСальдо"] = 0;
			
			
			Если ЗначениеЗаполнено(результат.дата) Тогда 
				ДатаПолученияЦены = Результат.Дата;
				фКонтрагент = Результат.Контрагент;
				фНоменклатура = Результат.Номенклатура;
				Цена = Результат.ЦенаПоставщика;
				Если  Цена = 0  Тогда 
					Цена  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость"),фНоменклатура)).Цена;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Результат.Поставщик) Тогда
					ОбластьМакетаСтрока.Параметры["Организация"] = Результат.ПОставщик;
				Иначе
					ОбластьМакетаСтрока.Параметры["Организация"] = "АБЗ-Исток";
				КонецЕсли;
				
				ЦенаПродажи = РегистрыСведений.ЦеныНоменклатурыКонтрагентов.ПолучитьПоследнее(ДатаПолученияЦены, 
				Новый Структура("Номенклатура,Контрагент", фНоменклатура, фКонтрагент)).Цена;
				
				Если ЦенаПродажи = 0 Тогда 
					ЦенаПродажи  = РегистрыСведений.ЦеныНоменклатуры.ПолучитьПоследнее(ДатаПолученияЦены, 
					Новый Структура("ТипЦен,Номенклатура", Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Продажная"),фНоменклатура)).Цена;
				КонецЕсли;
				
				ПродалиСумма = Результат.ПродалиОбщаяСумма+Результат.ПродалиКоличествоПоЦенамРегистра*ЦенаПродажи;
				Если Не ФормаДляПокупателя тогда
					ОбластьМакетаСтрока.Параметры["Цена"] = Цена;
					ОбластьМакетаСтрока.Параметры["КупилиСумма"] = Цена*Результат.КупилиКоличество;
					ОбластьМакетаСтрока.Параметры["Прибыль"] = ПродалиСумма - Цена*Результат.КупилиКоличество - Результат.ОбщаяСуммаДоставки - Результат.Премия;
				КонецЕсли;
				ОбластьМакетаСтрока.Параметры["ЦенаПродажи"] = Окр(ПродалиСумма/Результат.ПродалиКоличество,0,РежимОкругления.Окр15как20);
				ОбластьМакетаСтрока.Параметры["ПродалиСумма"] = ПродалиСумма;
				
				Если Дата(Результат.Дата) >= ОстаткиПо62счетуКорректныНаДату Тогда 
					//ПродалиСумма = Результат.ПродалиСумма;
					ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Найти(Результат.Контрагент,"Субконто1");
					Если ТекСтрТЗ <> Неопределено Тогда 
						Если ТекСтрТЗ.СуммаОстатокКт >=0 Тогда 
							Если ТекСтрТЗ.СуммаОстатокКт <= ПродалиСумма Тогда 
								ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма - ТекСтрТЗ.СуммаОстатокКт;
								ОбластьМакетаСтрока.Параметры["Расчет"] =  ТекСтрТЗ.СуммаОстатокКт;
							Иначе 
								ОбластьМакетаСтрока.Параметры["Долг"] = 0;
								ОбластьМакетаСтрока.Параметры["Расчет"] = ПродалиСумма;
							КонецЕсли;
						Иначе
							ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма;
						КонецЕсли;
						ТекСтрТЗ.СуммаОстатокКт = ТекСтрТЗ.СуммаОстатокКт - ПродалиСумма;
					Иначе 
						ТекСтрТЗ = ТаблицаПоступленийПоКонтрагентам.Добавить();
						ТекСтрТЗ.Субконто1 = Результат.Контрагент;
						ТекСтрТЗ.СуммаОстатокКт = -ПродалиСумма;
						ОбластьМакетаСтрока.Параметры["Долг"] = ПродалиСумма;
					КонецЕсли;	
					ТекСтрТЗ.Отгрузки = ТекСтрТЗ.Отгрузки + ПродалиСумма; 
					
					ОбластьМакетаСтрока.Параметры["Сальдо"] = ТекСтрТЗ.СуммаОстатокКт;
					
					Премия = Результат.Премия;
					Если Премия > 0 Тогда 
						ТекСтрТЗ = ТаблицаВыдачиПремий.Найти(Результат.Контрагент,"Контрагент");
						Если ТекСтрТЗ <> Неопределено Тогда 
							Если ТекСтрТЗ.Сумма >=0 Тогда 
								Если ТекСтрТЗ.Сумма <= Премия Тогда 
									ОбластьМакетаСтрока.Параметры["ПремияДолг"] = Премия - ТекСтрТЗ.Сумма;
									ОбластьМакетаСтрока.Параметры["ПремияРасчет"] =  ТекСтрТЗ.Сумма;
								Иначе 
									ОбластьМакетаСтрока.Параметры["ПремияДолг"] = 0;
									ОбластьМакетаСтрока.Параметры["ПремияРасчет"] = Премия;
								КонецЕсли;
							Иначе
								ОбластьМакетаСтрока.Параметры["ПремияДолг"] = Премия;
							КонецЕсли;
							ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - Премия;
						Иначе 
							ТекСтрТЗ = ТаблицаВыдачиПремий.Добавить();
							ТекСтрТЗ.Контрагент = Результат.Контрагент;
							ТекСтрТЗ.Сумма = -Премия;
							ОбластьМакетаСтрока.Параметры["ПремияДолг"] = Премия;
						КонецЕсли;	
						ОбластьМакетаСтрока.Параметры["ПремияСальдо"] = ТекСтрТЗ.Сумма;
					КонецЕсли;
					
					ОбщаяСуммаДоставки = Результат.ОбщаяСуммаДоставки;
					Если ОбщаяСуммаДоставки > 0 Тогда 
						Если результат.дата >= РасчетыПоДоставкеС Тогда 
							ТекСтрТЗ = ТаблицаОплатДоставок.Найти(Результат.КонтрагентДоставка,"Контрагент");
							Если ТекСтрТЗ <> Неопределено Тогда 
								Если ТекСтрТЗ.Сумма >=0 Тогда 
									Если ТекСтрТЗ.Сумма <= ОбщаяСуммаДоставки Тогда 
										ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = ОбщаяСуммаДоставки - ТекСтрТЗ.Сумма;
										ОбластьМакетаСтрока.Параметры["ДоставкаРасчет"] =  ТекСтрТЗ.Сумма;
									Иначе 
										ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = 0;
										ОбластьМакетаСтрока.Параметры["ДоставкаРасчет"] = ОбщаяСуммаДоставки;
									КонецЕсли;
								Иначе
									ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = ОбщаяСуммаДоставки;
								КонецЕсли;
								ТекСтрТЗ.Сумма = ТекСтрТЗ.Сумма - ОбщаяСуммаДоставки;
							Иначе 
								ТекСтрТЗ = ТаблицаВыдачиПремий.Добавить();
								ТекСтрТЗ.Контрагент = Результат.Контрагент;
								ТекСтрТЗ.Сумма = -ОбщаяСуммаДоставки;
								ОбластьМакетаСтрока.Параметры["ДоставкаДолг"] = ОбщаяСуммаДоставки;
							КонецЕсли;	
							ОбластьМакетаСтрока.Параметры["ДоставкаСальдо"] = ТекСтрТЗ.Сумма;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ВыводитьСтроку = Истина;
				
				Если ВыводитьТолькоДолжников И ОбластьМакетаСтрока.Параметры["Сальдо"] >= 0 Тогда 
					ВыводитьСтроку = Ложь
				КонецЕсли;
				
				Если ВыводитьТолькоДолгиПоПремиям И ОбластьМакетаСтрока.Параметры["ПремияСальдо"] >= 0 Тогда 
					ВыводитьСтроку = Ложь
				КонецЕсли;
				
				Если ВыводитьТолькоДолгиПоДоставкам И ОбластьМакетаСтрока.Параметры["ДоставкаСальдо"] >= 0 Тогда
					ВыводитьСтроку = Ложь
				КонецЕсли;

				Если ЗначениеЗаполнено(ТипНоменклатуры) Тогда 
					Если  Результат.Номенклатура.ТипНоменклатуры <> ТипНоменклатуры Тогда 
						ВыводитьСтроку = Ложь
					КонецЕсли;
				КонецЕсли;
				
				Если ВыводитьСтроку Тогда 
					ТабДокумент.Вывести(ОбластьМакетаСтрока);
				КонецЕсли;
			Иначе
				Если (Не ВыводитьТолькоДолжников)И(НЕ ВыводитьТолькоДолгиПоПремиям)И(НЕ ВыводитьТолькоДолгиПоДоставкам) Тогда
					Если Не ФормаДляПокупателя тогда
						ОбластьМакетаИтог.Параметры["ИтПростойСумма"] = ИтПростойСумма;
						ОбластьМакетаИтог.Параметры["ИтПремия"] = ИтПремия;
						ОбластьМакетаИтог.Параметры["ИтКупилиКоличество"] = ИтКупилиКоличество;
						ОбластьМакетаИтог.Параметры["ИтКупилиСумма"] = ИтКупилиСумма;
						ОбластьМакетаИтог.Параметры["ИтПрибыль"] = ИтПрибыль;
					КонецЕсли;
					ОбластьМакетаИтог.Параметры["ИтКоличествоДоставка"] = ИтКоличествоДоставка;
					ОбластьМакетаИтог.Параметры["ИтОбщаяСуммаДоставки"] = ИтОбщаяСуммаДоставки;
					ОбластьМакетаИтог.Параметры["ИтПродалиКоличество"] = ИтПродалиКоличество;
					ОбластьМакетаИтог.Параметры["ИтПродалиСумма"] = ИтПродалиСумма;
				КонецЕсли;
				ТабДокумент.Вывести(ОбластьМакетаИтог);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//	ТабДокумент.ФиксацияСверху = ТабДокумент.Области.Шапка.Низ;
	ТабДокумент.ТолькоПросмотр = Истина;	
	ТабДокумент.Показать("Общий отчет");
	ТабДокумент.ФиксацияСверху = ТабДокумент.Области.Шапка.Низ;
	
	Если ВыводитьДолжниковИКредиторов Тогда 
		
		
		ТаблицаПоступленийПоКонтрагентамДебиторы = ТаблицаПоступленийПоКонтрагентам.СкопироватьКолонки();
		//ТаблицаПоступленийПоКонтрагентамДебиторы.Очистить();
		ТаблицаПоступленийПоКонтрагентамКредиторы = ТаблицаПоступленийПоКонтрагентамДебиторы.Скопировать();
		
		Для Каждого СтрТаблицаПоступленийПоКонтрагентам Из ТаблицаПоступленийПоКонтрагентам Цикл 
			Если СтрТаблицаПоступленийПоКонтрагентам.СуммаОстатокКТ > 0 Тогда
				НовСтр = ТаблицаПоступленийПоКонтрагентамКредиторы.Добавить();
							
				НовСтр.Субконто1 = СтрТаблицаПоступленийПоКонтрагентам.Субконто1;
				НовСтр.НачальныйОстаток = СтрТаблицаПоступленийПоКонтрагентам.НачальныйОстаток;
				НовСтр.Отгрузки = СтрТаблицаПоступленийПоКонтрагентам.Отгрузки;
				НовСтр.СуммаОстатокКТ = СтрТаблицаПоступленийПоКонтрагентам.СуммаОстатокКТ;
			ИначеЕсли СтрТаблицаПоступленийПоКонтрагентам.СуммаОстатокКТ < 0 Тогда
				НовСтр = ТаблицаПоступленийПоКонтрагентамДебиторы.Добавить();
							
				НовСтр.Субконто1 = СтрТаблицаПоступленийПоКонтрагентам.Субконто1;
				НовСтр.НачальныйОстаток = СтрТаблицаПоступленийПоКонтрагентам.НачальныйОстаток;
				НовСтр.Отгрузки = СтрТаблицаПоступленийПоКонтрагентам.Отгрузки;
				НовСтр.СуммаОстатокКТ = СтрТаблицаПоступленийПоКонтрагентам.СуммаОстатокКТ;

			КонецЕсли;
		КонецЦикла;
	
		ТаблицаПоступленийПоКонтрагентамДебиторы.Сортировать("Субконто1");
		ТаблицаПоступленийПоКонтрагентамКредиторы.Сортировать("Субконто1");
		ТабДокумент2 = Новый ТабличныйДокумент;
		Макет = ПолучитьМакет("ДолжникиИКредиторы");
			
		ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьМакетаИтогОбщий        = Макет.ПолучитьОбласть("ИтогОбщий");
		ОбластьМакетаИтог             = Макет.ПолучитьОбласть("Итог");
		
		ОбластьМакетаШапка.Параметры.КонДата = Формат(КонДата,"ДФ=dd.MM.yyyy" );
		ОбластьМакетаШапка.Параметры.Контрагент = Контрагент;
		
		ТабДокумент2.Вывести(ОбластьМакетаШапка);
		
		ОбластьМакетаИтогОбщий.Параметры.НачальныйОстаток = ТаблицаПоступленийПоКонтрагентам.Итог("НачальныйОстаток");
		ОбластьМакетаИтогОбщий.Параметры.Отгрузки = ТаблицаПоступленийПоКонтрагентам.Итог("Отгрузки");
		ОбластьМакетаИтогОбщий.Параметры.СуммаОстатокКТ = ТаблицаПоступленийПоКонтрагентам.Итог("СуммаОстатокКТ");
		
		ТабДокумент2.НачатьАвтогруппировкуСтрок();

		ТабДокумент2.Вывести(ОбластьМакетаИтогОбщий,1);
			    //выводим дебиторов
		ОбластьМакетаИтог.Параметры.ТипПокупателя = "Дебиторы";
		ОбластьМакетаИтог.Параметры.НачальныйОстаток = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("НачальныйОстаток");
		ОбластьМакетаИтог.Параметры.Отгрузки 		 = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("Отгрузки");
		ОбластьМакетаИтог.Параметры.СуммаОстатокКТ   = ТаблицаПоступленийПоКонтрагентамДебиторы.Итог("СуммаОстатокКТ");
		ТабДокумент2.Вывести(ОбластьМакетаИтог,2);

		Для Каждого СтрТаблицаПоступленийПоКонтрагентамДебиторы Из ТаблицаПоступленийПоКонтрагентамДебиторы Цикл 
		      	ОбластьМакетаСтрока.Параметры.Заполнить(СтрТаблицаПоступленийПоКонтрагентамДебиторы);
				ТабДокумент2.Вывести(ОбластьМакетаСтрока,3);
		КонецЦикла;
		
		//выводим кредиторов
		ОбластьМакетаИтог.Параметры.ТипПокупателя = "Кредиторы";
		ОбластьМакетаИтог.Параметры.НачальныйОстаток = ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("НачальныйОстаток");
		ОбластьМакетаИтог.Параметры.Отгрузки 		 = ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("Отгрузки");
		ОбластьМакетаИтог.Параметры.СуммаОстатокКТ   = ТаблицаПоступленийПоКонтрагентамКредиторы.Итог("СуммаОстатокКТ");
		ТабДокумент2.Вывести(ОбластьМакетаИтог,2);

		Для Каждого СтрТаблицаПоступленийПоКонтрагентамКредиторы Из ТаблицаПоступленийПоКонтрагентамКредиторы Цикл 
		      	ОбластьМакетаСтрока.Параметры.Заполнить(СтрТаблицаПоступленийПоКонтрагентамКредиторы);
				ТабДокумент2.Вывести(ОбластьМакетаСтрока,3);
		КонецЦикла;
		ТабДокумент2.ЗакончитьАвтогруппировкуСтрок();

		ТабДокумент2.ПоказатьУровеньГруппировокСтрок(1);
		ТабДокумент2.ТолькоПросмотр = Истина;	
		ТабДокумент2.Показать("Общий отчет");
		ТабДокумент2.ФиксацияСверху = ТабДокумент2.Области.Шапка.Низ;

	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачДата, ?(КонДата='0001-01-01', КонДата, КонецДня(КонДата)));
	Если НастройкаПериода.Редактировать() Тогда
		НачДата = НастройкаПериода.ПолучитьДатуНачала();
		КонДата = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыДолжникиКредиторы(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры
