Перем АБЗИсток,АБЗИстокКонтрагент;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	АБЗИсток = Справочники.Организации.НайтиПоНаименованию("ООО ""АБЗ ""Исток""");
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СобственныеКонтрагенты.Организация,
	|	СобственныеКонтрагенты.Контрагент
	|ИЗ
	|	РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|ГДЕ
	|	СобственныеКонтрагенты.Организация = &Организация";
	Запрос.УстановитьПараметр("Организация", АБЗИсток);
	РЕзультат = Запрос.Выполнить().Выбрать();
	
	Пока РЕзультат.Следующий() Цикл 
		АБЗИстокКонтрагент = РЕзультат.Контрагент	
	КонецЦикла;
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслуг.Ссылка
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
	               |	И РеализацияТоваровУслуг.ЗаведеноАвтоматическиПоОтгрузкам
	               |	И РеализацияТоваровУслуг.Организация = &Организация
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслуг.Ссылка
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
	               |	И ПоступлениеТоваровУслуг.ЗаведеноАвтоматическиПоОтгрузкам
	               |	И ПоступлениеТоваровУслуг.Контрагент = &АБЗИстокКонтрагент";
	
	Запрос.УстановитьПараметр("Организация", АБЗИсток);
	Запрос.УстановитьПараметр("АБЗИстокКонтрагент", АБЗИстокКонтрагент);
	Запрос.УстановитьПараметр("НачДата",НачДата);
	Запрос.УстановитьПараметр("КонДата",КонецДня(КонДата));
	
	РЕзультат = Запрос.Выполнить().Выбрать();
	Пока РЕзультат.Следующий() Цикл 
		ТекДок = РЕзультат.Ссылка;	
		Док = ТекДок.ПолучитьОбъект();
		Док.ПометкаУдаления = Истина;
		Док.Записать();
		Если РеальноУдалять Тогда 
			Док.Удалить();
		КонецЕсли;

	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Ссылка.Организация
	|ПОМЕСТИТЬ РеализацииОтбор
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
	|	И РеализацияТоваровУслугТовары.Ссылка.ВнутреннийНомерНакладной > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Ссылка.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацииОтбор.Количество,
	|	РеализацииОтбор.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Цена,
	|	ЦеныНоменклатурыСрезПоследних.Цена * РеализацииОтбор.Количество КАК Сумма,
	|	РеализацииОтбор.Организация
	|ПОМЕСТИТЬ Запрос
	|ИЗ
	|	РеализацииОтбор КАК РеализацииОтбор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&КонДата, ТипЦен = &Себестоимость) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО РеализацииОтбор.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Запрос.Количество,
	|	Запрос.Номенклатура,
	|	Запрос.Цена,
	|	Запрос.Сумма,
	|	Запрос.Организация
	|ИЗ
	|	Запрос КАК Запрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НоменклатураДляФормированияОтгрузокТовара КАК НоменклатураДляФормированияОтгрузокТовара
	|		ПО Запрос.Номенклатура = НоменклатураДляФормированияОтгрузокТовара.Номенклатура";
	
	
	Себестоимость = Справочники.ТипыЦенНоменклатуры.НайтиПоНаименованию("Себестоимость");
	
	Запрос.УстановитьПараметр("Себестоимость",Себестоимость);
	Запрос.УстановитьПараметр("НачДата",НачДата);
	Запрос.УстановитьПараметр("КонДата",КонецДня(КонДата));
	//	 1. по предыдущему дню на основании продаж, сделать сделующие доки. 
	//Отгрузка от абз на строй св ровно такое кол-во тонн асф, сколько отгрузили, 
	//отгрузка от абз на строй ритейл, отгрузка от абз на тд исток. (Если такие продажи были естественно)
	//. Ну и соответственно сразу же док-нит поступление  формировался на св,ритейл и тд.
	ТекСклад = Справочники.Склады.НайтиПоНаименованию("Основной склад");
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		ТекОрганизация = РЕзультат.Организация;
		Если ТекОрганизация = АБЗИсток Тогда 
			Продолжить;
		КонецЕсли;
		
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СобственныеКонтрагенты.Организация,
		|	СобственныеКонтрагенты.Контрагент
		|ИЗ
		|	РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
		|ГДЕ
		|	СобственныеКонтрагенты.Организация = &Организация";
		
		Запрос.УстановитьПараметр("Организация", ТекОрганизация);
		РЕзультат1 = Запрос.Выполнить().Выбрать();
		
		Пока РЕзультат1.Следующий() Цикл 
			ТекКонтрагент = РЕзультат1.Контрагент;	
		КонецЦикла;
		
		Если ТекКонтрагент = "" Тогда 
			Предупреждение("Не найден собственный контрагент для "+ ТекОрганизация);
			Возврат;
		КонецЕсли;
		
		Док = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
		Док.Дата = НачалоДня(НачДата)+1;
		
		Док.Организация = АБЗИсток;
		Док.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
		Док.СуммаВключаетНДС = Истина;
		Док.УчитыватьНДС = Истина;
		Док.Склад = ТекСклад;
		Док.Контрагент = ТекКонтрагент;
		Док.ДоговорКонтрагента = Контрагент.ОсновнойДоговорКонтрагента;
		Док.ВалютаДокумента = Док.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		Док.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
		Док.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
		
		СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(ТекОрганизация , ТекКонтрагент, ТекКонтрагент.ОсновнойДоговорКонтрагента);
		
		СтрДок = Док.ЭтотОбъект.Товары.Добавить();
		СтрДок.Номенклатура = РЕзультат.Номенклатура;
		СтрДок.Количество = РЕзультат.Количество;
		СтрДок.ЕдиницаИзмерения = Номенклатура.БазоваяЕдиницаИзмерения;
		СтрДок.Цена = РЕзультат.Цена;
		ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрДок, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрДок, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрДок, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧастиПоДокументу(СтрДок, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧастиПоДокументу(СтрДок, Док);
		Док.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрДок, "Товары", Истина);
		Док.ЗаполнитьСчетаУчетаРасчетов(СчетаУчета);		
		Док.Комментарий = "Занесено автоматически из обработки формирование внутренних накладных на товары.";
		Док.ЗаведеноАвтоматическиПоОтгрузкам = Истина;
		//Док.ДокументОснование = ТекПоступление;
		
		Док.Записать();
		Сообщить("Создан "+Док);
		
		ТекРеализация = Док.Ссылка;
		
		Док = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
		Док.Дата = НачалоДня(НачДата)+2;
		Док.Организация = ТекОрганизация;
		Док.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
		Док.СуммаВключаетНДС = Истина;
		Док.УчитыватьНДС = Истина;
		Док.Склад = ТекСклад;
		Док.Контрагент = АБЗИстокКонтрагент;
		Док.ДоговорКонтрагента = АБЗИстокКонтрагент.ОсновнойДоговорКонтрагента;
		Док.ВалютаДокумента = АБЗИстокКонтрагент.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов;
		Док.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
		Док.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
		
		СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(ТекОрганизация, АБЗИстокКонтрагент, АБЗИстокКонтрагент.ОсновнойДоговорКонтрагента);
		
		СтрДок = Док.ЭтотОбъект.Товары.Добавить();
		СтрДок.Номенклатура = РЕзультат.Номенклатура;
		СтрДок.Количество = РЕзультат.Количество;
		СтрДок.ЕдиницаИзмерения = РЕзультат.Номенклатура.БазоваяЕдиницаИзмерения;
		СтрДок.Цена = РЕзультат.Цена;
		ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрДок, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрДок, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрДок, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧастиПоДокументу(СтрДок, Док);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧастиПоДокументу(СтрДок, Док);
		Док.ЗаполнитьСчетаУчетаВТабЧасти(Док.Товары        , "Товары"        , Истина, Истина);
		Док.ЗаполнитьСчетаУчетаРасчетов(СчетаУчета);	
		Док.Комментарий = "Занесено автоматически из обработки формирование внутренних накладных на товары.";
		Док.ДокументОснование = ТекРеализация.Ссылка;
		Док.ЗаведеноАвтоматическиПоОтгрузкам = Истина;
		
		Док.Записать();
		Сообщить("Создан "+Док);
	КонецЦикла;
	
	
	//Для Каждого СтрТЧ Из ТабличнаяЧасть1 Цикл 
	//	ТекПоступление = СтрТЧ.ПоступлениеТоваров;
	//	ТекРеализация = СтрТЧ.РеализацияТоваров;
	//	ТекПоступлениеПоРеализации = СтрТЧ.ПоступлениеПоРеализации;
	//	Сумма = СтрТЧ.Сумма;
	//	Количество = СтрТЧ.Количество;
	//	
	//	Если ЗначениеЗаполнено(Сумма) И ЗначениеЗаполнено(Количество) Тогда 
	//		Цена = (Сумма/Количество);
	//		Если ТипНаценки = Перечисления.ТипНаценки.СуммаНаценки Тогда 
	//			Цена = Цена + СуммаНаценки;
	//		Иначе 
	//			Цена = СуммаНаценки;
	//		КонецЕсли;
	//		
	//		Если Не ЗначениеЗаполнено(ТекРеализация) Тогда 
	//			Док = Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	//			Док.Дата = ТекПоступление.Дата+1;
	//			Док.Организация = Организация;
	//			Док.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
	//			Док.СуммаВключаетНДС = Истина;
	//			Док.УчитыватьНДС = Истина;
	//			Док.Склад = ТекПоступление.Склад;
	//			Док.Контрагент = КонтрагентРеализация;
	//			Док.ДоговорКонтрагента = Контрагент.ОсновнойДоговорКонтрагента;
	//			Док.ВалютаДокумента = Док.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	//			Док.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
	//			Док.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
	//			
	//			СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Организация , Контрагент, Контрагент.ОсновнойДоговорКонтрагента);
	//			
	//			СтрДок = Док.ЭтотОбъект.Товары.Добавить();
	//			СтрДок.Номенклатура = Номенклатура;
	//			СтрДок.Количество = Количество;
	//			СтрДок.ЕдиницаИзмерения = Номенклатура.БазоваяЕдиницаИзмерения;
	//			СтрДок.Цена = Цена;
	//			ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрДок, Док);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрДок, Док);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрДок, Док);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧастиПоДокументу(СтрДок, Док);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧастиПоДокументу(СтрДок, Док);
	//			Док.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрДок, "Товары", Истина);
	//			Док.ЗаполнитьСчетаУчетаРасчетов(СчетаУчета);		
	//			Док.Комментарий = "Занесено автоматически из обработки формирование внутренних перемещений.";
	//			Док.ДокументОснование = ТекПоступление;
	//			
	//			Док.Записать();
	//			ТекРеализация = Док.Ссылка;
	//		КонецЕсли;
	//		
	//		Если Не ЗначениеЗаполнено(ТекПоступлениеПоРеализации) Тогда 
	//			Док = Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	//			Док.Дата = ТекПоступление.Дата + 2;
	//			Док.Организация = Организация2;
	//			Док.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПокупкаКомиссия;
	//			Док.СуммаВключаетНДС = Истина;
	//			Док.УчитыватьНДС = Истина;
	//			Док.Склад = ТекПоступление.Склад;
	//			Док.Контрагент = КонтрагентПоступление;
	//			Док.ДоговорКонтрагента = Контрагент1.ОсновнойДоговорКонтрагента;
	//			Док.ВалютаДокумента = Контрагент1.ОсновнойДоговорКонтрагента.ВалютаВзаиморасчетов;
	//			Док.СпособЗачетаАвансов = Перечисления.СпособыЗачетаАвансов.Автоматически;
	//			Док.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
	//			
	//			СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Организация2, Контрагент1, Контрагент1.ОсновнойДоговорКонтрагента);
	//			
	//			СтрДок = Док.ЭтотОбъект.Товары.Добавить();
	//			СтрДок.Номенклатура = Номенклатура;
	//			СтрДок.Количество = Количество;
	//			СтрДок.ЕдиницаИзмерения = Номенклатура.БазоваяЕдиницаИзмерения;
	//			СтрДок.Цена = Цена;
	//			ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрДок, Док);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрДок, Док);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрДок, Док);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧастиПоДокументу(СтрДок, Док);
	//			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧастиПоДокументу(СтрДок, Док);
	//			Док.ЗаполнитьСчетаУчетаВТабЧасти(Док.Товары        , "Товары"        , Истина, Истина);
	//			Док.ЗаполнитьСчетаУчетаРасчетов(СчетаУчета);	
	//			Док.Комментарий = "Занесено автоматически из обработки.";
	//			Док.ДокументОснование = ТекРеализация.Ссылка;
	//			
	//			Док.Записать();
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1УдалитьСформированные(Кнопка)
	
	АБЗИсток = Справочники.Организации.НайтиПоНаименованию("ООО ""АБЗ ""Исток""");
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СобственныеКонтрагенты.Организация,
	|	СобственныеКонтрагенты.Контрагент
	|ИЗ
	|	РегистрСведений.СобственныеКонтрагенты КАК СобственныеКонтрагенты
	|ГДЕ
	|	СобственныеКонтрагенты.Организация = &Организация";
	Запрос.УстановитьПараметр("Организация", АБЗИсток);
	РЕзультат = Запрос.Выполнить().Выбрать();
	
	Пока РЕзультат.Следующий() Цикл 
		АБЗИстокКонтрагент = РЕзультат.Контрагент	
	КонецЦикла;

	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровУслуг.Ссылка
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
	               |	И РеализацияТоваровУслуг.ЗаведеноАвтоматическиПоОтгрузкам
	               |	И РеализацияТоваровУслуг.Организация = &Организация
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслуг.Ссылка
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.Дата МЕЖДУ &НачДата И &КонДата
	               |	И ПоступлениеТоваровУслуг.ЗаведеноАвтоматическиПоОтгрузкам
	               |	И ПоступлениеТоваровУслуг.Контрагент = &АБЗИстокКонтрагент";
	
	Запрос.УстановитьПараметр("Организация", АБЗИсток);
	Запрос.УстановитьПараметр("АБЗИстокКонтрагент", АБЗИстокКонтрагент);
	Запрос.УстановитьПараметр("НачДата",НачДата);
	Запрос.УстановитьПараметр("КонДата",КонецДня(КонДата));
	
	РЕзультат = Запрос.Выполнить().Выбрать();
	Пока РЕзультат.Следующий() Цикл 
		ТекДок = РЕзультат.Ссылка;	
		Док = ТекДок.ПолучитьОбъект();
		Док.ПометкаУдаления = Истина;
		Док.Записать();
		Если РеальноУдалять Тогда 
			Док.Удалить();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПриОткрытии()
	НачДата = НачалоДня(НачалоДня(ТекущаяДата()) - 1);
	КонДата = КонецДня(НачалоДня(ТекущаяДата()) - 1);
	КнопкаВыполнитьНажатие("");
	ЗавершитьРаботуСистемы(Ложь);
КонецПроцедуры
