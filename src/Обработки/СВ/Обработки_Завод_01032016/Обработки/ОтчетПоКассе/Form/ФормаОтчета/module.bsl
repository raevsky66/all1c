
Процедура КнопкаСформироватьНажатие(Кнопка)
	ЭлементыФормы.ПолеТабличногоДокумента1.Очистить();
	Макет = ПолучитьМакет("Макет");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");

	ОбластьМакета.Параметры["НачПериода"] = Формат(НачПериода, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры["КонПериода"] = Формат(КонПериода,"ДФ=dd.MM.yyyy");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета);
	
	Запрос = Новый Запрос;
	Если НЕ ЗначениеЗаполнено(ПрочиеДоходыИРасходы) Тогда 
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОстаткиИОбороты.Организация,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт НачальныйОстаток,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт ИтПриход,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт ИтРасход,
	               |	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КонечныйОстаток
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, , Счет = &Счет, , ) КАК ХозрасчетныйОстаткиИОбороты";
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		Запрос.Текст = Запрос.Текст+ " 
		|ГДЕ
		|	ХозрасчетныйОстаткиИОбороты.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("51"));
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
		ОбластьМакета.Параметры.Заполнить(Результат);
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета);
	КонецЦикла;
КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ
	                |	ХозрасчетныйДвиженияССубконто.Регистратор,
	                |	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	                |	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	                |	ХозрасчетныйДвиженияССубконто.Сумма,
	                |	ХозрасчетныйДвиженияССубконто.СчетДт,
	                |	ХозрасчетныйДвиженияССубконто.СчетКт,
	                |	ХозрасчетныйДвиженияССубконто.Период
	                |ПОМЕСТИТЬ Движения
	                |ИЗ
	                |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	                |			&ДатаНачала,
	                |			&ДатаКонца,
	                |			(счетДт = &Счет
	                |				ИЛИ СчетКт = &Счет)";
					
					Если ЗначениеЗаполнено(ПрочиеДоходыИРасходы) Тогда 
						Запрос.Текст = Запрос.Текст+ " 
						|				И (СубконтоДт1 = &Субконто
						|					ИЛИ СубконтоКт1 = &Субконто)";
					КонецЕсли;
					
					Запрос.Текст = Запрос.Текст+ " 
					|,
					|			,
					|			) КАК ХозрасчетныйДвиженияССубконто";
					
					Если ЗначениеЗаполнено(Организация) Тогда 
						Запрос.Текст = Запрос.Текст+ " 
						|ГДЕ
						|	ХозрасчетныйДвиженияССубконто.Организация = &Организация";
						Запрос.УстановитьПараметр("Организация", Организация);
					КонецЕсли;
					
					Запрос.Текст = Запрос.Текст+ " 
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	Движения.Регистратор,
	                |	Движения.Сумма,
	                |	ВЫБОР
	                |		КОГДА Движения.СчетДт = &Счет
	                |			ТОГДА Движения.СубконтоДт1
	                |		ИНАЧЕ Движения.СубконтоКт1
	                |	КОНЕЦ КАК ДДС,
	                |	ВЫБОР
	                |		КОГДА Движения.СчетДт = &Счет
	                |			ТОГДА Движения.Сумма
	                |		ИНАЧЕ 0
	                |	КОНЕЦ КАК Приход,
	                |	ВЫБОР
	                |		КОГДА Движения.СчетКт = &Счет
	                |			ТОГДА Движения.Сумма
	                |		ИНАЧЕ 0
	                |	КОНЕЦ КАК Расход,
	                |	ВЫБОР
	                |		КОГДА Движения.СчетДт = &Счет
	                |			ТОГДА Движения.СубконтоКт1
	                |		ИНАЧЕ Движения.СубконтоДт1
	                |	КОНЕЦ КАК Контрагент,
	                |	Движения.Период
	                |ПОМЕСТИТЬ Движения1
	                |ИЗ
	                |	Движения КАК Движения
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	СтатьиДвиженияДенежныхСредств.Родитель КАК Родитель,
	                |	Движения1.ДДС КАК ДДС,
	                |	Движения1.Регистратор КАК документ,
	                |	СУММА(Движения1.Приход) КАК Приход,
	                |	СУММА(Движения1.Расход) КАК Расход,
	                |	Движения1.Контрагент,
	                |	Движения1.Период КАК Период
	                |ИЗ
	                |	Движения1 КАК Движения1
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
	                |		ПО Движения1.ДДС = СтатьиДвиженияДенежныхСредств.Ссылка
	                |
	                |СГРУППИРОВАТЬ ПО
	                |	СтатьиДвиженияДенежныхСредств.Родитель,
	                |	Движения1.ДДС,
	                |	Движения1.Регистратор,
	                |	Движения1.Контрагент,
	                |	Движения1.Период
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Период
	                |ИТОГИ
	                |	СУММА(Приход),
	                |	СУММА(Расход)
	                |ПО
	                |	ОБЩИЕ,
	                |	Родитель,
	                |	ДДС";
	

	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("51"));
	Запрос.УстановитьПараметр("Субконто", ПрочиеДоходыИРасходы);
	
	ЭлементыФормы.ПолеТабличногоДокумента1.НачатьАвтогруппировкуСтрок();
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		Если ЗначениеЗаполнено(ПрочиеДоходыИРасходы) Тогда 
			ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
			ОбластьМакета.Параметры.Заполнить(Результат);
			ОбластьМакета.Параметры.ИтПриход = Результат.Приход;
			ОбластьМакета.Параметры.ИтРасход = Результат.Расход;
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета);
		КонецЕсли;

		Родители = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Родители.Следующий() Цикл 
			ОбластьМакета = Макет.ПолучитьОбласть("Строка3");
			ОбластьМакета.Параметры.Заполнить(Родители);
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Родители.Уровень());
		Статьи = Родители.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Статьи.Следующий() Цикл 
			ОбластьМакета = Макет.ПолучитьОбласть("Строка2");
			ОбластьМакета.Параметры.Заполнить(Статьи);
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Статьи.Уровень());
			ДетальныеЗаписи = Статьи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ДетальныеЗаписи.Следующий() Цикл 
				ОбластьМакетаС = Макет.ПолучитьОбласть("Строка");
				ОбластьМакетаС.Параметры.Заполнить(ДетальныеЗаписи);
				ОбластьМакетаС.Параметры.Контрагент = ДетальныеЗаписи.Контрагент;
				ОбластьМакетаС.Параметры.Комментарий = ДетальныеЗаписи.Документ.Комментарий;
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакетаС,ДетальныеЗаписи.Уровень());
			КонецЦикла;
		КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ЭлементыФормы.ПолеТабличногоДокумента1.ЗакончитьАвтогруппировкуСтрок();
	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(0);
	ЭлементыФормы.ПолеТабличногоДокумента1.ТолькоПросмотр = Истина;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

