
Процедура КнопкаВыполнитьНажатие(Кнопка)
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.ОткрытьФайл(путь);
	
	Пока ЧтениеXML.Прочитать() Цикл                  
		ПолучитьXMLТип(ЧтениеXML);
		Если ЧтениеXML.Имя = "СписаниеСРасчетногоСчета" Тогда 
			НовыйЭлемент = Документы.СписаниеСРасчетногоСчета.СоздатьДокумент();
			сообщить("Новый документ!");
			Пока 1=1 цикл
				ЧтениеXML.Прочитать();	  
				Если (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)И(ЧтениеXML.Имя = "СписаниеСРасчетногоСчета") Тогда 
					Прервать;
				КонецЕсли;
				Если  ЧтениеXML.Имя = "ТабЧасть" Тогда 
					ЧтениеXML.Прочитать();
					НаменованиеТЧ = ЧтениеXML.Значение;
					//сообщить("Табличная чать "+ЧтениеXML.Значение);
					Пока  1=1 Цикл 
						ЧтениеXML.Прочитать();
						Если (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)И(ЧтениеXML.Имя = "ТабЧасть") Тогда 
							Прервать;
						КонецЕсли;
						//Сообщить("Новая строка");
						Если СокрЛП(НаменованиеТЧ) = "РасшифровкаПлатежа" Тогда 
							НовСтр = НовыйЭлемент.РасшифровкаПлатежа.Добавить();
							
							Пока  1=1 Цикл 
								ЧтениеXML.Прочитать();
								Если (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)И(ЧтениеXML.Имя = "СтрокаТЧ") Тогда 
									Прервать;
								КонецЕсли;
								Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
									ИмяРеквизита = ЧтениеXML.Имя; 
								конецесли;
								Если  ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда 
									//сообщить(ИмяРеквизита+":"+ЧтениеXML.Значение);
									Если  ИмяРеквизита = "КурсВзаиморасчетов" Тогда 
										НовСтр.КурсВзаиморасчетов = Число(ЧтениеXML.Значение);
									ИначеЕсли   ИмяРеквизита = "СуммаПлатежа" Тогда 
										НовСтр.СуммаПлатежа = Число(ЧтениеXML.Значение);
									ИначеЕсли   ИмяРеквизита = "СуммаВзаиморасчетов" Тогда 
										НовСтр.СуммаВзаиморасчетов = Число(ЧтениеXML.Значение);
									ИначеЕсли   ИмяРеквизита = "СтавкаНДС" Тогда 
										Если ЧтениеXML.Значение = "18%" Тогда 
											НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
										КонецЕсли;
									ИначеЕсли   ИмяРеквизита = "СуммаНДС" Тогда 
										НовСтр.СуммаНДС = Число(ЧтениеXML.Значение);
									ИначеЕсли  ИмяРеквизита = "СтатьяДвиженияДенежныхСредств" Тогда 
										ТекНом = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию(ЧтениеXML.Значение);  
										Если ТекНом.Пустая() Тогда 
											Сообщить("Не найдена статья движения ДС "+ ЧтениеXML.Значение);
											Возврат;
										КонецЕсли;
										НовСтр.СтатьяДвиженияДенежныхСредств = ТекНом;
									ИначеЕсли  ИмяРеквизита = "СчетУчетаРасчетовСКонтрагентом" Тогда 
										ТекСчет = ПланыСчетов.Хозрасчетный.НайтиПоКоду(ЧтениеXML.Значение);
										Если ТекСчет.Пустая() Тогда 
											Сообщить("Не найден счет "+ ЧтениеXML.Значение);
											Возврат;
										КонецЕсли;
										НовСтр.СчетУчетаРасчетовСКонтрагентом = ТекСчет;
									ИначеЕсли  ИмяРеквизита = "СчетУчетаРасчетовПоАвансам" Тогда 
										ТекСчет = ПланыСчетов.Хозрасчетный.НайтиПоКоду(ЧтениеXML.Значение);
										Если ТекСчет.Пустая() Тогда 
											Сообщить("Не найден счет "+ ЧтениеXML.Значение);
											Возврат;
										КонецЕсли;
										НовСтр.СчетУчетаРасчетовПоАвансам = ТекСчет;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
						ИначеЕсли СокрЛП(НаменованиеТЧ) = "РеквизитыКонтрагента" Тогда 
							НовСтр = НовыйЭлемент.РеквизитыКонтрагента.Добавить();
							
							Пока  1=1 Цикл 
								ЧтениеXML.Прочитать();
								Если (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)И(ЧтениеXML.Имя = "СтрокаТЧ") Тогда 
									Прервать;
								КонецЕсли;
								Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
									ИмяРеквизита = ЧтениеXML.Имя; 
								конецесли;
								Если  ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда 
									Если  ИмяРеквизита = "Реквизит" Тогда 
										НовСтр.Реквизит = ЧтениеXML.Значение;
									ИначеЕсли   ИмяРеквизита = "Значение" Тогда 
										НовСтр.Значение = ЧтениеXML.Значение;
									ИначеЕсли   ИмяРеквизита = "Представление" Тогда 
										НовСтр.Представление = ЧтениеXML.Значение;
									ИначеЕсли   ИмяРеквизита = "ТипКонтрагента" Тогда 
										НовСтр.ТипКонтрагента = ЧтениеXML.Значение;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
							
						ИначеЕсли СокрЛП(НаменованиеТЧ) = "ПеречислениеЗаработнойПлаты" Тогда 
							НовСтр = НовыйЭлемент.ПеречислениеЗаработнойПлаты.Добавить();
							
							Пока  1=1 Цикл 
								ЧтениеXML.Прочитать();
								Если (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)И(ЧтениеXML.Имя = "СтрокаТЧ") Тогда 
									Прервать;
								КонецЕсли;
								Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
									ИмяРеквизита = ЧтениеXML.Имя; 
								конецесли;
								Если  ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда 
									Если  ИмяРеквизита = "СуммаПлатежа" Тогда 
										НовСтр.СуммаПлатежа = Число(ЧтениеXML.Значение);
									ИначеЕсли   ИмяРеквизита = "ФизЛицо" Тогда
										ФизЛицо = ЧтениеXML.Значение;
										ТекФизлицо = Справочники.ФизическиеЛица.НайтиПоНаименованию(ФизЛицо);
										Если ТекФизлицо.Пустая() Тогда 
											Сообщить("Не найдено физ.лицо "+ТекФизлицо);
											Возврат;
										КонецЕсли;
										НовСтр.Физлицо = ТекФизлицо;
									ИначеЕсли   ИмяРеквизита = "СтатьяДвиженияДенежныхСредств" Тогда 
										СтатьяДвиженияДенежныхСредств = ЧтениеXML.Значение;
										ТекСтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию(СтатьяДвиженияДенежныхСредств);
										Если ТекСтатьяДвиженияДенежныхСредств.Пустая() Тогда 
											Сообщить("Не найдена статья движения д/с "+СтатьяДвиженияДенежныхСредств);
											Возврат;
										КонецЕсли;
										НовСтр.СтатьяДвиженияДенежныхСредств = ТекСтатьяДвиженияДенежныхСредств;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;   
				ИначеЕсли (ЧтениеXML.Имя = "Организация")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					Организация = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "Дата")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					Дата = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "Номер")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					Номер = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "НомерВходящегоДокумента")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					НомерВходящегоДокумента = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "ДатаВходящегоДокумента")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					ДатаВходящегоДокумента = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "НазначениеПлатежа")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					НазначениеПлатежа = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СуммаДокумента")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СуммаДокумента = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "ВидОперации")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					ВидОперации = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СтатьяДвиженияДенежныхСредств")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СтатьяДвиженияДенежныхСредств = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СчетУчетаРасчетовСКонтрагентом")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СчетУчетаРасчетовСКонтрагентом = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СубконтоДт1")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СубконтоДт1 = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СубконтоДт2")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СубконтоДт2 = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СубконтоДт3")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СубконтоДт3 = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "ФизЛицо")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					ФизЛицо = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "ДоговорЗайма")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					ДоговорЗайма = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СчетБанк")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СчетБанк = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "ПодразделениеДт")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					ПодразделениеДт = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "НеПодтвержденоВыпискойБанка")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					НеПодтвержденоВыпискойБанка = ЧтениеXML.Значение;
					
				ИначеЕсли (ЧтениеXML.Имя = "Контрагент")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					Контрагент = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СчетКонтрагента")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СчетКонтрагента = ЧтениеXML.Значение;
				КонецЕсли;
			КонецЦикла;
			//сообщить("Организация: " + Организация);
			//сообщить("Контрагент: " + Контрагент);
			//сообщить("Дата: " + Дата);
			
			ТекОрганизация = Справочники.Организации.НайтиПоНаименованию(Организация);
			Если ТекОрганизация.Пустая() Тогда 
				Сообщить("Не найдена организация "+Организация);
				Возврат;
			КонецЕсли;
			
			ТекКонтрагент = Справочники.Контрагенты.НайтиПоНаименованию(Контрагент);
			Если ТекКонтрагент.Пустая() Тогда 
				Сообщить("Не найден контрагент "+Контрагент);
				Возврат;
			КонецЕсли;
			
			ТекСтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию(СтатьяДвиженияДенежныхСредств);
			Если ТекСтатьяДвиженияДенежныхСредств.Пустая() Тогда 
				Сообщить("Не найдена статья движения д/с "+СтатьяДвиженияДенежныхСредств);
				Возврат;
			КонецЕсли;
			
			ТекФизЛицо = Справочники.ФизическиеЛица.НайтиПоНаименованию(ФизЛицо);
			Если ТекФизЛицо.Пустая() Тогда 
				Сообщить("Не найдено физ.лицо "+ФизЛицо);
				Возврат;
			КонецЕсли;
			
			ТекПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			               |	ПодразделенияОрганизаций.Ссылка
			               |ИЗ
			               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			               |ГДЕ
			               |	ПодразделенияОрганизаций.Наименование ПОДОБНО &ПодразделениеДт";
			Запрос.УстановитьПараметр("ПодразделениеДт",ПодразделениеДт);
			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл 
			   	ТекПодразделениеДт = Результат.Ссылка;
			КонецЦикла;
			
			Если ТекПодразделениеДт.Пустая() Тогда 
				Сообщить("Не найдено подразделение "+ПодразделениеДт);
				//Возврат;
			КонецЕсли;
			
			НовыйЭлемент.Организация = ТекОрганизация;
			НовыйЭлемент.СчетОрганизации = ТекОрганизация.ОсновнойБанковскийСчет;
			НовыйЭлемент.Дата = КонецДня(Дата(Дата));
			//НовыйЭлемент.Номер = Номер;
			НовыйЭлемент.НомерВходящегоДокумента = НомерВходящегоДокумента;
			НовыйЭлемент.ДатаВходящегоДокумента = Дата(ДатаВходящегоДокумента);
			НовыйЭлемент.НазначениеПлатежа = НазначениеПлатежа;
			
			Если ВидОперации = "Оплата поставщику" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ОплатаПоставщику;
			ИначеЕсли ВидОперации = "Возврат покупателю" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ВозвратПокупателю;
			ИначеЕсли ВидОперации = "Перечисление налога" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеНалога;
			ИначеЕсли ВидОперации = "Расчеты по кредитам и займам" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.РасчетыПоКредитамИЗаймам;
			ИначеЕсли ВидОперации = "Прочие расчеты с контрагентами" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочиеРасчетыСКонтрагентами;
			ИначеЕсли ВидОперации = "Перевод на другой счет организации" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПереводНаДругойСчет;
			ИначеЕсли ВидОперации = "Перечисление заработной платы" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеЗП;
			ИначеЕсли ВидОперации = "Перечисление подотчетному лицу" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПеречислениеПодотчетномуЛицу;
			ИначеЕсли ВидОперации = "Прочее списание" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийСписаниеДенежныхСредств.ПрочееСписание;
			КонецЕсли;
			
			НовыйЭлемент.СуммаДокумента = Число(СуммаДокумента);
			НовыйЭлемент.СтатьяДвиженияДенежныхСредств = ТекСтатьяДвиженияДенежныхСредств;
			НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчетаРасчетовСКонтрагентом).Ссылка;
			Если НЕ НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.Пустая() Тогда 
				Если НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("91")) Тогда 
					НовыйЭлемент.СубконтоДт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(СубконтоДт1).Ссылка;
				ИначеЕсли НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("69")) Тогда 
					Если СубконтоДт1 = "Налог (взносы): начислено / уплачено" Тогда 
						НовыйЭлемент.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;	
					КонецЕсли;
				ИначеЕсли НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("68")) Тогда 
					Если СубконтоДт1 = "Налог (взносы): начислено / уплачено" Тогда 
						НовыйЭлемент.СубконтоДт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;	
					КонецЕсли;
				ИначеЕсли НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("76")) Тогда 
					НовыйЭлемент.СубконтоДт1 = ТекКонтрагент;	
					НовыйЭлемент.СубконтоДт2 = ТекКонтрагент.ОсновнойДоговорКонтрагента;	
				КонецЕсли;
				
				//НовыйЭлемент.СубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию(СубконтоДт2).Ссылка;
				//НовыйЭлемент.СубконтоДт3 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НайтиПоНаименованию(СубконтоДт3).Ссылка;
			КонецЕсли;
			
			НовыйЭлемент.ФизЛицо = ТекФизЛицо;
			НовыйЭлемент.ДоговорЗайма = ДоговорЗайма;
			НовыйЭлемент.СчетБанк = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетБанк).Ссылка;
			НовыйЭлемент.ПодразделениеДт = ТекПодразделениеДт;
			
			Если  НеПодтвержденоВыпискойБанка = "Да" Тогда 
				НовыйЭлемент.НеПодтвержденоВыпискойБанка = Истина;
			КонецЕсли;
			
			НовыйЭлемент.Контрагент = ТекКонтрагент;
			НовыйЭлемент.СчетКонтрагента = ТекКонтрагент.ОсновнойБанковскийСчет;
			НовыйЭлемент.ВалютаДокумента = Справочники.Валюты.НайтиПоНаименованию("руб");
			НовыйЭлемент.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
			Для Каждого НовСтр из НовыйЭлемент.РасшифровкаПлатежа Цикл 
				НовСтр.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
				НовСтр.КратностьВзаиморасчетов = 1;
				СписокВидовДоговора = УправлениеВзаиморасчетами.ОпределитьВидДоговораСКонтрагентом(НовыйЭлемент.ВидОперации);
				УправлениеВзаиморасчетами.УстановитьДоговорКонтрагента(НовСтр.ДоговорКонтрагента,НовыйЭлемент.Контрагент,НовыйЭлемент.Организация,СписокВидовДоговора);		
			КонецЦикла;
			
			НовыйЭлемент.Комментарий = "Занесено автоматически обработкой переноса. Этот комментарий не изменять!";
			
			НовыйЭлемент.Записать();
			Сообщить(НовыйЭлемент);
		ИначеЕсли ЧтениеXML.Имя = "ПоступлениеНаРасчетныйСчет" Тогда 
			НовыйЭлемент = Документы.ПоступлениеНаРасчетныйСчет.СоздатьДокумент();
			сообщить("Новый документ!");
			Пока 1=1 цикл
				ЧтениеXML.Прочитать();	  
				Если (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)И(ЧтениеXML.Имя = "ПоступлениеНаРасчетныйСчет") Тогда 
					Прервать;
				КонецЕсли;
				Если  ЧтениеXML.Имя = "ТабЧасть" Тогда 
					ЧтениеXML.Прочитать();
					НаменованиеТЧ = ЧтениеXML.Значение;
					//сообщить("Табличная чать "+ЧтениеXML.Значение);
					Пока  1=1 Цикл 
						ЧтениеXML.Прочитать();
						Если (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)И(ЧтениеXML.Имя = "ТабЧасть") Тогда 
							Прервать;
						КонецЕсли;
						//Сообщить("Новая строка");
						Если СокрЛП(НаменованиеТЧ) = "РасшифровкаПлатежа" Тогда 
							НовСтр = НовыйЭлемент.РасшифровкаПлатежа.Добавить();
							
							Пока  1=1 Цикл 
								ЧтениеXML.Прочитать();
								Если (ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента)И(ЧтениеXML.Имя = "СтрокаТЧ") Тогда 
									Прервать;
								КонецЕсли;
								Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
									ИмяРеквизита = ЧтениеXML.Имя; 
								конецесли;
								Если  ЧтениеXML.ТипУзла = ТипУзлаXML.Текст Тогда 
									//сообщить(ИмяРеквизита+":"+ЧтениеXML.Значение);
									Если  ИмяРеквизита = "КурсВзаиморасчетов" Тогда 
										НовСтр.КурсВзаиморасчетов = Число(ЧтениеXML.Значение);
									ИначеЕсли   ИмяРеквизита = "СуммаВзаиморасчетов" Тогда 
										НовСтр.СуммаВзаиморасчетов = Число(ЧтениеXML.Значение);
									ИначеЕсли   ИмяРеквизита = "СуммаПлатежа" Тогда 
										НовСтр.СуммаПлатежа = Число(ЧтениеXML.Значение);
									ИначеЕсли   ИмяРеквизита = "СтавкаНДС" Тогда 
										Если ЧтениеXML.Значение = "18%" Тогда 
											НовСтр.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
										КонецЕсли;
									ИначеЕсли   ИмяРеквизита = "СуммаНДС" Тогда 
										НовСтр.СуммаНДС = Число(ЧтениеXML.Значение);
									ИначеЕсли  ИмяРеквизита = "СтатьяДвиженияДенежныхСредств" Тогда 
										Если ЧтениеXML.Значение <> "" Тогда 
											ТекНом = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию(ЧтениеXML.Значение);  
											Если ТекНом.Пустая() Тогда 
												Сообщить("Не найдена статья движения ДС "+ ЧтениеXML.Значение);
												Возврат;
											КонецЕсли;
											НовСтр.СтатьяДвиженияДенежныхСредств = ТекНом;
										КонецЕсли;
									ИначеЕсли  ИмяРеквизита = "СчетУчетаРасчетовСКонтрагентом" Тогда 
										Если ЧтениеXML.Значение <> "" Тогда 
											ТекСчет = ПланыСчетов.Хозрасчетный.НайтиПоКоду(ЧтениеXML.Значение);
											Если ТекСчет.Пустая() Тогда 
												Сообщить("Не найден счет "+ ЧтениеXML.Значение);
												Возврат;
											КонецЕсли;
											НовСтр.СчетУчетаРасчетовСКонтрагентом = ТекСчет;
										КонецЕсли;
									ИначеЕсли  ИмяРеквизита = "СчетУчетаРасчетовПоАвансам" Тогда 
										Если ЧтениеXML.Значение <> "" Тогда 
											ТекСчет = ПланыСчетов.Хозрасчетный.НайтиПоКоду(ЧтениеXML.Значение);
											Если ТекСчет.Пустая() Тогда 
												Сообщить("Не найден счет "+ ЧтениеXML.Значение);
												Возврат;
											КонецЕсли;
											НовСтр.СчетУчетаРасчетовПоАвансам = ТекСчет;
										КонецЕсли;
									ИначеЕсли (ЧтениеXML.Имя = "СубконтоКт1")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
										ЧтениеXML.Прочитать();
										СубконтоКт1Т = ЧтениеXML.Значение;
									ИначеЕсли (ЧтениеXML.Имя = "СубконтоКт2")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
										ЧтениеXML.Прочитать();
										СубконтоКт2Т = ЧтениеXML.Значение;
									ИначеЕсли (ЧтениеXML.Имя = "СубконтоКт3")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
										ЧтениеXML.Прочитать();
										СубконтоКт3Т = ЧтениеXML.Значение;
										
										Если НЕ НовСтр.СчетУчетаРасчетовСКонтрагентом.Пустая() Тогда 
											Если НовСтр.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("91")) Тогда 
												НовСтр.СубконтоКт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(СубконтоКт1Т).Ссылка;
											ИначеЕсли НовСтр.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("69")) Тогда 
												Если СубконтоКт1Т = "Налог (взносы): начислено / уплачено" Тогда 
													НовСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;	
												КонецЕсли;
											ИначеЕсли НовСтр.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("68")) Тогда 
												Если СубконтоКт1Т = "Налог (взносы): начислено / уплачено" Тогда 
													НовСтр.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;	
												КонецЕсли;
											КонецЕсли;
										КонецЕсли;
									КонецЕсли;
								КонецЕсли;
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;   
				ИначеЕсли (ЧтениеXML.Имя = "Организация")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					Организация = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "Дата")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					Дата = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "Номер")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					Номер = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "Контрагент")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					Контрагент = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "ВидОперации")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					ВидОперации = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "НомерВходящегоДокумента")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					НомерВходящегоДокумента = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "ДатаВходящегоДокумента")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					ДатаВходящегоДокумента = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СтатьяДвиженияДенежныхСредств")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СтатьяДвиженияДенежныхСредств = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СубконтоКт1")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СубконтоКт1 = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СубконтоКт2")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СубконтоКт2 = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СубконтоКт3")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СубконтоКт3 = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СуммаДокумента")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СуммаДокумента = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СчетКонтрагента")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СчетКонтрагента = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СчетУчетаРасчетовСКонтрагентом")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СчетУчетаРасчетовСКонтрагентом = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СчетБанк")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СчетБанк = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "НазначениеПлатежа")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					НазначениеПлатежа = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "СуммаУслуг")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					СуммаУслуг = ЧтениеXML.Значение;
				ИначеЕсли (ЧтениеXML.Имя = "ПодразделениеКт")И(ЧтениеXML.ТипУзла <> ТипУзлаXML.КонецЭлемента) Тогда 
					ЧтениеXML.Прочитать();
					ПодразделениеКт = ЧтениеXML.Значение;
				КонецЕсли;
			КонецЦикла;
			
			ТекОрганизация = Справочники.Организации.НайтиПоНаименованию(Организация);
			Если ТекОрганизация.Пустая() Тогда 
				Сообщить("Не найдена организация "+Организация);
				Возврат;
			КонецЕсли;
			
			ТекКонтрагент = Справочники.Контрагенты.НайтиПоНаименованию(Контрагент);
			Если ТекКонтрагент.Пустая() Тогда 
				Сообщить("Не найден контрагент "+Контрагент);
				Возврат;
			КонецЕсли;
			
			ТекСтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию(СтатьяДвиженияДенежныхСредств);
			Если ТекСтатьяДвиженияДенежныхСредств.Пустая() Тогда 
				Сообщить("Не найдена статья движения д/с "+СтатьяДвиженияДенежныхСредств);
				Возврат;
			КонецЕсли;
			
			ТекПодразделениеКт = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
			               |	ПодразделенияОрганизаций.Ссылка
			               |ИЗ
			               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			               |ГДЕ
			               |	ПодразделенияОрганизаций.Наименование ПОДОБНО &ТекПодразделениеКт";
			Запрос.УстановитьПараметр("ТекПодразделениеКт",ПодразделениеКт);
			Результат = Запрос.Выполнить().Выбрать();
			Пока Результат.Следующий() Цикл 
			   	ТекПодразделениеКт = Результат.Ссылка;
			КонецЦикла;

			Если ТекПодразделениеКт.Пустая() Тогда 
				Сообщить("Не найдено подразделение "+ПодразделениеКт);
				//Возврат;
			КонецЕсли;
			
			НовыйЭлемент.Организация = ТекОрганизация;
			НовыйЭлемент.СчетОрганизации = ТекОрганизация.ОсновнойБанковскийСчет;
			НовыйЭлемент.Дата = КонецДня(Дата(Дата));
			//НовыйЭлемент.Номер = Номер;
			НовыйЭлемент.Контрагент = ТекКонтрагент;
			Если ВидОперации = "Оплата от покупателя" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ОплатаПокупателя;
			ИначеЕсли ВидОперации = "Возврат от поставщика" Тогда 
				НовыйЭлемент.ВидОперации = Перечисления.ВидыОперацийПоступлениеДенежныхСредств.ВозвратОтПоставщика;
			КонецЕсли;
			НовыйЭлемент.НомерВходящегоДокумента = НомерВходящегоДокумента;
			НовыйЭлемент.ДатаВходящегоДокумента = Дата(ДатаВходящегоДокумента);
			НовыйЭлемент.СтатьяДвиженияДенежныхСредств = ТекСтатьяДвиженияДенежныхСредств;
			НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчетаРасчетовСКонтрагентом).Ссылка;
			Если НЕ НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.Пустая() Тогда 
				Если НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("91")) Тогда 
					НовыйЭлемент.СубконтоКт1 = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(СубконтоДт1).Ссылка;
				ИначеЕсли НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("69")) Тогда 
					Если СубконтоКт1 = "Налог (взносы): начислено / уплачено" Тогда 
						НовыйЭлемент.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;	
					КонецЕсли;
				ИначеЕсли НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("68")) Тогда 
					Если СубконтоКт1 = "Налог (взносы): начислено / уплачено" Тогда 
						НовыйЭлемент.СубконтоКт1 = Перечисления.ВидыПлатежейВГосБюджет.Налог;	
					КонецЕсли;
				ИначеЕсли НовыйЭлемент.СчетУчетаРасчетовСКонтрагентом.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НайтиПоКоду("76")) Тогда 
					НовыйЭлемент.СубконтоКт1 = ТекКонтрагент;	
					НовыйЭлемент.СубконтоКт2 = ТекКонтрагент.ОсновнойДоговорКонтрагента;	
				КонецЕсли;
			КонецЕсли;
			НовыйЭлемент.СуммаДокумента = Число(СуммаДокумента);
			НовыйЭлемент.СчетКонтрагента = ТекКонтрагент.ОсновнойБанковскийСчет;
			НовыйЭлемент.СчетБанк = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетБанк).Ссылка;
			НовыйЭлемент.НазначениеПлатежа = НазначениеПлатежа;
			НовыйЭлемент.СуммаУслуг = Число(СуммаУслуг);
			НовыйЭлемент.ПодразделениеКт = ТекПодразделениеКт;
			
			НовыйЭлемент.ВалютаДокумента = Справочники.Валюты.НайтиПоНаименованию("руб");
			НовыйЭлемент.Ответственный		= ПараметрыСеанса.ТекущийПользователь;
			
			Для Каждого НовСтр из НовыйЭлемент.РасшифровкаПлатежа Цикл 
				НовСтр.СпособПогашенияЗадолженности = Перечисления.СпособыПогашенияЗадолженности.Автоматически;
				НовСтр.КратностьВзаиморасчетов = 1;
				СписокВидовДоговора = УправлениеВзаиморасчетами.ОпределитьВидДоговораСКонтрагентом(НовыйЭлемент.ВидОперации);
				УправлениеВзаиморасчетами.УстановитьДоговорКонтрагента(НовСтр.ДоговорКонтрагента,НовыйЭлемент.Контрагент,НовыйЭлемент.Организация,СписокВидовДоговора);		
			КонецЦикла;
			
			НовыйЭлемент.Комментарий = "Занесено автоматически обработкой переноса. Этот комментарий не изменять!";
			
			НовыйЭлемент.Записать();
			Сообщить(НовыйЭлемент);
			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура УдалитьНажатие(Элемент)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СписаниеСРасчетногоСчета.Ссылка
	|ИЗ
	|	Документ.СписаниеСРасчетногоСчета КАК СписаниеСРасчетногоСчета
	|ГДЕ
	|	СписаниеСРасчетногоСчета.Комментарий ПОДОБНО &Комментарий
	|	И СписаниеСРасчетногоСчета.Дата МЕЖДУ &НачДата И &КонДата
	|	И НЕ СписаниеСРасчетногоСчета.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписаниеСРасчетногоСчета.Ссылка
	|ИЗ
	|	Документ.ПоступлениеНаРасчетныйСчет КАК СписаниеСРасчетногоСчета
	|ГДЕ
	|	СписаниеСРасчетногоСчета.Комментарий ПОДОБНО &Комментарий
	|	И СписаниеСРасчетногоСчета.Дата МЕЖДУ &НачДата И &КонДата
	|	И НЕ СписаниеСРасчетногоСчета.Проведен";
	
	Запрос.УстановитьПараметр("Комментарий", "Занесено автоматически обработкой переноса. Этот комментарий не изменять!");
	Запрос.УстановитьПараметр("НачДата", НачалоДня(ДатаУд));
	Запрос.УстановитьПараметр("КонДата", КонецДня(ДатаУд1));	
	
	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл 
		Объект = Результат.Ссылка.ПолучитьОбъект();
		Объект.удалить();
	КонецЦикла;
КонецПроцедуры

Процедура ВыборФайла(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка=ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл";
	Диалог.ПолноеИмяФайла = ""; 
	Фильтр = "XML (*.xml)|*.xml"; 
	Диалог.Фильтр = Фильтр; 
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Каталог = "c:\";
	Если Диалог.Выбрать() Тогда
		Элемент.значение = Диалог.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры  
