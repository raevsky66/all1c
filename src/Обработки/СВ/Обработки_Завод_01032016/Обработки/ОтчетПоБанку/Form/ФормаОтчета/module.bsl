
Процедура КнопкаСформироватьНажатие(Кнопка)
	ЭлементыФормы.ПолеТабличногоДокумента1.Очистить();
	Макет = ПолучитьМакет("Макет");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры["НачПериода"] = Формат(НачПериода, "ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры["КонПериода"] = Формат(КонПериода,"ДФ=dd.MM.yyyy");
	ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета);
	
	
	Запрос = Новый Запрос;
	Если НЕ ЗначениеЗаполнено(ПрочиеДоходыИРасходы) Тогда 
		ЭлементыФормы.ПолеТабличногоДокумента1.НачатьАвтогруппировкуСтрок();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.Организация,
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт КАК НачальныйОстаток,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК ИтПриход,
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК ИтРасход,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстатокДт КАК КонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНачала, &ДатаКонца, Авто, , Счет = &Счет, , ) КАК ХозрасчетныйОстаткиИОбороты";
		Если ЗначениеЗаполнено(Организация) Тогда 
			Запрос.Текст = Запрос.Текст+ " 
			|ГДЕ
			|	ХозрасчетныйОстаткиИОбороты.Организация = &Организация";
			Запрос.УстановитьПараметр("Организация", Организация);
		КонецЕсли;
		
		запрос.Текст = Запрос.Текст+"
		|ИТОГИ
		|СУММА(НачальныйОстаток),
		|СУММА(ИтПриход),
		|СУММА(ИтРасход),
		|СУММА(КонечныйОстаток)
		|ПО
		|ОБЩИЕ,
		|Организация";
		
		
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(НачПериода));
		Запрос.УстановитьПараметр("ДатаКонца", КонецДня(КонПериода));
		Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("51"));
		
		Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Результат.Следующий() Цикл 
			Если НЕ ЗначениеЗаполнено(Организация) Тогда  
				ОбластьМакета = Макет.ПолучитьОбласть("Строка0");
				ОбластьМакета.Параметры.Заполнить(Результат);
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат.Уровень());
			КонецЕсли;
			
			Результат2 = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Результат2.Следующий() Цикл 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
				ОбластьМакета.Параметры.Заполнить(Результат2);
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Результат2.Уровень());
			КонецЦикла;
		КонецЦикла;
	ЭлементыФормы.ПолеТабличногоДокумента1.ЗакончитьАвтогруппировкуСтрок();
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =   "ВЫБРАТЬ РАзрешенные
	|ХозрасчетныйДвиженияССубконто.Регистратор,
	|ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|ХозрасчетныйДвиженияССубконто.Сумма,
	|ХозрасчетныйДвиженияССубконто.СчетДт,
	|ХозрасчетныйДвиженияССубконто.СчетКт,
	|ХозрасчетныйДвиженияССубконто.Период,
	|ХозрасчетныйДвиженияССубконто.Организация
	|ПОМЕСТИТЬ Движения
	|ИЗ
	|РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|&ДатаНачала,
	|&ДатаКонца,
	|(счетДт = &Счет
	|	ИЛИ СчетКт = &Счет)";
	
	Если ЗначениеЗаполнено(ПрочиеДоходыИРасходы) Тогда 
		Запрос.Текст = Запрос.Текст+ " 
		|				И (СубконтоДт2 = &Субконто
		|					ИЛИ СубконтоКт2 = &Субконто)";
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+ " 
	|,
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто";
	
	Если ЗначениеЗаполнено(Организация) Тогда 
		Запрос.Текст = Запрос.Текст+ " 
		|ГДЕ
		|	ХозрасчетныйДвиженияССубконто.Организация = &Организация";
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст+ " 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|Движения.Регистратор,
	|Движения.Сумма,
	|ВЫБОР
	|	КОГДА Движения.СчетДт = &Счет
	|		ТОГДА Движения.Сумма
	|	ИНАЧЕ 0
	|КОНЕЦ КАК Приход,
	|ВЫБОР
	|	КОГДА Движения.СчетКт = &Счет
	|		ТОГДА Движения.Сумма
	|	ИНАЧЕ 0
	|КОНЕЦ КАК Расход,
	|Движения.Период,
	|ВЫБОР
	|	КОГДА Движения.СчетДт = &Счет
	|		ТОГДА Движения.СубконтоДт2
	|	ИНАЧЕ Движения.СубконтоКт2
	|КОНЕЦ КАК Статья,
	|Движения.Организация
	|ПОМЕСТИТЬ Движения1
	|ИЗ
	|Движения КАК Движения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Движения1.Регистратор КАК Документ,
	|	СУММА(Движения1.Приход) КАК Приход,
	|	СУММА(Движения1.Расход) КАК Расход,
	|	Движения1.Период КАК Период,
	|	Движения1.Статья  Статья,
	|Движения1.Организация КАК Организация
	|ИЗ
	|	Движения1 КАК Движения1
	|
	|СГРУППИРОВАТЬ ПО
	|	Движения1.Организация,
	|	Движения1.Период,
	|	Движения1.Статья,
	|	Движения1.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|Организация,
	|	Период,
	|	документ
	|ИТОГИ
	|	СУММА(Приход),
	|	СУММА(Расход)
	|ПО
	|	ОБЩИЕ,Организация,Статья";
	
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("ДатаКонца", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НайтиПоКоду("51"));
	Запрос.УстановитьПараметр("Субконто", ПрочиеДоходыИРасходы);
	
	ЭлементыФормы.ПолеТабличногоДокумента1.НачатьАвтогруппировкуСтрок();
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Результат.Следующий() Цикл 
		Если ЗначениеЗаполнено(ПрочиеДоходыИРасходы) Тогда 
			ОбластьМакета = Макет.ПолучитьОбласть("Строка1");
			ОбластьМакета.Параметры.Заполнить(Результат);
			ОбластьМакета.Параметры.ИтПриход = Результат.Приход;
			ОбластьМакета.Параметры.ИтРасход = Результат.Расход;
			ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета);
		КонецЕсли;
		
		Организации = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Организации.Следующий() Цикл 
			
			Если НЕ ЗначениеЗаполнено(Организация) Тогда 
				
				ОбластьМакета = Макет.ПолучитьОбласть("Строка3");
				ОбластьМакета.Параметры.Заполнить(Организации);
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Организации.Уровень());
				
			конецесли;
			Статьи = Организации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Статьи.Следующий() Цикл 
				ОбластьМакета = Макет.ПолучитьОбласть("Строка2");
				ОбластьМакета.Параметры.Заполнить(Статьи);
				ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакета,Статьи.Уровень());
				ДетальныеЗаписи = Статьи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ДетальныеЗаписи.Следующий() Цикл 
					ОбластьМакетаС = Макет.ПолучитьОбласть("Строка");
					ОбластьМакетаС.Параметры.Заполнить(ДетальныеЗаписи);
					попытка 
						ОбластьМакетаС.Параметры.Комментарий = ДетальныеЗаписи.Документ.НазначениеПлатежа;
						ОбластьМакетаС.Параметры.Контрагент = ДетальныеЗаписи.Документ.Контрагент;
					исключение
					конецпопытки;
					
					ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(ОбластьМакетаС,ДетальныеЗаписи.Уровень());
				КонецЦикла;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	ЭлементыФормы.ПолеТабличногоДокумента1.ЗакончитьАвтогруппировкуСтрок();
	ЭлементыФормы.ПолеТабличногоДокумента1.ПоказатьУровеньГруппировокСтрок(0);
	ЭлементыФормы.ПолеТабличногоДокумента1.ТолькоПросмотр = Истина;
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

