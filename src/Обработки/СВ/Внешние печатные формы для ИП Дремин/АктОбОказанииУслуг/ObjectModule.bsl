
// Функция выполняет расчет рублевых сумм для вывода таблиц документа на печать
//
Функция ПодготовитьТаблицуДокументаДляПечати(ВыборкаСтрок, ТаблицаПоТоварам, МассивIDТабличныхЧастей)

	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	СуммаВзаиморасчетов = 0;
	СуммаВзаиморасчетовНДС = 0;
	ТаблицаПоТоварам.Очистить();
	
	НуженПересчетВРубли = Ложь;
	
	Если ВыборкаСтрок.Проведен 
		И (ВыборкаСтрок.РасчетыВУсловныхЕдиницах
		ИЛИ (ВыборкаСтрок.ВалютаДокумента <> ВалютаРегламентированногоУчета И ВыборкаСтрок.Дата >= '20090101000000')) Тогда
		НуженПересчетВРубли = Истина;
	КонецЕсли;	
	
	Пока ВыборкаСтрок.Следующий() Цикл
		
		СтрокаТаблицы = ТаблицаПоТоварам.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыборкаСтрок);
		
		Если НуженПересчетВРубли Тогда
			
			СтрокаТаблицы.СуммаНДС = ?(СтрокаТаблицы.НДСРуб = 0, СтрокаТаблицы.СуммаНДС, СтрокаТаблицы.НДСРуб);
			
			// В случае если сумма включает НДС, то сумма без НДС будет рассчитана позже
			Если СтрокаТаблицы.СуммаВключаетНДС Тогда
				СтрокаТаблицы.Сумма = ?(СтрокаТаблицы.ВсегоРуб = 0, СтрокаТаблицы.Сумма, СтрокаТаблицы.ВсегоРуб);
			// Для валютных документов для Суммы необходимо применять средний курс, 
			// так как сумма документа рассчитывается по курсу аванса,
			// а сумма НДС по курсу текущего документа
			ИначеЕсли НЕ ВыборкаСтрок.РасчетыВУсловныхЕдиницах Тогда
				СуммаРуб            = ?(СтрокаТаблицы.ВсегоРуб = 0, СтрокаТаблицы.Сумма, СтрокаТаблицы.ВсегоРуб);
				СтрокаТаблицы.Сумма = СуммаРуб - СтрокаТаблицы.СуммаНДС;
			// Для условных единиц и сумма НДС и сумма документа рассчитывается по курсу аванса
			Иначе
				СтрокаТаблицы.Сумма = ?(СтрокаТаблицы.СуммаБезНДСРуб = 0, СтрокаТаблицы.Сумма, СтрокаТаблицы.СуммаБезНДСРуб);
			КонецЕсли; 
			
			СтрокаТаблицы.Цена      = ?(СтрокаТаблицы.Количество = 0, 0, СтрокаТаблицы.Сумма/СтрокаТаблицы.Количество);
			
		КонецЕсли;	
		
	КонецЦикла;

	// Исключим строки из табличный частей, которые не удовлетворяют условиям печати. При выборке запросом их необходимо получать, 
	// чтобы распределять сумма взаиморасчетов в рублях на все строки документа.
	Если МассивIDТабличныхЧастей <> Неопределено
		И МассивIDТабличныхЧастей.Количество() <> 0 Тогда
		Инд = ТаблицаПоТоварам.Количество() - 1;
		Пока Инд >= 0 Цикл
			СтрокаТовар = ТаблицаПоТоварам[Инд];
			
			Если МассивIDТабличныхЧастей.Найти(СтрокаТовар.ID) = Неопределено Тогда
				ТаблицаПоТоварам.Удалить(Инд);
			КонецЕсли;
			
			Инд = Инд - 1;
		КонецЦикла;
	КонецЕсли;

	Возврат ТаблицаПоТоварам;

КонецФункции


// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыМ4()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор КАК Регистратор,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента КАК НомерСтрокиДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента КАК ТабличнаяЧастьДокумента,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС,
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС
	|ПОМЕСТИТЬ РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ИЗ
	|	РегистрСведений.РублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|ГДЕ
	|	РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтрокиДокумента,
	|	ТабличнаяЧастьДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Номер КАК Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен КАК Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата КАК Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата КАК ДатаСоставления,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента КАК НомерСопроводительногоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ДокументПоступлениеТоваровУслуг.Организация КАК ЮрФизЛицо,
	|	ДокументПоступлениеТоваровУслуг.Склад КАК МестоПриемки,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление КАК СкладНаименование,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код КАК ПоставщикКод,
	|	ДокументПоступлениеТоваровУслуг.Контрагент КАК Поставщик,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента КАК ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное КАК ПредставлениеПодразделения,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов КАК Курс,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК Кратность,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом КАК СубСчет,
	|	ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ КАК ТоварКод,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	ПоступлениеТоваровУслуг.СтавкаНДС КАК СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена,
	|	СУММА(ПоступлениеТоваровУслуг.Количество) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.Сумма
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ) КАК СуммаНДС,
	|	МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки) КАК НомерСтроки,
	|	2 КАК ID,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ) КАК ЭтоКомиссия,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)) КАК ВсегоРуб,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)) КАК СуммаБезНДСРуб,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0)) КАК НДСРуб
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Товары))
	|			И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена,
	|	СУММА(ПоступлениеТоваровУслуг.Количество),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.Сумма
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки),
	|	1,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0))
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Оборудование))
	|			И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.СчетУчета.Забалансовый, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена,
	|	СУММА(ПоступлениеТоваровУслуг.Количество),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.Сумма
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки),
	|	3,
	|	ЛОЖЬ,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0))
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.Услуги))
	|			И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Цена,
	|	СУММА(ПоступлениеТоваровУслуг.Количество),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.Сумма
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.Сумма * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА ДокументПоступлениеТоваровУслуг.ВалютаДокумента = &ВалютаРегламентированногоУчета
	|				ТОГДА ПоступлениеТоваровУслуг.СуммаНДС
	|			КОГДА ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов = 0
	|				ТОГДА 0
	|			ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслуг.СуммаНДС * ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов / ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов КАК ЧИСЛО(15, 2))
	|		КОНЕЦ),
	|	МИНИМУМ(ПоступлениеТоваровУслуг.НомерСтроки),
	|	4,
	|	ИСТИНА,
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.Всего, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НалоговаяБазаНДС, 0)),
	|	СУММА(ЕСТЬNULL(РегистрСведенийРублевыеСуммыДокументовВВалюте.НДС, 0))
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ДокументПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.АгентскиеУслуги КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = ДокументПоступлениеТоваровУслуг.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведенийРублевыеСуммыДокументовВВалюте КАК РегистрСведенийРублевыеСуммыДокументовВВалюте
	|		ПО (ПоступлениеТоваровУслуг.Ссылка = РегистрСведенийРублевыеСуммыДокументовВВалюте.Регистратор)
	|			И (ПоступлениеТоваровУслуг.НомерСтроки = РегистрСведенийРублевыеСуммыДокументовВВалюте.НомерСтрокиДокумента)
	|			И (РегистрСведенийРублевыеСуммыДокументовВВалюте.ТабличнаяЧастьДокумента = ЗНАЧЕНИЕ(Перечисление.ТабличныеЧастиДокументов.АгентскиеУслуги))
	|			И (ДокументПоступлениеТоваровУслуг.ВалютаДокумента <> &ВалютаРегламентированногоУчета)
	|ГДЕ
	|	ДокументПоступлениеТоваровУслуг.Ссылка В(&МассивОбъектов)
	|	И НЕ ПоступлениеТоваровУслуг.НомерСтроки ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументПоступлениеТоваровУслуг.Номер,
	|	ДокументПоступлениеТоваровУслуг.Ссылка,
	|	ДокументПоступлениеТоваровУслуг.Проведен,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.НомерВходящегоДокумента,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.Склад,
	|	ДокументПоступлениеТоваровУслуг.Склад.Представление,
	|	ДокументПоступлениеТоваровУслуг.Контрагент.Код,
	|	ДокументПоступлениеТоваровУслуг.Контрагент,
	|	ЕСТЬNULL(ДокументПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ),
	|	ДокументПоступлениеТоваровУслуг.ВалютаДокумента,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации,
	|	ДокументПоступлениеТоваровУслуг.ПодразделениеОрганизации.НаименованиеПолное,
	|	ДокументПоступлениеТоваровУслуг.КурсВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.КратностьВзаиморасчетов,
	|	ДокументПоступлениеТоваровУслуг.СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура,
	|	ПоступлениеТоваровУслуг.Цена,
	|	ПоступлениеТоваровУслуг.СтавкаНДС,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ПоступлениеТоваровУслуг.Номенклатура.ЕдиницаИзмерения.Код,
	|	ПоступлениеТоваровУслуг.Номенклатура.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА ПоступлениеТоваровУслуг.Номенклатура.Артикул
	|		ИНАЧЕ ПоступлениеТоваровУслуг.Номенклатура.Код
	|	КОНЕЦ,
	|	ДокументПоступлениеТоваровУслуг.Дата,
	|	ДокументПоступлениеТоваровУслуг.Организация,
	|	ДокументПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	ID,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует табличный документ с печатной формой счета
//
// Возвращаемое значение:
//  Табличный документ - печатная форма акта
//
Функция ПечатьДокумента(МассивОбъектов, ОбъектыПечати)
		
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияУслугПоПереработке_РеализацияУслугПоПереработке";

	ДополнительнаяКолонкаПечатныхФормДокументов = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если НЕ ЗначениеЗаполнено(ДополнительнаяКолонкаПечатныхФормДокументов) Тогда
		ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	КонецЕсли;
 	ВыводитьКоды = ДополнительнаяКолонкаПечатныхФормДокументов <> Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ДополнительнаяКолонкаПечатныхФормДокументов", ДополнительнаяКолонкаПечатныхФормДокументов);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияУслугПоПереработке.Ссылка,
	|	РеализацияУслугПоПереработке.ВерсияДанных,
	|	РеализацияУслугПоПереработке.ПометкаУдаления,
	|	РеализацияУслугПоПереработке.Номер,
	|	РеализацияУслугПоПереработке.Дата,
	|	РеализацияУслугПоПереработке.Проведен,
	|	РеализацияУслугПоПереработке.Исполнитель,
	|	РеализацияУслугПоПереработке.ИсполнительНаОсновании,
	|	РеализацияУслугПоПереработке.ПодразделениеОрганизации,
	|	РеализацияУслугПоПереработке.ВалютаДокумента,
	|	РеализацияУслугПоПереработке.ДоговорКонтрагента,
	|	РеализацияУслугПоПереработке.Комментарий,
	|	РеализацияУслугПоПереработке.Контрагент,
	|	РеализацияУслугПоПереработке.КратностьВзаиморасчетов,
	|	РеализацияУслугПоПереработке.КурсВзаиморасчетов,
	|	РеализацияУслугПоПереработке.Организация,
	|	РеализацияУслугПоПереработке.Ответственный,
	|	РеализацияУслугПоПереработке.СуммаВключаетНДС,
	|	РеализацияУслугПоПереработке.СчетУчетаРасчетовПоАвансам,
	|	РеализацияУслугПоПереработке.СчетУчетаРасчетовСКонтрагентом,
	|	РеализацияУслугПоПереработке.ТипЦен,
	|	РеализацияУслугПоПереработке.СуммаДокумента,
	|	РеализацияУслугПоПереработке.РучнаяКорректировка,
	|	РеализацияУслугПоПереработке.ПодразделениеОрганизации,
	|	РеализацияУслугПоПереработке.СпособЗачетаАвансов
	|ИЗ
	|	Документ.РеализацияУслугПоПереработке КАК РеализацияУслугПоПереработке
	|ГДЕ
	|	РеализацияУслугПоПереработке.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РеализацияУслугПоПереработке.Дата,
	|	РеализацияУслугПоПереработке.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияУслугПоПереработкеУслуги.Ссылка КАК Ссылка,
	|	РеализацияУслугПоПереработкеУслуги.Номенклатура КАК Номенклатура,
	|	РеализацияУслугПоПереработкеУслуги.Содержание КАК Содержание,
	|	РеализацияУслугПоПереработкеУслуги.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	РеализацияУслугПоПереработкеУслуги.Количество КАК Количество,
	|	РеализацияУслугПоПереработкеУслуги.Цена КАК Цена,
	|	РеализацияУслугПоПереработкеУслуги.Сумма КАК Сумма,
	|	РеализацияУслугПоПереработкеУслуги.СтавкаНДС КАК СтавкаНДС,
	|	РеализацияУслугПоПереработкеУслуги.СуммаНДС КАК СуммаНДС,
	|	РеализацияУслугПоПереработкеУслуги.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_РеализацияУслугПоПереработкеУслуги
	|ИЗ
	|	Документ.РеализацияУслугПоПереработке.Услуги КАК РеализацияУслугПоПереработкеУслуги
	|ГДЕ
	|	РеализацияУслугПоПереработкеУслуги.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияУслугПоПереработке.Ссылка КАК Ссылка,
	|	РеализацияУслугПоПереработке.Ссылка.Дата КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА (НЕ РеализацияУслугПоПереработке.Содержание ПОДОБНО """")
	|			ТОГДА РеализацияУслугПоПереработке.Содержание
	|		КОГДА (НЕ РеализацияУслугПоПереработке.Номенклатура.НаименованиеПолное ПОДОБНО """")
	|			ТОГДА ВЫРАЗИТЬ(РеализацияУслугПоПереработке.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		ИНАЧЕ РеализацияУслугПоПереработке.Номенклатура.Наименование
	|	КОНЕЦ КАК Товар,
	|	РеализацияУслугПоПереработке.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(РеализацияУслугПоПереработке.Количество) КАК Количество,
	|	РеализацияУслугПоПереработке.Цена КАК Цена,
	|	СУММА(РеализацияУслугПоПереработке.Сумма) КАК Сумма,
	|	РеализацияУслугПоПереработке.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(РеализацияУслугПоПереработке.СуммаНДС) КАК СуммаНДС,
	|	МИНИМУМ(РеализацияУслугПоПереработке.НомерСтроки) КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА РеализацияУслугПоПереработке.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА РеализацияУслугПоПереработке.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ КАК КодАртикул
	|ИЗ
	|	ВТ_РеализацияУслугПоПереработкеУслуги КАК РеализацияУслугПоПереработке
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияУслугПоПереработке.Ссылка,
	|	ВЫБОР
	|		КОГДА (НЕ РеализацияУслугПоПереработке.Содержание ПОДОБНО """")
	|			ТОГДА РеализацияУслугПоПереработке.Содержание
	|		КОГДА (НЕ РеализацияУслугПоПереработке.Номенклатура.НаименованиеПолное ПОДОБНО """")
	|			ТОГДА ВЫРАЗИТЬ(РеализацияУслугПоПереработке.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))
	|		ИНАЧЕ РеализацияУслугПоПереработке.Номенклатура.Наименование
	|	КОНЕЦ,
	|	РеализацияУслугПоПереработке.СтавкаНДС,
	|	РеализацияУслугПоПереработке.ЕдиницаИзмерения,
	|	РеализацияУслугПоПереработке.Цена,
	|	ВЫБОР
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА РеализацияУслугПоПереработке.Номенклатура.Артикул
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА РеализацияУслугПоПереработке.Номенклатура.Код
	|		КОГДА &ДополнительнаяКолонкаПечатныхФормДокументов = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.НеВыводить)
	|			ТОГДА """"
	|	КОНЕЦ,
	|	РеализацияУслугПоПереработке.Ссылка.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка,
	|	НомерСтроки";
	Результат = Запрос.ВыполнитьПакет();

	Выборка = Результат[0].Выбрать();
	ВсеСтроки = Результат[2].Выгрузить();
	ВсеСтроки.Индексы.Добавить("Ссылка,НомерСтроки");

	ПервыйДокумент = Истина;

	Пока Выборка.Следующий() Цикл

		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		ТаблицаУслуги = ВсеСтроки.НайтиСтроки(Новый Структура("Ссылка", Выборка.Ссылка));
		
		СведенияОбОрганизации   = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Организация, Выборка.Дата);
		ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм");
		
		ОтветственныеЛицаОрганизации = ОтветственныеЛицаБП.ОтветственныеЛица(Выборка.Организация, Выборка.Дата, Выборка.ПодразделениеОрганизации);
		
		Если ЗначениеЗаполнено(Выборка.Исполнитель) Тогда
			Если Выборка.Исполнитель = ОтветственныеЛицаОрганизации.Руководитель Тогда 
				ЗаместительПоПриказу = ОтветственныеЛицаОрганизации.РуководительПредставление;
				ДолжностьИНазваниеОрганизации = "" + ОтветственныеЛицаОрганизации.РуководительДолжностьПредставление;
				Если ЗначениеЗаполнено(ПредставлениеПоставщика) И ЗначениеЗаполнено(ДолжностьИНазваниеОрганизации) Тогда
					ДолжностьИНазваниеОрганизации = ДолжностьИНазваниеОрганизации + ", " + ПредставлениеПоставщика;
				ИначеЕсли ЗначениеЗаполнено(ПредставлениеПоставщика) Тогда
					ДолжностьИНазваниеОрганизации = ПредставлениеПоставщика;
				КонецЕсли;
			Иначе
				ДанныеОтветственногоЛица = ОтветственныеЛицаБП.РеквизитыПодписиУполномоченногоЛица(Выборка.Организация, Выборка.Исполнитель,Выборка.ИсполнительНаОсновании, Выборка.Дата);
				ЗаместительПоПриказу = "" + ДанныеОтветственногоЛица.ФИО.Представление;
				Если ЗначениеЗаполнено(Выборка.ИсполнительНаОсновании) И ЗначениеЗаполнено(ЗаместительПоПриказу) Тогда 
					ЗаместительПоПриказу = ЗаместительПоПриказу + ", " + ДанныеОтветственногоЛица.ОснованиеПраваПодписиПредставление;
				КонецЕсли;
				Если ЗначениеЗаполнено(ДанныеОтветственногоЛица.Должность) И ЗначениеЗаполнено(ПредставлениеПоставщика) Тогда
					ДолжностьИНазваниеОрганизации = "" + ДанныеОтветственногоЛица.ДолжностьПредставление + ", " + ПредставлениеПоставщика;
				ИначеЕсли ЗначениеЗаполнено(ДанныеОтветственногоЛица.Должность) Тогда 
					ДолжностьИНазваниеОрганизации = "" + ДанныеОтветственногоЛица.ДолжностьПредставление;
				Иначе
					ДолжностьИНазваниеОрганизации = ПредставлениеПоставщика;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ЗаместительПоПриказу = ОтветственныеЛицаОрганизации.РуководительПредставление;
			ДолжностьИНазваниеОрганизации = "" + ОтветственныеЛицаОрганизации.РуководительДолжностьПредставление;
			Если ЗначениеЗаполнено(ПредставлениеПоставщика) И ЗначениеЗаполнено(ДолжностьИНазваниеОрганизации) Тогда
				ДолжностьИНазваниеОрганизации = ДолжностьИНазваниеОрганизации + ", " + ПредставлениеПоставщика;
			ИначеЕсли ЗначениеЗаполнено(ПредставлениеПоставщика) Тогда
				ДолжностьИНазваниеОрганизации = ПредставлениеПоставщика;
			КонецЕсли;
		КонецЕсли;
		
		Макет = ЭтотОбъект.ПолучитьМакет("ПФ_MXL_Акт");
		
		ОбластьМакета                          = Макет.ПолучитьОбласть("Заголовок");
		НазваниеДокумента                      = НСтр("ru='Акт оказания услуг по переработке '");
		ТекстЗаголовка                         = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Выборка, "Акт");
		ОбластьМакета.Параметры.Заполнить(Новый Структура("ТекстЗаголовка", ТекстЗаголовка));
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		ДанныеПечатиПоставщик = Новый Структура;
		ДанныеПечатиПоставщик.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
		ДанныеПечатиПоставщик.Вставить("Поставщик", Выборка.Организация);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПоставщик);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		СведенияОКонтрагенте    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Выборка.Контрагент, Выборка.Дата);
		ПредставлениеПолучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
		ДанныеПечатиПокупатель = Новый Структура;
		ДанныеПечатиПокупатель.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);
		ДанныеПечатиПокупатель.Вставить("Получатель", Выборка.Контрагент);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПокупатель);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		Если Макет.Области.Найти("Основание") <> Неопределено Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("Основание");
			ОбластьМакета.Параметры.Заполнить(Новый Структура("Основание", СокрЛП(Строка(Выборка.ДоговорКонтрагента))));
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;

		// Вывести табличную часть
		ОбластьШапки = ?(ВыводитьКоды, "ШапкаТаблицыСКодом", "ШапкаТаблицы");
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		ДанныеПечатиКодАртикул = Новый Структура;
		Если ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ДанныеПечатиКодАртикул.Вставить("ИмяКодАртикул", "Артикул");
		ИначеЕсли ДополнительнаяКолонкаПечатныхФормДокументов = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ДанныеПечатиКодАртикул.Вставить("ИмяКодАртикул", "Код");
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиКодАртикул);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьСтроки = ?(ВыводитьКоды, "СтрокаСКодом", "Строка");
		ОбластьСтроки = Макет.ПолучитьОбласть(ОбластьСтроки);

		НомерСтроки = 0;

		Сумма    = 0;
		СуммаНДС = 0;

		Для Каждого СтрокаТабличнойЧасти Из ТаблицаУслуги Цикл
			НомерСтроки = НомерСтроки + 1;
			ОбластьСтроки.Параметры.Заполнить(СтрокаТабличнойЧасти);
			ДанныеПечатиСтрока = Новый Структура;
			ДанныеПечатиСтрока.Вставить("НомерСтроки", НомерСтроки);
			ДанныеПечатиСтрока.Вставить("Товар", СокрЛП(СтрокаТабличнойЧасти.Товар));
			ОбластьСтроки.Параметры.Заполнить(ДанныеПечатиСтрока);
			
			Сумма    = Сумма    + СтрокаТабличнойЧасти.Сумма;
			СуммаНДС = СуммаНДС + СтрокаТабличнойЧасти.СуммаНДС;

			ТабличныйДокумент.Вывести(ОбластьСтроки);
		КонецЦикла;

		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		Всего = ОбщегоНазначенияБПВызовСервера.ФорматСумм(Сумма);
		ОбластьМакета.Параметры.Заполнить(Новый Структура("Всего", Всего));
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		ДанныеПечатиИтогоНДС = Новый Структура;
		ДанныеПечатиИтогоНДС.Вставить("ВсегоНДС", ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаНДС));
		ДанныеПечатиИтогоНДС.Вставить("НДС",      ?(Выборка.СуммаВключаетНДС, "В том числе НДС", " Сумма НДС"));
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиИтогоНДС);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		СуммаКПрописи = Сумма + ?(Выборка.СуммаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		ИтоговаяСтрока = НСтр("ru='Всего оказано услуг '") + НомерСтроки
			+ НСтр("ru=', на сумму '") + ОбщегоНазначенияБПВызовСервера.ФорматСумм(СуммаКПрописи, Выборка.ВалютаДокумента);
		СуммаПрописью  = ОбщегоНазначенияБПВызовСервера.СформироватьСуммуПрописью(СуммаКПрописи, Выборка.ВалютаДокумента);
		ДанныеПечатиСуммаПрописью = Новый Структура;
		ДанныеПечатиСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		ДанныеПечатиСуммаПрописью.Вставить("СуммаПрописью", СуммаПрописью);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиСуммаПрописью);
		ТабличныйДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ДанныеПечатиПодписи = Новый Структура;
		ДанныеПечатиПодписи.Вставить("ДолжностьИНазваниеОрганизации", ДолжностьИНазваниеОрганизации);
		ДанныеПечатиПодписи.Вставить("ЗаместительПоПриказу", ЗаместительПоПриказу);
		ОбластьМакета.Параметры.Заполнить(ДанныеПечатиПодписи);
		ОбластьМакета.Параметры.ДолжностьИНазваниеОрганизацииЗаказчика = "Управляющий-индивидуальный предприниматель Чуйков М.Г.";												
		ТабличныйДокумент.Вывести(ОбластьМакета);
		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент,
			НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

// Экспортная процедура печати, вызываемая из основной программы
//
// Параметры:
// ВХОДЯЩИЕ:
//  МассивОбъектовНазначения - Массив - список объектов ссылочного типа для печати документа
//                 Как правило, содержит один элемент с ссылкой на вызвавший форму объект (документ, справочник)
//
// ИСХОДЯЩИЕ:
//  КоллекцияПечатныхФорм - ТаблицаЗначений - таблица сформированных табличных документов.
//                 Как правило, содержит одну строку с именем текущей печатной формы
//  ОбъектыПечати - СписокЗначений - список объектов печати. 
//  ПараметрыВывода - Структура - Параметры сформированных табличных документов. Содержит поля:
//  						ДоступнаПечатьПоКомплектно - булево - по умолчанию Ложь
//							ПолучательЭлектронногоПисьма
//							ОтправительЭлектронногоПисьма
//
Процедура Печать(МассивОбъектовНазначения, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктСПодвалом") Тогда
		 УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктСПодвалом", "Акт оказания услуг по переработке с подвалом",
		 	ПечатьДокумента(МассивОбъектовНазначения, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

//
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ РЕГИСТРАЦИИ ОБРАБОТКИ
//

// Сервисная экспортная функция. Вызывается в основной программе при регистрации обработки в информационной базе
// Возвращает структуру с параметрами регистрации
//
// Возвращаемое значение:
//		Структура с полями:
//			Вид - строка, вид обработки, один из возможных: "ДополнительнаяОбработка", "ДополнительныйОтчет", 
//					"ЗаполнениеОбъекта", "Отчет", "ПечатнаяФорма", "СозданиеСвязанныхОбъектов"
//			Назначение - Массив строк имен объектов метаданных в формате: 
//					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
//					Например, "Документ.СчетЗаказ" или "Справочник.*". Параметр имеет смысл только для назначаемых обработок, для глобальных может не задаваться.
//			Наименование - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
//			Информация  - строка - Краткая информация или описание по обработке.
//			Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
//			БезопасныйРежим - булево - Принимает значение Истина или Ложь, в зависимости от того, требуется ли устанавливать или отключать безопасный режим 
//							исполнения обработок. Если истина, обработка будет запущена в безопасном режиме. 
//
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	//Инициализируем структуру с параметрами регистрации
	
	//Определяем список объектов, вызывающих обработку
	ОбъектыНазначенияФормы = Новый Массив;
	ОбъектыНазначенияФормы.Добавить("Документ.РеализацияУслугПоПереработке");
	
	ПараметрыРегистрации = ПолучитьПараметрыРегистрации(ОбъектыНазначенияФормы);
	ПараметрыРегистрации.Версия = "1.1";

	//Определяем команды для печати формы
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();

	ДобавитьКоманду(ТаблицаКоманд,
		"Акт оказания услуг по переработке с подвалом", // Представление команды в пользовательском интерфейсе
		"АктСПодвалом",				// Уникальный идентификатор команды
	);

	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);

	Возврат ПараметрыРегистрации;

КонецФункции

//
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ РЕГИСТРАЦИИ ОБРАБОТКИ
//

// Формирует структуру с параметрами регистрации регистрации обработки в информационной базе
//
// Параметры:
//	ОбъектыНазначенияФормы - Массив - Массив строк имен объектов метаданных в формате: 
//					<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]. 
//					или строка с именем объекта метаданных 
//	НаименованиеОбработки - строка - Наименование обработки, которым будет заполнено наименование элемента справочника по умолчанию.
//							Необязательно, по умолчанию синоним или представление объекта
//	Информация  - строка - Краткая информация или описание обработки.
//							Необязательно, по умолчанию комментарий объекта
//	Версия - строка - Версия обработки в формате “<старший номер>.<младший номер>” используется при загрузке обработок в информационную базу.
//
//
// Возвращаемое значение:
//		Структура
//
Функция ПолучитьПараметрыРегистрации(ОбъектыНазначенияФормы = Неопределено, НаименованиеОбработки = "", Информация = "", Версия = "1.0")

	Если ТипЗнч(ОбъектыНазначенияФормы) = Тип("Строка") Тогда
		ОбъектНазначенияФормы = ОбъектыНазначенияФормы;
		ОбъектыНазначенияФормы = Новый Массив;
		ОбъектыНазначенияФормы.Добавить(ОбъектНазначенияФормы);
	КонецЕсли; 
	
	ПараметрыРегистрации = Новый Структура;
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Назначение", ОбъектыНазначенияФормы);
	
	Если Не ЗначениеЗаполнено(НаименованиеОбработки) Тогда
		НаименованиеОбработки = ЭтотОбъект.Метаданные().Представление();
	КонецЕсли; 
	ПараметрыРегистрации.Вставить("Наименование", НаименованиеОбработки);
	
	Если Не ЗначениеЗаполнено(Информация) Тогда
		Информация = ЭтотОбъект.Метаданные().Комментарий;
	КонецЕсли; 
	ПараметрыРегистрации.Вставить("Информация", Информация);
	
	ПараметрыРегистрации.Вставить("Версия", Версия);

	Возврат ПараметрыРегистрации;

КонецФункции

// Формирует таблицу значений с командами печати
//	
// Возвращаемое значение:
//		ТаблицаЗначений
//
Функция ПолучитьТаблицуКоманд()

	Команды = Новый ТаблицаЗначений;
	
	//Представление команды в пользовательском интерфейсе
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	
	//Уникальный идентификатор команды или имя макета печати
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	
	//Способ вызова команды: "ОткрытиеФормы", "ВызовКлиентскогоМетода", "ВызовСерверногоМетода"
	// "ОткрытиеФормы" - применяется только для отчетов и дополнительных отчетов
	// "ВызовКлиентскогоМетода" - вызов процедуры Печать(), определённой в модуле формы обработки
	// "ВызовСерверногоМетода" - вызов процедуры Печать(), определённой в модуле объекта обработки
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	
	//Показывать оповещение.
	//Если Истина, требуется показать оповещение при начале и при завершении работы обработки. 
	//Имеет смысл только при запуске обработки без открытия формы
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	
	//Дополнительный модификатор команды. 
	//Используется для дополнительных обработок печатных форм на основе табличных макетов.
	//Для таких команд должен содержать строку ПечатьMXL
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));

	Возврат Команды;

КонецФункции

// Вспомогательная процедура.
//
Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование = "ВызовСерверногоМетода", ПоказыватьОповещение = Ложь, Модификатор = "ПечатьMXL")

	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;

КонецПроцедуры