
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьКонтрагентами(Кнопка)
	Если Организация.Пустая() Тогда
		Сообщить("Не выбрана Организация !!!");	
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НачПериода) или НЕ ЗначениеЗаполнено(КонПериода) или НЕ ЗначениеЗаполнено(ДатаАкта) Тогда
		Сообщить("Не выбраны даты формирования актов сверки !!!");	
		Возврат;
	КонецЕсли;	
	
	СписСчетов = Новый СписокЗначений;
	
	Если ВидОтчета = 0 Тогда
		ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	ИначеЕсли ВидОтчета = 1 Тогда 
		ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
	Иначе
		ВидДоговора = Неопределено;
	КонецЕсли;
	
	Для Каждого сСписокСчетов из СписокСчетов Цикл
		Если сСписокСчетов.УчаствуетВРасчетах Тогда
			СписСчетов.Добавить(сСписокСчетов.Счет);
		КонецЕсли;	
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.Субконто1 КАК Контрагент,
	               |	ВЫБОР
	               |		КОГДА &ВидОтчета = 2
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |		ИНАЧЕ ХозрасчетныйОбороты.Субконто2
	               |	КОНЕЦ КАК ДоговорКонтрагента,
	               |	ЕСТЬNULL(ХозрасчетныйОбороты.Валюта, &Руб) КАК Валюта
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, , Счет В ИЕРАРХИИ (&СписСчетов), &СписСубконто, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА &ВидОтчета = 2
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ХозрасчетныйОбороты.Субконто2.ВидДоговора = &ВидДоговора
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА &ЕстьФильтрПоПервойБукве
	               |				ТОГДА (ВЫРАЗИТЬ(ХозрасчетныйОбороты.Субконто1.Наименование КАК СТРОКА(1))) = &ФильтрПоПервойБукве
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ВЫБОР
	               |		КОГДА &ВидОтчета = 2
	               |			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	               |		ИНАЧЕ ХозрасчетныйОбороты.Субконто2
	               |	КОНЕЦ,
	               |	ЕСТЬNULL(ХозрасчетныйОбороты.Валюта, &Руб)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ХозрасчетныйОбороты.Субконто1.Наименование";
	
	Запрос.УстановитьПараметр("НачПериода", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("СписСчетов", СписСчетов);
	СписСубконто = Новый СписокЗначений;
	СписСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СписСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	Запрос.УстановитьПараметр("СписСубконто", СписСубконто);
	Запрос.УстановитьПараметр("Руб", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВидОтчета", ВидОтчета);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ВидДоговора", ВидДоговора);
	Запрос.УстановитьПараметр("ФильтрПоПервойБукве", ФильтрПоПервойБукве);
	Запрос.УстановитьПараметр("ЕстьФильтрПоПервойБукве", СокрЛП(ФильтрПоПервойБукве) <> "");
	ТабДокументов.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
	//Заполним существующими актами
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	АктСверкиВзаиморасчетов.Контрагент,
	               |	АктСверкиВзаиморасчетов.ДоговорКонтрагента,
	               |	АктСверкиВзаиморасчетов.Ссылка
	               |ИЗ
	               |	Документ.АктСверкиВзаиморасчетов КАК АктСверкиВзаиморасчетов
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(АктСверкиВзаиморасчетов.ДатаНачала, ДЕНЬ) = &ДатаНачала
	               |	И НАЧАЛОПЕРИОДА(АктСверкиВзаиморасчетов.ДатаОкончания, ДЕНЬ) = &ДатаОкончания
	               |	И АктСверкиВзаиморасчетов.Организация = &Организация";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("ДатаОкончания", НачалоДня(КонПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	ТабАктов = Запрос.Выполнить().Выгрузить();
	
	
	Для Каждого сТЧ из ТабДокументов Цикл
		сТЧ.EMail = ПолучитьЕмайлКонтрагента(сТЧ.Контрагент);

		Отбор = Новый Структура("Контрагент,ДоговорКонтрагента",сТЧ.Контрагент,сТЧ.ДоговорКонтрагента);
		стрТабАктов = ТабАктов.НайтиСтроки(Отбор);
		Если стрТабАктов.Количество() > 0 Тогда
			сТЧ.АктСверки = стрТабАктов[0].Ссылка;
			сТЧ.ОстатокНаКонец = сТЧ.АктСверки.ОстатокНаНачало + сТЧ.АктСверки.ПоДаннымОрганизации.Итог("Дебет") -  сТЧ.АктСверки.ПоДаннымОрганизации.Итог("Кредит");
			свОтправлен = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001");//Отправлен по e-mail
			Если НЕ свОтправлен.Пустая() Тогда
				
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	ЗначенияСвойствОбъектов.Объект,
				|	ЗначенияСвойствОбъектов.Свойство,
				|	ЗначенияСвойствОбъектов.Значение
				|ИЗ
				|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				|ГДЕ
				|	ЗначенияСвойствОбъектов.Объект = &Объект
				|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
				
				Запрос.УстановитьПараметр("Объект", сТЧ.АктСверки);
				Запрос.УстановитьПараметр("Свойство", свОтправлен);
				
				РезОтправлен = Ложь;
				Результат = Запрос.Выполнить();
				Выборка = Результат.Выбрать();
				Пока Выборка.Следующий() Цикл
					РезОтправлен = Выборка.Значение;
				КонецЦикла;
				
				сТЧ.УжеОтправлен = РезОтправлен;
			КонецЕсли;	
		Иначе 
			сТЧ.ОстатокНаКонец = 0;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьРеализациями(Кнопка)
	Если Организация.Пустая() Тогда
		Сообщить("Не выбрана Организация !!!");	
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НачПериода) или НЕ ЗначениеЗаполнено(КонПериода) Тогда
		Сообщить("Не выбраны даты формирования РТУ!");	
		Возврат;
	КонецЕсли;	
	
	//Заполним существующими РТУ
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РеализацияТоваровУслуг.Ссылка КАК РТУ,
	               |	РеализацияТоваровУслуг.Контрагент,
	               |	РеализацияТоваровУслуг.СуммаДокумента КАК Сумма
	               |ИЗ
	               |	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	               |ГДЕ
	               |	РеализацияТоваровУслуг.Дата >= &НачДата
	               |	И РеализацияТоваровУслуг.Дата <= &КонДата
	               |	И РеализацияТоваровУслуг.Организация = &Организация
				   |    И
				   |	ВЫБОР
	               |			КОГДА &ЕстьФильтрПоПервойБукве
	               |				ТОГДА (ВЫРАЗИТЬ(РеализацияТоваровУслуг.Контрагент.Наименование КАК СТРОКА(1))) = &ФильтрПоПервойБукве
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ";
	
	Запрос.УстановитьПараметр("НачДата", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонДата", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ЕстьФильтрПоПервойБукве", СокрЛП(ФильтрПоПервойБуквеРеализация) <> "");
	Запрос.УстановитьПараметр("ФильтрПоПервойБукве", ФильтрПоПервойБуквеРеализация);
	
	ТабДокументов1.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого сТЧ из ТабДокументов1 Цикл
		сТЧ.EMail = ПолучитьЕмайлКонтрагента(сТЧ.Контрагент);
		свОтправлен = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001");//Отправлен по e-mail
		Если НЕ свОтправлен.Пустая() Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ЗначенияСвойствОбъектов.Объект,
			|	ЗначенияСвойствОбъектов.Свойство,
			|	ЗначенияСвойствОбъектов.Значение
			|ИЗ
			|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Объект = &Объект
			|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
			
			Запрос.УстановитьПараметр("Объект", сТЧ.РТУ);
			Запрос.УстановитьПараметр("Свойство", свОтправлен);
			
			РезОтправлен = Ложь;
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				РезОтправлен = Выборка.Значение;
			КонецЦикла;
			сТЧ.УжеОтправлен = РезОтправлен;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Процедура ЗаполнитьСписокСчетовЗначениямиПоУмолчанию(Док, ВыдаватьСообщения = Ложь)
	
	Если Док.СписокСчетов.Количество() > 0 тогда
		Если ВыдаватьСообщения Тогда
		
			ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Имя);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли; 
		КонецЕсли;
		
		Док.СписокСчетов.Очистить();
		
	КонецЕсли;

	СчетаПоУмолчанию = Новый Массив();
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	
	Для Счетчик =1  По СчетаПоУмолчанию.Количество() Цикл
		СтрокаСчета = Док.СписокСчетов.Добавить();
		СтрокаСчета.УчаствуетВРасчетах = Истина;
	КонецЦикла; 
	
	Док.СписокСчетов.ЗагрузитьКолонку(СчетаПоУмолчанию,"Счет");
	
КонецПроцедуры

Процедура ПересчитатьОстатки(Док)

	ОстатокНаКонец = Док.ОстатокНаНачало + Док.ПоДаннымОрганизации.Итог("Дебет") -  Док.ПоДаннымОрганизации.Итог("Кредит");
	
	ОстатокНаКонецКонтрагент = - Док.ОстатокНаНачало + Док.ПоДаннымКонтрагента.Итог("Дебет") -  Док.ПоДаннымКонтрагента.Итог("Кредит");
	
	Если Док.Расхождение <> ОстатокНаКонец + ОстатокНаКонецКонтрагент Тогда
		Док.Расхождение = ОстатокНаКонец + ОстатокНаКонецКонтрагент;
	КонецЕсли; 

КонецПроцедуры

Процедура КоманднаяПанельПоДаннымОрганизацииЗаполнитьПоДаннымБухгалтерскогоУчета(Док)
	
	Если НЕ ЗначениеЗаполнено(Док.Организация) Тогда
		Предупреждение("Не выбрана организация!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Док.Контрагент) Тогда
		Предупреждение("Не выбран контрагент!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Док.ВалютаДокумента) Тогда
		Предупреждение("Не выбрана валюта документа!");
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Док.ДатаНачала) Тогда
	    Предупреждение("Не выбрана дата начала периода сверки расчетов!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Док.ДатаОкончания) Тогда
	    Предупреждение("Не выбрана дата конца периода сверки расчетов!");
		Возврат;
	КонецЕсли;
		
	Если Док.ДатаОкончания < Док.ДатаНачала Тогда
	    Предупреждение("Неверно задан период сверки расчетов!");
		Возврат;
	КонецЕсли;
	
	КоличествоСчетов = Док.СписокСчетов.Количество();

	ФильтрСписокСчетов = Новый массив();
	Для каждого СтрокаСчета Из Док.СписокСчетов Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаСчета.Счет) или СтрокаСчета.УчаствуетВРасчетах = Ложь Тогда
			Продолжить;
		Иначе
			ФильтрСписокСчетов.Добавить(СтрокаСчета.Счет);
		КонецЕсли; 
	КонецЦикла; 
		
	Если ФильтрСписокСчетов.Количество() = 0 Тогда
		Предупреждение("Неверно задан список счетов, по которым производится сверка!");
		Возврат;
	КонецЕсли;

	Если Док.ПоДаннымОрганизации.Количество() > 0 Тогда
		Если НЕ ПерезаполнятьТабличныеЧастиАктовБезПодтверждения Тогда 
			ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Имя);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли; 
		КонецЕсли;
		Док.ПоДаннымОрганизации.Очистить();
	КонецЕсли;
	
	Док.ЗаполнитьПоДаннымБухгалтерскогоУчета(ФильтрСписокСчетов);
	
	ПересчитатьОстатки(Док);
	
	Док.ПоДаннымОрганизации.Сортировать("Дата,Документ,Представление,Договор");
КонецПроцедуры

Процедура ДействияФормыСформироватьАктыСверок(Кнопка)
	Ответ = Вопрос("Сформировать Акты сверок ?",РежимДиалогаВопрос.ДаНет,15,КодВозвратаДиалога.Нет);
	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	Если Организация.Пустая() или Ответственный.Пустая() Тогда
		Сообщить("Не выбрана Организация или Ответственный !!!");	
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НачПериода) или НЕ ЗначениеЗаполнено(КонПериода) или НЕ ЗначениеЗаполнено(ДатаАкта) Тогда
		Сообщить("Не выбраны даты формирования актов сверки !!!");	
		Возврат;
	КонецЕсли;	
	
	Для Каждого сТЧ из ТабДокументов Цикл
		Состояние(Строка(сТЧ.Контрагент));
		Если сТЧ.Контрагент.Пустая() или сТЧ.Валюта.Пустая() Тогда
			Сообщить("Не заполнен Контрагент или Валюта по строке № " + Строка(сТЧ.НомерСтроки));	
			Возврат;
		КонецЕсли;	
		
		Если сТЧ.АктСверки.Пустая() Тогда
			Док = Документы.АктСверкиВзаиморасчетов.СоздатьДокумент();
		Иначе
			Док = сТЧ.АктСверки.ПолучитьОбъект();
		КонецЕсли;
		Док.Дата = ДатаАкта;
		Док.ДатаНачала = НачПериода;
		Док.ДатаОкончания = КонПериода;
		Док.Организация = Организация;
		Док.Контрагент = сТЧ.Контрагент;
		Док.ДоговорКонтрагента = сТЧ.ДоговорКонтрагента;
		Док.ВалютаДокумента = сТЧ.Валюта;
		Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Док.ПредставительОрганизации = Ответственный;
		ЗаполнитьСписокСчетовЗначениямиПоУмолчанию(Док);
		
		КоманднаяПанельПоДаннымОрганизацииЗаполнитьПоДаннымБухгалтерскогоУчета(Док);
		
		Если Док.ПоДаннымОрганизации.Количество() <> 0 Тогда
			Док.Записать();
		КонецЕсли;	
		
		сТЧ.АктСверки = Док.Ссылка;
		сТЧ.ОстатокНаКонец = сТЧ.АктСверки.ОстатокНаНачало + сТЧ.АктСверки.ПоДаннымОрганизации.Итог("Дебет") -  сТЧ.АктСверки.ПоДаннымОрганизации.Итог("Кредит");

	КонецЦикла;	
КонецПроцедуры

Процедура ДействияФормыОтправитьПоЕмайл(Кнопка)
	Если Организация.Пустая() Тогда
		Сообщить("Не указана Организация !!!");
		Возврат;
	КонецЕсли;	
	Ответ = Вопрос("Отправить выбранные Акты сверок по e-mail ?",РежимДиалогаВопрос.ДаНет,15,КодВозвратаДиалога.Нет);
	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого сТабДокументов из ТабДокументов Цикл
		Если сТабДокументов.ОтправитьПоЕмайл Тогда
			Если сТабДокументов.АктСверки.Пустая() Тогда
				Сообщить("Не выбран Акт сверки !!!");
			КонецЕсли;	
			
			ТабДок = ПолучитьПечатнуюФормуАктаСверки(сТабДокументов.АктСверки);
			
			Успешно = Ложь;
			Если ТабДок <> Неопределено Тогда
				Успешно = ОтправитьПоЕмайл(ТабДок,сТабДокументов.АктСверки.Контрагент);
			КонецЕсли;
			
			Если Успешно Тогда
				сТабДокументов.ОтправитьПоЕмайл = Ложь;
				
				свОтправлен = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001");//Отправлен по e-mail
				Если НЕ свОтправлен.Пустая() Тогда
					Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
					Запись.Объект = сТабДокументов.АктСверки;
					Запись.Свойство = свОтправлен;
					Запись.Значение = Истина;
					Запись.Записать();
					сТабДокументов.УжеОтправлен = Истина;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ДействияФормыОтправитьУПДПоЕмайл(Кнопка)
	Если Организация.Пустая() Тогда
		Сообщить("Не указана Организация !!!");
		Возврат;
	КонецЕсли;	
	Ответ = Вопрос("Отправить выбранные УПД по e-mail ?",РежимДиалогаВопрос.ДаНет,15,КодВозвратаДиалога.Нет);
	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого сТабДокументов из ТабДокументов1 Цикл
		Если сТабДокументов.ОтправитьПоЕмайл Тогда
			Если сТабДокументов.РТУ.Пустая() Тогда
				Сообщить("Не выбран РТУ!");
			КонецЕсли;	
			
			ТабДок = ПолучитьПечатнуюФормуУПД(сТабДокументов.РТУ);
			
			Успешно = Ложь;
			Если ТабДок <> Неопределено Тогда
				Успешно = ОтправитьПоЕмайлРТУ(ТабДок,сТабДокументов.РТУ);
			КонецЕсли;
			
			Если Успешно Тогда
				сТабДокументов.ОтправитьПоЕмайл = Ложь;
				
				свОтправлен = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001");//Отправлен по e-mail
				Если НЕ свОтправлен.Пустая() Тогда
					Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
					Запись.Объект = сТабДокументов.РТУ;
					Запись.Свойство = свОтправлен;
					Запись.Значение = Истина;
					Запись.Записать();
					сТабДокументов.УжеОтправлен = Истина;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры

Процедура ПриОткрытии()
	СчетаПоУмолчанию = Новый Массив();
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоКраткосрочнымКредитамИЗаймам);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоДолгосрочнымКредитамИЗаймам);
	СчетаПоУмолчанию.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	
	Для Счетчик =1  По СчетаПоУмолчанию.Количество() Цикл
		СтрокаСчета = СписокСчетов.Добавить();
		СтрокаСчета.УчаствуетВРасчетах = Истина;
	КонецЦикла; 
	
	СписокСчетов.ЗагрузитьКолонку(СчетаПоУмолчанию,"Счет");
КонецПроцедуры

Процедура ДокументыКонтрагентПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда 
	
		ТекущийЭлемент.ТекущиеДанные.EMail  = ПолучитьЕмайлКонтрагента(Элемент.Значение);
	Иначе 
		ТекущийЭлемент.ТекущиеДанные.EMail  = "";	
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабДокументов1КонтрагентПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) Тогда 
	
		ТекущийЭлемент.ТекущиеДанные.EMail  = ПолучитьЕмайлКонтрагента(Элемент.Значение);
	Иначе 
		ТекущийЭлемент.ТекущиеДанные.EMail  = "";	
	КонецЕсли;

КонецПроцедуры

Процедура КоманднаяПанель1ОтметитьВсе(Кнопка)
	//Задача - удалить все строки из табличного поля ТаблицаРегистра, которые отобраны отбором
	//ТаблицаРегистра - табличное поле формы
	ТаблицаРегистра=ЭлементыФормы.Документы;
	//Т - данные элемента формы ТаблицаРегистра, имеют тип, например "РегистрНакопленияНаборЗаписей.ЗатратыБухгалтерскийУчет"
	Т=Неопределено; 
	Выполнить("Т="+ТаблицаРегистра.Данные);
	
	//Список строк, которые удаляем
	//СтрокиКУдалению=Новый Массив();
	
	//Перебираем все строки источника данных
	Для Каждого Стр ИЗ Т Цикл
		//Пробуем у табличного поля поставить в качестве текущей строки текущую строку источника данных
		//Такое присваивание работает как ни странно даже для типа  РегистрНакопленияЗапись.ЗатратыБухгалтерскийУчет
		//Т.е. даже для записей из набора записей работает
		ТаблицаРегистра.ТекущаяСтрока=Стр;
		
		//Если строка попадает в отбор, то текущая строка устанавливается, иначе остается прежней
		Если ТаблицаРегистра.ТекущаяСтрока=Стр Тогда
			Стр.ОтправитьПоЕмайл = Истина;
			// СтрокиКУдалению.Добавить(Стр); //Здесь логика алгоритма - то, что в отборе, нужно удалить
		КонецЕсли;
	КонецЦикла;
	//    //Перебираем 
	//     Для Каждого Стр ИЗ СтрокиКУдалению Цикл
	//        Т.Удалить(Стр); //Удаляем строку
	//     КонецЦикла;
	
	//Источник: http://erpsolution.ru/forum/showthread.php?t=528 
	//	
	
	//УстановитьОплатуСтрокТаблицы(ТабДокументов, Истина);
КонецПроцедуры

Процедура КоманднаяПанель1СнятьВсеОтметки(Кнопка)
	ТаблицаРегистра=ЭлементыФормы.Документы;
	Т=Неопределено; 
	Выполнить("Т="+ТаблицаРегистра.Данные);
	
	Для Каждого Стр ИЗ Т Цикл
		ТаблицаРегистра.ТекущаяСтрока=Стр;
		Если ТаблицаРегистра.ТекущаяСтрока=Стр Тогда
			Стр.ОтправитьПоЕмайл = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель4ОтметитьВсе(Кнопка)
	ТаблицаРегистра=ЭлементыФормы.ТабДокументов1;
	Т=Неопределено; 
	Выполнить("Т="+ТаблицаРегистра.Данные);
	
	Для Каждого Стр ИЗ Т Цикл
		ТаблицаРегистра.ТекущаяСтрока=Стр;
		Если ТаблицаРегистра.ТекущаяСтрока=Стр Тогда
			Стр.ОтправитьПоЕмайл = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель4СнятьВсеОтметки(Кнопка)
	ТаблицаРегистра=ЭлементыФормы.ТабДокументов1;
	Т=Неопределено; 
	Выполнить("Т="+ТаблицаРегистра.Данные);
	
	Для Каждого Стр ИЗ Т Цикл
		ТаблицаРегистра.ТекущаяСтрока=Стр;
		Если ТаблицаРегистра.ТекущаяСтрока=Стр Тогда
			Стр.ОтправитьПоЕмайл = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель5ОтметитьВсе(Кнопка)
	ТаблицаРегистра=ЭлементыФормы.ТабДокументов2;
	Т=Неопределено; 
	Выполнить("Т="+ТаблицаРегистра.Данные);
	
	Для Каждого Стр ИЗ Т Цикл
		ТаблицаРегистра.ТекущаяСтрока=Стр;
		Если ТаблицаРегистра.ТекущаяСтрока=Стр Тогда
			Стр.ОтправитьПоЕмайл = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура КоманднаяПанель5СнятьВсеОтметки(Кнопка)
	ТаблицаРегистра=ЭлементыФормы.ТабДокументов2;
	Т=Неопределено; 
	Выполнить("Т="+ТаблицаРегистра.Данные);
	
	Для Каждого Стр ИЗ Т Цикл
		ТаблицаРегистра.ТекущаяСтрока=Стр;
		Если ТаблицаРегистра.ТекущаяСтрока=Стр Тогда
			Стр.ОтправитьПоЕмайл = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ДействияФормыОтправитьСчетаПоЕмайл(Кнопка)
	Если Организация.Пустая() Тогда
		Сообщить("Не указана Организация !!!");
		Возврат;
	КонецЕсли;	
	Ответ = Вопрос("Отправить выбранные счета по e-mail ?",РежимДиалогаВопрос.ДаНет,15,КодВозвратаДиалога.Нет);
	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;	
	
	Для Каждого сТабДокументов из ТабДокументов2 Цикл
		Если сТабДокументов.ОтправитьПоЕмайл Тогда
			Если сТабДокументов.Счет.Пустая() Тогда
				Сообщить("Не выбран счет!");
			КонецЕсли;	
			
			ТабДок = сТабДокументов.Счет.ПолучитьОбъект().ПечатьСчетаЗаказа("Счет");
			
			Успешно = Ложь;
			Если ТабДок <> Неопределено Тогда
				Успешно = ОтправитьПоЕмайлСчет(ТабДок,сТабДокументов.Счет);
			КонецЕсли;
			
			Если Успешно Тогда
				сТабДокументов.ОтправитьПоЕмайл = Ложь;
				
				свОтправлен = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001");//Отправлен по e-mail
				Если НЕ свОтправлен.Пустая() Тогда
					Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
					Запись.Объект = сТабДокументов.Счет;
					Запись.Свойство = свОтправлен;
					Запись.Значение = Истина;
					Запись.Записать();
					сТабДокументов.УжеОтправлен = Истина;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	

КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьСчетамиНаОплату(Кнопка)
		Если Организация.Пустая() Тогда
		Сообщить("Не выбрана Организация !!!");	
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НачПериода) или НЕ ЗначениеЗаполнено(КонПериода) Тогда
		Сообщить("Не выбраны даты формирования счетов на оплату!");	
		Возврат;
	КонецЕсли;	
	
	//Заполним существующими счетами
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СчетНаОплатуПокупателю.Ссылка КАК Счет,
	               |	СчетНаОплатуПокупателю.Контрагент,
	               |	СчетНаОплатуПокупателю.СуммаДокумента КАК Сумма
	               |ИЗ
	               |	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	               |ГДЕ
	               |	СчетНаОплатуПокупателю.Дата >= &НачДата
	               |	И СчетНаОплатуПокупателю.Дата <= &КонДата
	               |	И СчетНаОплатуПокупателю.Организация = &Организация
	               |	И ВЫБОР
	               |			КОГДА &ЕстьФильтрПоПервойБукве
	               |				ТОГДА (ВЫРАЗИТЬ(СчетНаОплатуПокупателю.Контрагент.Наименование КАК СТРОКА(1))) = &ФильтрПоПервойБукве
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ";
	
	Запрос.УстановитьПараметр("НачДата", НачалоДня(НачПериода));
	Запрос.УстановитьПараметр("КонДата", КонецДня(КонПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ЕстьФильтрПоПервойБукве", СокрЛП(ФильтрПоПервойБуквеСчетаНаОплату) <> "");
	Запрос.УстановитьПараметр("ФильтрПоПервойБукве", ФильтрПоПервойБуквеСчетаНаОплату);
	
	ТабДокументов2.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого сТЧ из ТабДокументов2 Цикл
		сТЧ.EMail = ПолучитьЕмайлКонтрагента(сТЧ.Контрагент);
		свОтправлен = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("001");//Отправлен по e-mail
		Если НЕ свОтправлен.Пустая() Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	ЗначенияСвойствОбъектов.Объект,
			|	ЗначенияСвойствОбъектов.Свойство,
			|	ЗначенияСвойствОбъектов.Значение
			|ИЗ
			|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Объект = &Объект
			|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
			
			Запрос.УстановитьПараметр("Объект", сТЧ.Счет);
			Запрос.УстановитьПараметр("Свойство", свОтправлен);
			
			РезОтправлен = Ложь;
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			Пока Выборка.Следующий() Цикл
				РезОтправлен = Выборка.Значение;
			КонецЦикла;
			сТЧ.УжеОтправлен = РезОтправлен;
		КонецЕсли;	
	КонецЦикла;	

КонецПроцедуры
