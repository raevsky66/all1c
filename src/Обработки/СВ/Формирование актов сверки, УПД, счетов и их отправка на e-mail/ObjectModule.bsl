

Функция ОтправитьПочту(СтрПисьма) Экспорт   
	
	Если СокрЛП(СтрПисьма.АдресПолучателя) = "" Тогда
		Сообщить("Не указан адрес электронной почты получателя !!!");
		Возврат Ложь;
	КонецЕсли;	
	
		
	ПочтовыйПрофиль = Новый ИнтернетПочтовыйПрофиль;
    ПочтовыйПрофиль.АдресСервераSMTP = "smtp.mail.ru";
    ПочтовыйПрофиль.ПарольSMTP = "Abz123456sv1";
    ПочтовыйПрофиль.ПользовательSMTP = "abzsv@mail.ru";
	
    ПочтовыйПрофиль.ПортSMTP = 465;
	ПочтовыйПрофиль.ПортPOP3 = 995;
	ПочтовыйПрофиль.АутентификацияSMTP = СпособSMTPАутентификации.Login;
	ПочтовыйПрофиль.ИспользоватьSSLSMTP = Истина;
	ПочтовыйПрофиль.ИспользоватьSSLPOP3 = Истина;
	ПочтовыйПрофиль.ИспользоватьSSLSMTP = Истина;
	
	Почта = Новый ИнтернетПочта(); 
	Попытка 
		Почта.Подключиться(ПочтовыйПрофиль); 
	Исключение 
		Возврат Ложь; 
	КонецПопытки;
	
	Сообщение = новый ИнтернетПочтовоеСообщение;
	АдресОтправителя = "abzsv@mail.ru";
	 	
	МассивПолучатели = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СтрПисьма.АдресПолучателя, ";");
    
	 Для Каждого Элемент Из МассивПолучатели Цикл
        Получатель = Сообщение.Получатели.Добавить(Элемент);
		Адрес	= Сообщение.Получатели.Добавить(Элемент, );
    КонецЦикла;
//	Адрес	= Сообщение.Получатели.Добавить(СтрПисьма.АдресПолучателя, );
	Сообщение.Отправитель.Адрес					= АдресОтправителя;
	Сообщение.Отправитель.ОтображаемоеИмя		= АдресОтправителя;
	Сообщение.Тема								=  СокрЛП(СтрПисьма.ТемаСообщения);   
	Сообщение.ОбратныйАдрес.Добавить(АдресОтправителя);
	Сообщение.Вложения.Добавить(СтрПисьма.Отчет,СокрЛП(СтрПисьма.ИмяФайлаВложения) + ".XLS");
	Сообщение.Тексты.Добавить(СтрПисьма.ТекстСообщения);
	Попытка
		Почта.Послать(Сообщение);
	Исключение
		Сообщить("Сообщение по адресу "+Строка(СтрПисьма.АдресПолучателя)+" не отправлено!"+ОписаниеОшибки());
	КонецПопытки;

	
	Возврат Истина;
	
КонецФункции		

Функция ПолучитьЕмайлКонтрагента(Контрагент) Экспорт 
	Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
		Возврат Неопределено;
	КонецЕсли;
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	//|	ВидыКонтактнойИнформации.Ссылка КАК ВидКонтактнойИнформации
	//|ИЗ
	//|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	//|ГДЕ
	//|	ВидыКонтактнойИнформации.Тип = &Тип
	//|	И ВидыКонтактнойИнформации.ВидОбъектаКонтактнойИнформации = &ВидОбъектаКонтактнойИнформации";
	//
	//Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	//Запрос.УстановитьПараметр("ВидОбъектаКонтактнойИнформации", Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты);
	//
	//Результат = Запрос.Выполнить();
	//Выборка = Результат.Выбрать();
	//ЕмайлКонтрагентаВид = Неопределено; 
	//Пока Выборка.Следующий() Цикл
	//	ЕмайлКонтрагентаВид = Выборка.ВидКонтактнойИнформации;
	//КонецЦикла;
	//
	//Если ЕмайлКонтрагентаВид = Неопределено Тогда
	//	Сообщить("Не найден вид контактной информации: Адрес электронной почты контрагента");
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Контрагент);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.НайтиПоНаименованию("Электронная почта"));
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Сообщить("Не найден e-mail для контрагента: " + Строка(Контрагент));
		Возврат Неопределено;
	КонецЕсли;
	ЕмайлКонтрагента = Неопределено;	
	Пока Выборка.Следующий() Цикл
		ЕмайлКонтрагента = СокрЛП(Выборка.Представление);	
	КонецЦикла;
	
	Возврат ЕмайлКонтрагента;
КонецФункции	

Функция ПолучитьДвоичныеДанные(ИмяФайла)

	Файл = Новый Файл(ИмяФайла);
	
	Если Файл.Существует() Тогда
		Данные = Новый ДвоичныеДанные(ИмяФайла);
		Попытка
			УдалитьФайлы(ИмяФайла);
		Исключение
		КонецПопытки;
		Возврат Данные;
	Иначе
		Возврат Неопределено;
	КонецЕсли; 
	

КонецФункции

Функция ОтправитьПоЕмайл(ТабДок, Контрагент) Экспорт
	Емайл = ПолучитьЕмайлКонтрагента(Контрагент);
	Если Емайл = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	ФайлВФорматеXLS = ПолучитьИмяВременногоФайла();
	ТабДок.Записать(ФайлВФорматеXLS, ТипФайлаТабличногоДокумента.XLS);
	
	ИмяФайлаВложения = "Акт сверки";
	//ТекстСообщения = "";
	ТемаСообщения = "Акт сверки: " + СокрЛП(Организация.Наименование) + " Просьба вернуть с подписью и печатью.";
	
	СтрПисьма = Новый Структура("АдресПолучателя,ИмяФайлаВложения,Отчет,ТекстСообщения,ТемаСообщения,ВысокаяВажность",
	Емайл,ИмяФайлаВложения,ПолучитьДвоичныеДанные(ФайлВФорматеXLS),ТекстСообщения,ТемаСообщения,Ложь);
	Если ОтправитьПочту(СтрПисьма) Тогда
		Возврат Истина;//Успешно
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ОтправитьПоЕмайлРТУ(ТабДок, РТУ) Экспорт
	Контрагент = РТУ.Контрагент;
	Емайл = ПолучитьЕмайлКонтрагента(Контрагент);
	Если Емайл = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	ФайлВФорматеXLS = ПолучитьИмяВременногоФайла();
	ТабДок.Записать(ФайлВФорматеXLS, ТипФайлаТабличногоДокумента.XLS);
	
	ИмяФайлаВложения = "УПД";
	//ТекстСообщения = "";
	ТемаСообщения = "УПД от "+РТУ.Организация + " за " + Формат(РТУ.Дата,"ДЛФ=DD") + " на сумму "+ Формат(РТУ.СуммаДокумента,"ЧЦ=15; ЧДЦ=2");
	
	СтрПисьма = Новый Структура("АдресПолучателя,ИмяФайлаВложения,Отчет,ТекстСообщения,ТемаСообщения,ВысокаяВажность",
	Емайл,ИмяФайлаВложения,ПолучитьДвоичныеДанные(ФайлВФорматеXLS),ТекстСообщения,ТемаСообщения,Ложь);
	Если ОтправитьПочту(СтрПисьма) Тогда
		Возврат Истина;//Успешно
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ОтправитьПоЕмайлСчет(ТабДок, Счет) Экспорт
	Контрагент = Счет.Контрагент;
	Емайл = ПолучитьЕмайлКонтрагента(Контрагент);
	Если Емайл = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	ФайлВФорматеXLS = ПолучитьИмяВременногоФайла();
	ТабДок.Записать(ФайлВФорматеXLS, ТипФайлаТабличногоДокумента.XLS);
	
	ИмяФайлаВложения = "Счет на оплату";
	//ТекстСообщения = "";
	ТемаСообщения = Счет.Организация.Наименование + ". Счет на оплату № "+ Строка(Число(Счет.Номер)) + " от " + Формат(Счет.Дата,"ДЛФ=DD") + " на сумму "+ Формат(Счет.СуммаДокумента,"ЧЦ=15; ЧДЦ=2");
	
	СтрПисьма = Новый Структура("АдресПолучателя,ИмяФайлаВложения,Отчет,ТекстСообщения,ТемаСообщения,ВысокаяВажность",
	Емайл,ИмяФайлаВложения,ПолучитьДвоичныеДанные(ФайлВФорматеXLS),ТекстСообщения,ТемаСообщения,Ложь);
	Если ОтправитьПочту(СтрПисьма) Тогда
		Возврат Истина;//Успешно
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции



Функция ПолучитьВнешнююОбработку(ИмяОтчета)
	ЭлСпр = Справочники.ВнешниеОбработки.НайтиПоНаименованию(ИмяОтчета); 
	Если ЭлСпр.Пустая() Тогда
		Сообщить("Не найден внешний отчет: " + ИмяОтчета);
		Возврат Неопределено;
	КонецЕсли;	
	ИмяФайла = КаталогВременныхФайлов() + "PrnForm.tmp";
	
	Попытка
		ДвоичныеДанные = ЭлСпр.ХранилищеВнешнейОбработки.Получить();
		ДвоичныеДанные.Записать(ИмяФайла);
		Если ЭлСпр.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда 
			Обработка = ВнешниеОтчеты.Создать(ИмяФайла);
		Иначе 	
			Обработка = ВнешниеОбработки.Создать(ИмяФайла);
		КонецЕсли;
		
		Возврат Обработка;
	Исключение
		Сообщить("Произошла ошибка! " + ОписаниеОшибки(),СтатусСообщения.Важное);
		Возврат Неопределено;
	КонецПопытки;
КонецФункции	

Функция ПолучитьПечатнуюФормуАктаСверки(Док) Экспорт
	Если НЕ ЗначениеЗаполнено(Док) Тогда
		Сообщить("Не выбран Акт сверки !!!");
		Возврат Неопределено;
	КонецЕсли;	
	
	Спр = ПолучитьВнешнююОбработку("Акт сверки (внешний)");	
	Если Спр = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Спр.СсылкаНаОбъект = Док;
	
	ТабДок = Спр.Печать();
	
	Возврат ТабДок;
КонецФункции	

Функция ОпределитьСчетФактураТребуется(Док) Экспорт
	
	Отказ = Ложь;
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Док.ДоговорКонтрагента, "ВидДоговора");
	ЕстьНДС = (Док.Товары.Итог("СуммаНДС") > 0) ИЛИ (Док.Услуги.Итог("СуммаНДС") > 0) ИЛИ (Док.АгентскиеУслуги.Итог("СуммаНДС") > 0);
	
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(Док.Дата, Отказ, Док.Организация);
	
	Если Отказ Тогда
		Возврат Ложь;
	ИначеЕсли УчетнаяПолитика.УСН 
		ИЛИ УчетнаяПолитика.ОсобыйПорядокНалогообложения Тогда
		Возврат ЕстьНДС;
	ИначеЕсли ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
		Возврат Ложь;
	ИначеЕсли Док.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ОтгрузкаБезПереходаПраваСобственности Тогда
		Если УчетнаяПолитика.НачислятьНДСПоОтгрузке Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	ИначеЕсли НЕ ЕстьНДС И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС Тогда
		Возврат Ложь;
	Иначе	
		Возврат Истина;
	КонецЕсли;

КонецФункции

Функция ПолучитьПечатнуюФормуУПД(Док) Экспорт
	Если НЕ ЗначениеЗаполнено(Док) Тогда
		Сообщить("Не выбран УПД!");
		Возврат Неопределено;
	КонецЕсли;	
	
	Спр = ПолучитьВнешнююОбработку("Акт сверки (внешний)");	
	Если Спр = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	Спр.СсылкаНаОбъект = Док;
	
	
	мВалютаРегламентированногоУчета   = Константы.ВалютаРегламентированногоУчета.Получить(); 
	ДанныеДокумента = Новый Структура();
	ДанныеДокумента.Вставить("ДокументСсылка",    				Док.Ссылка);
	ДанныеДокумента.Вставить("Номер",             				Док.Номер);
	ДанныеДокумента.Вставить("Дата",              				Док.Дата);
	ДанныеДокумента.Вставить("Ссылка", 			  				Документы.СчетФактураВыданный.ПустаяСсылка());
	ДанныеДокумента.Вставить("ДокументОснование", 				Док.Ссылка);
	ДанныеДокумента.Вставить("Организация",   	  				Док.Организация);
	ДанныеДокумента.Вставить("Контрагент", 		  				Док.Контрагент);
	ДанныеДокумента.Вставить("ДоговорКонтрагента", 		  		Док.ДоговорКонтрагента);
	ДанныеДокумента.Вставить("Руководитель", 	  				Док.Руководитель);
	ДанныеДокумента.Вставить("ГлавныйБухгалтер",  				Док.ГлавныйБухгалтер);
	ДанныеДокумента.Вставить("ВалютаРегламентированногоУчета",  мВалютаРегламентированногоУчета);
	ВидДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Док.ДоговорКонтрагента, "ВидДоговора");
	ПередачаНаРеализациюПоКомиссии = (Док.ВидОперации = Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия)
		И (ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	ДанныеДокумента.Вставить("ПередачаНаРеализациюПоКомиссии",  ПередачаНаРеализациюПоКомиссии);
	
	СчетФактураТребуется = ОпределитьСчетФактураТребуется(Док);
	
	СтруктураОтбораСчетаФактуры = Новый Структура;
	СтруктураОтбораСчетаФактуры.Вставить("ПометкаУдаления", Ложь);
	
	ТабДок = УчетНДС.ПечатьУниверсальногоПередаточногоДокумента(ДанныеДокумента, СчетФактураТребуется, СтруктураОтбораСчетаФактуры);


//	
//	
//	ТабДок = Спр.Печать();
	
	Возврат ТабДок;
КонецФункции	

